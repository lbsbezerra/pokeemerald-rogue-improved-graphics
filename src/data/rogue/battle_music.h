//
// DO NOT EDIT THIS FILE
// This file was generated using Pokabbie\CustomJson from 'src/data/rogue/battle_music.json'
//

enum
{
    _BATTLE_MUSIC_UNKNOWN_START = BATTLE_MUSIC_UNKNOWN_START - 1,
#ifndef BATTLE_MUSIC_ALOLA_BOSS
    BATTLE_MUSIC_ALOLA_BOSS,
#endif
#ifndef BATTLE_MUSIC_BATTLE_SIMULATOR
    BATTLE_MUSIC_BATTLE_SIMULATOR,
#endif
#ifndef BATTLE_MUSIC_GALAR_BOSS
    BATTLE_MUSIC_GALAR_BOSS,
#endif
#ifndef BATTLE_MUSIC_HOENN_BOSS
    BATTLE_MUSIC_HOENN_BOSS,
#endif
#ifndef BATTLE_MUSIC_HOENN_CHAMPION
    BATTLE_MUSIC_HOENN_CHAMPION,
#endif
#ifndef BATTLE_MUSIC_HOENN_ELITE
    BATTLE_MUSIC_HOENN_ELITE,
#endif
#ifndef BATTLE_MUSIC_HOENN_RIVAL
    BATTLE_MUSIC_HOENN_RIVAL,
#endif
#ifndef BATTLE_MUSIC_JOHTO_BOSS
    BATTLE_MUSIC_JOHTO_BOSS,
#endif
#ifndef BATTLE_MUSIC_JOHTO_CHAMPION
    BATTLE_MUSIC_JOHTO_CHAMPION,
#endif
#ifndef BATTLE_MUSIC_JOHTO_ELITE
    BATTLE_MUSIC_JOHTO_ELITE,
#endif
#ifndef BATTLE_MUSIC_JOHTO_RIVAL
    BATTLE_MUSIC_JOHTO_RIVAL,
#endif
#ifndef BATTLE_MUSIC_KALOS_BOSS
    BATTLE_MUSIC_KALOS_BOSS,
#endif
#ifndef BATTLE_MUSIC_KANTO_BOSS
    BATTLE_MUSIC_KANTO_BOSS,
#endif
#ifndef BATTLE_MUSIC_KANTO_CHAMPION
    BATTLE_MUSIC_KANTO_CHAMPION,
#endif
#ifndef BATTLE_MUSIC_KANTO_ELITE
    BATTLE_MUSIC_KANTO_ELITE,
#endif
#ifndef BATTLE_MUSIC_KANTO_RIVAL
    BATTLE_MUSIC_KANTO_RIVAL,
#endif
#ifndef BATTLE_MUSIC_LEGENDARY_ARCEUS
    BATTLE_MUSIC_LEGENDARY_ARCEUS,
#endif
#ifndef BATTLE_MUSIC_LEGENDARY_BATTLE
    BATTLE_MUSIC_LEGENDARY_BATTLE,
#endif
#ifndef BATTLE_MUSIC_LEGENDARY_DIALGA_PALKIA
    BATTLE_MUSIC_LEGENDARY_DIALGA_PALKIA,
#endif
#ifndef BATTLE_MUSIC_LEGENDARY_ENTEI
    BATTLE_MUSIC_LEGENDARY_ENTEI,
#endif
#ifndef BATTLE_MUSIC_LEGENDARY_GIRATINA
    BATTLE_MUSIC_LEGENDARY_GIRATINA,
#endif
#ifndef BATTLE_MUSIC_LEGENDARY_HO_OH
    BATTLE_MUSIC_LEGENDARY_HO_OH,
#endif
#ifndef BATTLE_MUSIC_LEGENDARY_LAKE_GUARDIANS
    BATTLE_MUSIC_LEGENDARY_LAKE_GUARDIANS,
#endif
#ifndef BATTLE_MUSIC_LEGENDARY_LUGIA
    BATTLE_MUSIC_LEGENDARY_LUGIA,
#endif
#ifndef BATTLE_MUSIC_LEGENDARY_MEW
    BATTLE_MUSIC_LEGENDARY_MEW,
#endif
#ifndef BATTLE_MUSIC_LEGENDARY_MEWTWO
    BATTLE_MUSIC_LEGENDARY_MEWTWO,
#endif
#ifndef BATTLE_MUSIC_LEGENDARY_RAIKOU
    BATTLE_MUSIC_LEGENDARY_RAIKOU,
#endif
#ifndef BATTLE_MUSIC_LEGENDARY_REGI
    BATTLE_MUSIC_LEGENDARY_REGI,
#endif
#ifndef BATTLE_MUSIC_LEGENDARY_SPACE
    BATTLE_MUSIC_LEGENDARY_SPACE,
#endif
#ifndef BATTLE_MUSIC_LEGENDARY_SUICUNE
    BATTLE_MUSIC_LEGENDARY_SUICUNE,
#endif
#ifndef BATTLE_MUSIC_LEGENDARY_WEATHER_TRIO
    BATTLE_MUSIC_LEGENDARY_WEATHER_TRIO,
#endif
#ifndef BATTLE_MUSIC_PALDEA_BOSS
    BATTLE_MUSIC_PALDEA_BOSS,
#endif
#ifndef BATTLE_MUSIC_ROGUE_BOSS
    BATTLE_MUSIC_ROGUE_BOSS,
#endif
#ifndef BATTLE_MUSIC_ROGUE_CHAMPION
    BATTLE_MUSIC_ROGUE_CHAMPION,
#endif
#ifndef BATTLE_MUSIC_ROGUE_ELITE
    BATTLE_MUSIC_ROGUE_ELITE,
#endif
#ifndef BATTLE_MUSIC_ROGUE_FINAL_CHAMPION
    BATTLE_MUSIC_ROGUE_FINAL_CHAMPION,
#endif
#ifndef BATTLE_MUSIC_ROGUE_RIVAL
    BATTLE_MUSIC_ROGUE_RIVAL,
#endif
#ifndef BATTLE_MUSIC_ROUTE_TRAINER
    BATTLE_MUSIC_ROUTE_TRAINER,
#endif
#ifndef BATTLE_MUSIC_ROUTE_TRAINER_COOL
    BATTLE_MUSIC_ROUTE_TRAINER_COOL,
#endif
#ifndef BATTLE_MUSIC_ROUTE_TRAINER_FEMALE
    BATTLE_MUSIC_ROUTE_TRAINER_FEMALE,
#endif
#ifndef BATTLE_MUSIC_ROUTE_TRAINER_GIRL
    BATTLE_MUSIC_ROUTE_TRAINER_GIRL,
#endif
#ifndef BATTLE_MUSIC_ROUTE_TRAINER_HIKER
    BATTLE_MUSIC_ROUTE_TRAINER_HIKER,
#endif
#ifndef BATTLE_MUSIC_ROUTE_TRAINER_INTENSE
    BATTLE_MUSIC_ROUTE_TRAINER_INTENSE,
#endif
#ifndef BATTLE_MUSIC_ROUTE_TRAINER_RICH
    BATTLE_MUSIC_ROUTE_TRAINER_RICH,
#endif
#ifndef BATTLE_MUSIC_ROUTE_TRAINER_SUSPICIOUS
    BATTLE_MUSIC_ROUTE_TRAINER_SUSPICIOUS,
#endif
#ifndef BATTLE_MUSIC_SINNOH_BOSS
    BATTLE_MUSIC_SINNOH_BOSS,
#endif
#ifndef BATTLE_MUSIC_SINNOH_CHAMPION
    BATTLE_MUSIC_SINNOH_CHAMPION,
#endif
#ifndef BATTLE_MUSIC_SINNOH_ELITE
    BATTLE_MUSIC_SINNOH_ELITE,
#endif
#ifndef BATTLE_MUSIC_SINNOH_RIVAL
    BATTLE_MUSIC_SINNOH_RIVAL,
#endif
#ifndef BATTLE_MUSIC_TEAM_AQUA
    BATTLE_MUSIC_TEAM_AQUA,
#endif
#ifndef BATTLE_MUSIC_TEAM_AQUA_MAGMA_LEADER
    BATTLE_MUSIC_TEAM_AQUA_MAGMA_LEADER,
#endif
#ifndef BATTLE_MUSIC_TEAM_GALACTIC
    BATTLE_MUSIC_TEAM_GALACTIC,
#endif
#ifndef BATTLE_MUSIC_TEAM_GALACTIC_LEADER
    BATTLE_MUSIC_TEAM_GALACTIC_LEADER,
#endif
#ifndef BATTLE_MUSIC_TEAM_MAGMA
    BATTLE_MUSIC_TEAM_MAGMA,
#endif
#ifndef BATTLE_MUSIC_TEAM_ROCKET
    BATTLE_MUSIC_TEAM_ROCKET,
#endif
#ifndef BATTLE_MUSIC_TEAM_ROCKET_LEADER
    BATTLE_MUSIC_TEAM_ROCKET_LEADER,
#endif
#ifndef BATTLE_MUSIC_UNOVA_BOSS
    BATTLE_MUSIC_UNOVA_BOSS,
#endif
#ifndef BATTLE_MUSIC_WILD_BATTLE
    BATTLE_MUSIC_WILD_BATTLE,
#endif
};

static const struct RogueBattleMusicRedirect gRogueTrainerMusicRedirect_0[] =
{
    {
    .redirectType = REDIRECT_PARAM_NONE,
    .redirectParam = 0,
    .musicPlayer = BATTLE_MUSIC_HOENN_BOSS,
    },
};

static const struct RogueBattleMusicRedirect gRogueTrainerMusicRedirect_1[] =
{
    {
    .redirectType = REDIRECT_PARAM_NONE,
    .redirectParam = 0,
    .musicPlayer = BATTLE_MUSIC_SINNOH_BOSS,
    },
};

static const struct RogueBattleMusicRedirect gRogueTrainerMusicRedirect_2[] =
{
    {
    .redirectType = REDIRECT_PARAM_TRAINER_CLASS,
    .redirectParam = TRAINER_CLASS_RIVAL,
    .musicPlayer = BATTLE_MUSIC_HOENN_RIVAL,
    },
    {
    .redirectType = REDIRECT_PARAM_TRAINER_CLASS,
    .redirectParam = TRAINER_CLASS_ELITE_FOUR,
    .musicPlayer = BATTLE_MUSIC_HOENN_ELITE,
    },
    {
    .redirectType = REDIRECT_PARAM_TRAINER_CLASS,
    .redirectParam = TRAINER_CLASS_CHAMPION,
    .musicPlayer = BATTLE_MUSIC_HOENN_CHAMPION,
    },
};

static const struct RogueBattleMusicRedirect gRogueTrainerMusicRedirect_3[] =
{
    {
    .redirectType = REDIRECT_PARAM_TRAINER_CLASS,
    .redirectParam = TRAINER_CLASS_RIVAL,
    .musicPlayer = BATTLE_MUSIC_JOHTO_RIVAL,
    },
    {
    .redirectType = REDIRECT_PARAM_TRAINER_CLASS,
    .redirectParam = TRAINER_CLASS_ELITE_FOUR,
    .musicPlayer = BATTLE_MUSIC_JOHTO_ELITE,
    },
    {
    .redirectType = REDIRECT_PARAM_TRAINER_CLASS,
    .redirectParam = TRAINER_CLASS_CHAMPION,
    .musicPlayer = BATTLE_MUSIC_JOHTO_CHAMPION,
    },
};

static const struct RogueBattleMusicRedirect gRogueTrainerMusicRedirect_4[] =
{
    {
    .redirectType = REDIRECT_PARAM_NONE,
    .redirectParam = 0,
    .musicPlayer = BATTLE_MUSIC_JOHTO_BOSS,
    },
};

static const struct RogueBattleMusicRedirect gRogueTrainerMusicRedirect_5[] =
{
    {
    .redirectType = REDIRECT_PARAM_TRAINER_CLASS,
    .redirectParam = TRAINER_CLASS_RIVAL,
    .musicPlayer = BATTLE_MUSIC_KANTO_RIVAL,
    },
    {
    .redirectType = REDIRECT_PARAM_TRAINER_CLASS,
    .redirectParam = TRAINER_CLASS_ELITE_FOUR,
    .musicPlayer = BATTLE_MUSIC_KANTO_ELITE,
    },
    {
    .redirectType = REDIRECT_PARAM_TRAINER_CLASS,
    .redirectParam = TRAINER_CLASS_CHAMPION,
    .musicPlayer = BATTLE_MUSIC_KANTO_CHAMPION,
    },
};

static const struct RogueBattleMusicRedirect gRogueTrainerMusicRedirect_6[] =
{
#ifdef SPECIES_MEW
    {
    .redirectType = REDIRECT_PARAM_SPECIES,
    .redirectParam = SPECIES_MEW,
    .musicPlayer = BATTLE_MUSIC_LEGENDARY_MEW,
    },
#endif
#ifdef SPECIES_MEWTWO
    {
    .redirectType = REDIRECT_PARAM_SPECIES,
    .redirectParam = SPECIES_MEWTWO,
    .musicPlayer = BATTLE_MUSIC_LEGENDARY_MEWTWO,
    },
#endif
#ifdef SPECIES_RAIKOU
    {
    .redirectType = REDIRECT_PARAM_SPECIES,
    .redirectParam = SPECIES_RAIKOU,
    .musicPlayer = BATTLE_MUSIC_LEGENDARY_RAIKOU,
    },
#endif
#ifdef SPECIES_ENTEI
    {
    .redirectType = REDIRECT_PARAM_SPECIES,
    .redirectParam = SPECIES_ENTEI,
    .musicPlayer = BATTLE_MUSIC_LEGENDARY_ENTEI,
    },
#endif
#ifdef SPECIES_SUICUNE
    {
    .redirectType = REDIRECT_PARAM_SPECIES,
    .redirectParam = SPECIES_SUICUNE,
    .musicPlayer = BATTLE_MUSIC_LEGENDARY_SUICUNE,
    },
#endif
#ifdef SPECIES_HO_OH
    {
    .redirectType = REDIRECT_PARAM_SPECIES,
    .redirectParam = SPECIES_HO_OH,
    .musicPlayer = BATTLE_MUSIC_LEGENDARY_HO_OH,
    },
#endif
#ifdef SPECIES_LUGIA
    {
    .redirectType = REDIRECT_PARAM_SPECIES,
    .redirectParam = SPECIES_LUGIA,
    .musicPlayer = BATTLE_MUSIC_LEGENDARY_LUGIA,
    },
#endif
#ifdef SPECIES_GROUDON
    {
    .redirectType = REDIRECT_PARAM_SPECIES,
    .redirectParam = SPECIES_GROUDON,
    .musicPlayer = BATTLE_MUSIC_LEGENDARY_WEATHER_TRIO,
    },
#endif
#ifdef SPECIES_KYOGRE
    {
    .redirectType = REDIRECT_PARAM_SPECIES,
    .redirectParam = SPECIES_KYOGRE,
    .musicPlayer = BATTLE_MUSIC_LEGENDARY_WEATHER_TRIO,
    },
#endif
#ifdef SPECIES_RAYQUAZA
    {
    .redirectType = REDIRECT_PARAM_SPECIES,
    .redirectParam = SPECIES_RAYQUAZA,
    .musicPlayer = BATTLE_MUSIC_LEGENDARY_WEATHER_TRIO,
    },
#endif
#ifdef SPECIES_JIRACHI
    {
    .redirectType = REDIRECT_PARAM_SPECIES,
    .redirectParam = SPECIES_JIRACHI,
    .musicPlayer = BATTLE_MUSIC_LEGENDARY_SPACE,
    },
#endif
#ifdef SPECIES_DEOXYS
    {
    .redirectType = REDIRECT_PARAM_SPECIES,
    .redirectParam = SPECIES_DEOXYS,
    .musicPlayer = BATTLE_MUSIC_LEGENDARY_SPACE,
    },
#endif
#ifdef SPECIES_REGIROCK
    {
    .redirectType = REDIRECT_PARAM_SPECIES,
    .redirectParam = SPECIES_REGIROCK,
    .musicPlayer = BATTLE_MUSIC_LEGENDARY_REGI,
    },
#endif
#ifdef SPECIES_REGICE
    {
    .redirectType = REDIRECT_PARAM_SPECIES,
    .redirectParam = SPECIES_REGICE,
    .musicPlayer = BATTLE_MUSIC_LEGENDARY_REGI,
    },
#endif
#ifdef SPECIES_REGISTEEL
    {
    .redirectType = REDIRECT_PARAM_SPECIES,
    .redirectParam = SPECIES_REGISTEEL,
    .musicPlayer = BATTLE_MUSIC_LEGENDARY_REGI,
    },
#endif
#ifdef SPECIES_REGIGIGAS
    {
    .redirectType = REDIRECT_PARAM_SPECIES,
    .redirectParam = SPECIES_REGIGIGAS,
    .musicPlayer = BATTLE_MUSIC_LEGENDARY_REGI,
    },
#endif
#ifdef SPECIES_REGIELEKI
    {
    .redirectType = REDIRECT_PARAM_SPECIES,
    .redirectParam = SPECIES_REGIELEKI,
    .musicPlayer = BATTLE_MUSIC_LEGENDARY_REGI,
    },
#endif
#ifdef SPECIES_REGIDRAGO
    {
    .redirectType = REDIRECT_PARAM_SPECIES,
    .redirectParam = SPECIES_REGIDRAGO,
    .musicPlayer = BATTLE_MUSIC_LEGENDARY_REGI,
    },
#endif
#ifdef SPECIES_UXIE
    {
    .redirectType = REDIRECT_PARAM_SPECIES,
    .redirectParam = SPECIES_UXIE,
    .musicPlayer = BATTLE_MUSIC_LEGENDARY_LAKE_GUARDIANS,
    },
#endif
#ifdef SPECIES_MESPRIT
    {
    .redirectType = REDIRECT_PARAM_SPECIES,
    .redirectParam = SPECIES_MESPRIT,
    .musicPlayer = BATTLE_MUSIC_LEGENDARY_LAKE_GUARDIANS,
    },
#endif
#ifdef SPECIES_AZELF
    {
    .redirectType = REDIRECT_PARAM_SPECIES,
    .redirectParam = SPECIES_AZELF,
    .musicPlayer = BATTLE_MUSIC_LEGENDARY_LAKE_GUARDIANS,
    },
#endif
#ifdef SPECIES_DIALGA
    {
    .redirectType = REDIRECT_PARAM_SPECIES,
    .redirectParam = SPECIES_DIALGA,
    .musicPlayer = BATTLE_MUSIC_LEGENDARY_DIALGA_PALKIA,
    },
#endif
#ifdef SPECIES_PALKIA
    {
    .redirectType = REDIRECT_PARAM_SPECIES,
    .redirectParam = SPECIES_PALKIA,
    .musicPlayer = BATTLE_MUSIC_LEGENDARY_DIALGA_PALKIA,
    },
#endif
#ifdef SPECIES_ARCEUS
    {
    .redirectType = REDIRECT_PARAM_SPECIES,
    .redirectParam = SPECIES_ARCEUS,
    .musicPlayer = BATTLE_MUSIC_LEGENDARY_ARCEUS,
    },
#endif
#ifdef SPECIES_GIRATINA
    {
    .redirectType = REDIRECT_PARAM_SPECIES,
    .redirectParam = SPECIES_GIRATINA,
    .musicPlayer = BATTLE_MUSIC_LEGENDARY_GIRATINA,
    },
#endif
};

static const struct RogueBattleMusicRedirect gRogueTrainerMusicRedirect_7[] =
{
    {
    .redirectType = REDIRECT_PARAM_NONE,
    .redirectParam = 0,
    .musicPlayer = BATTLE_MUSIC_JOHTO_BOSS,
    },
};

static const struct RogueBattleMusicRedirect gRogueTrainerMusicRedirect_8[] =
{
    {
    .redirectType = REDIRECT_PARAM_TRAINER_CLASS,
    .redirectParam = TRAINER_CLASS_RIVAL,
    .musicPlayer = BATTLE_MUSIC_ROGUE_RIVAL,
    },
    {
    .redirectType = REDIRECT_PARAM_TRAINER_CLASS,
    .redirectParam = TRAINER_CLASS_ELITE_FOUR,
    .musicPlayer = BATTLE_MUSIC_ROGUE_ELITE,
    },
    {
    .redirectType = REDIRECT_PARAM_TRAINER_CLASS,
    .redirectParam = TRAINER_CLASS_CHAMPION,
    .musicPlayer = BATTLE_MUSIC_ROGUE_CHAMPION,
    },
};

static const struct RogueBattleMusicRedirect gRogueTrainerMusicRedirect_9[] =
{
    {
    .redirectType = REDIRECT_PARAM_TRAINER_CLASS,
    .redirectParam = TRAINER_CLASS_PKMN_BREEDER,
    .musicPlayer = BATTLE_MUSIC_ROUTE_TRAINER_FEMALE,
    },
    {
    .redirectType = REDIRECT_PARAM_TRAINER_CLASS,
    .redirectParam = TRAINER_CLASS_BEAUTY,
    .musicPlayer = BATTLE_MUSIC_ROUTE_TRAINER_FEMALE,
    },
    {
    .redirectType = REDIRECT_PARAM_TRAINER_CLASS,
    .redirectParam = TRAINER_CLASS_COOLTRAINER,
    .musicPlayer = BATTLE_MUSIC_ROUTE_TRAINER_COOL,
    },
    {
    .redirectType = REDIRECT_PARAM_TRAINER_CLASS,
    .redirectParam = TRAINER_CLASS_BIRD_KEEPER,
    .musicPlayer = BATTLE_MUSIC_ROUTE_TRAINER_COOL,
    },
    {
    .redirectType = REDIRECT_PARAM_TRAINER_CLASS,
    .redirectParam = TRAINER_CLASS_PSYCHIC,
    .musicPlayer = BATTLE_MUSIC_ROUTE_TRAINER_INTENSE,
    },
    {
    .redirectType = REDIRECT_PARAM_TRAINER_CLASS,
    .redirectParam = TRAINER_CLASS_EXPERT,
    .musicPlayer = BATTLE_MUSIC_ROUTE_TRAINER_INTENSE,
    },
    {
    .redirectType = REDIRECT_PARAM_TRAINER_CLASS,
    .redirectParam = TRAINER_CLASS_BLACK_BELT,
    .musicPlayer = BATTLE_MUSIC_ROUTE_TRAINER_INTENSE,
    },
    {
    .redirectType = REDIRECT_PARAM_TRAINER_CLASS,
    .redirectParam = TRAINER_CLASS_DRAGON_TAMER,
    .musicPlayer = BATTLE_MUSIC_ROUTE_TRAINER_INTENSE,
    },
    {
    .redirectType = REDIRECT_PARAM_TRAINER_CLASS,
    .redirectParam = TRAINER_CLASS_TUBER_M,
    .musicPlayer = BATTLE_MUSIC_ROUTE_TRAINER_GIRL,
    },
    {
    .redirectType = REDIRECT_PARAM_TRAINER_CLASS,
    .redirectParam = TRAINER_CLASS_TUBER_F,
    .musicPlayer = BATTLE_MUSIC_ROUTE_TRAINER_GIRL,
    },
    {
    .redirectType = REDIRECT_PARAM_TRAINER_CLASS,
    .redirectParam = TRAINER_CLASS_SCHOOL_KID,
    .musicPlayer = BATTLE_MUSIC_ROUTE_TRAINER_GIRL,
    },
    {
    .redirectType = REDIRECT_PARAM_TRAINER_CLASS,
    .redirectParam = TRAINER_CLASS_HIKER,
    .musicPlayer = BATTLE_MUSIC_ROUTE_TRAINER_HIKER,
    },
    {
    .redirectType = REDIRECT_PARAM_TRAINER_CLASS,
    .redirectParam = TRAINER_CLASS_RUIN_MANIAC,
    .musicPlayer = BATTLE_MUSIC_ROUTE_TRAINER_HIKER,
    },
    {
    .redirectType = REDIRECT_PARAM_TRAINER_CLASS,
    .redirectParam = TRAINER_CLASS_COLLECTOR,
    .musicPlayer = BATTLE_MUSIC_ROUTE_TRAINER_SUSPICIOUS,
    },
    {
    .redirectType = REDIRECT_PARAM_TRAINER_CLASS,
    .redirectParam = TRAINER_CLASS_HEX_MANIAC,
    .musicPlayer = BATTLE_MUSIC_ROUTE_TRAINER_SUSPICIOUS,
    },
    {
    .redirectType = REDIRECT_PARAM_TRAINER_CLASS,
    .redirectParam = TRAINER_CLASS_RICH_BOY,
    .musicPlayer = BATTLE_MUSIC_ROUTE_TRAINER_RICH,
    },
    {
    .redirectType = REDIRECT_PARAM_TRAINER_CLASS,
    .redirectParam = TRAINER_CLASS_GENTLEMAN,
    .musicPlayer = BATTLE_MUSIC_ROUTE_TRAINER_RICH,
    },
    {
    .redirectType = REDIRECT_PARAM_TRAINER_CLASS,
    .redirectParam = TRAINER_CLASS_BIKER,
    .musicPlayer = BATTLE_MUSIC_ROUTE_TRAINER_INTENSE,
    },
};

static const struct RogueBattleMusicRedirect gRogueTrainerMusicRedirect_10[] =
{
    {
    .redirectType = REDIRECT_PARAM_TRAINER_CLASS,
    .redirectParam = TRAINER_CLASS_RIVAL,
    .musicPlayer = BATTLE_MUSIC_SINNOH_RIVAL,
    },
    {
    .redirectType = REDIRECT_PARAM_TRAINER_CLASS,
    .redirectParam = TRAINER_CLASS_ELITE_FOUR,
    .musicPlayer = BATTLE_MUSIC_SINNOH_ELITE,
    },
    {
    .redirectType = REDIRECT_PARAM_TRAINER_CLASS,
    .redirectParam = TRAINER_CLASS_CHAMPION,
    .musicPlayer = BATTLE_MUSIC_SINNOH_CHAMPION,
    },
};

static const struct RogueBattleMusicRedirect gRogueTrainerMusicRedirect_11[] =
{
    {
    .redirectType = REDIRECT_PARAM_TRAINER_CLASS,
    .redirectParam = TRAINER_CLASS_AQUA_LEADER,
    .musicPlayer = BATTLE_MUSIC_TEAM_AQUA_MAGMA_LEADER,
    },
};

static const struct RogueBattleMusicRedirect gRogueTrainerMusicRedirect_12[] =
{
    {
    .redirectType = REDIRECT_PARAM_TRAINER_CLASS,
    .redirectParam = TRAINER_CLASS_TEAM_GALACTIC_LEADER,
    .musicPlayer = BATTLE_MUSIC_TEAM_GALACTIC_LEADER,
    },
};

static const struct RogueBattleMusicRedirect gRogueTrainerMusicRedirect_13[] =
{
    {
    .redirectType = REDIRECT_PARAM_TRAINER_CLASS,
    .redirectParam = TRAINER_CLASS_MAGMA_LEADER,
    .musicPlayer = BATTLE_MUSIC_TEAM_AQUA_MAGMA_LEADER,
    },
};

static const struct RogueBattleMusicRedirect gRogueTrainerMusicRedirect_14[] =
{
    {
    .redirectType = REDIRECT_PARAM_TRAINER_CLASS,
    .redirectParam = TRAINER_CLASS_TEAM_ROCKET_LEADER,
    .musicPlayer = BATTLE_MUSIC_TEAM_ROCKET_LEADER,
    },
};

static const struct RogueBattleMusicRedirect gRogueTrainerMusicRedirect_15[] =
{
    {
    .redirectType = REDIRECT_PARAM_NONE,
    .redirectParam = 0,
    .musicPlayer = BATTLE_MUSIC_KANTO_BOSS,
    },
};


const struct RogueBattleMusic gRogueTrainerMusic[] =
{
    [BATTLE_MUSIC_ALOLA_BOSS]
{
    .encounterMusic = MUS_NONE,
    .battleMusic = MUS_NONE,
    .victoryMusic = MUS_NONE,
    .redirects = gRogueTrainerMusicRedirect_0,
    .redirectCount = ARRAY_COUNT(gRogueTrainerMusicRedirect_0),
    },
    [BATTLE_MUSIC_BATTLE_SIMULATOR]
{
    .encounterMusic = MUS_HG_ENCOUNTER_BOY_1,
    .battleMusic = MUS_HG_VS_TRAINER,
    .victoryMusic = MUS_HG_VICTORY_TRAINER,
    },
    [BATTLE_MUSIC_GALAR_BOSS]
{
    .encounterMusic = MUS_NONE,
    .battleMusic = MUS_NONE,
    .victoryMusic = MUS_NONE,
    .redirects = gRogueTrainerMusicRedirect_1,
    .redirectCount = ARRAY_COUNT(gRogueTrainerMusicRedirect_1),
    },
    [BATTLE_MUSIC_HOENN_BOSS]
{
    .encounterMusic = MUS_ENCOUNTER_INTENSE,
    .battleMusic = MUS_VS_GYM_LEADER,
    .victoryMusic = MUS_VICTORY_GYM_LEADER,
    .redirects = gRogueTrainerMusicRedirect_2,
    .redirectCount = ARRAY_COUNT(gRogueTrainerMusicRedirect_2),
    },
    [BATTLE_MUSIC_HOENN_CHAMPION]
{
    .encounterMusic = MUS_ENCOUNTER_CHAMPION,
    .battleMusic = MUS_VS_CHAMPION,
    .victoryMusic = MUS_VICTORY_LEAGUE,
    },
    [BATTLE_MUSIC_HOENN_ELITE]
{
    .encounterMusic = MUS_ENCOUNTER_ELITE_FOUR,
    .battleMusic = MUS_VS_ELITE_FOUR,
    .victoryMusic = MUS_VICTORY_LEAGUE,
    },
    [BATTLE_MUSIC_HOENN_RIVAL]
{
    .encounterMusic = MUS_ENCOUNTER_BRENDAN,
    .battleMusic = MUS_VS_RIVAL,
    .victoryMusic = MUS_VICTORY_TRAINER,
    },
    [BATTLE_MUSIC_JOHTO_BOSS]
{
    .encounterMusic = MUS_HG_ENCOUNTER_BOY_1,
    .battleMusic = MUS_HG_VS_GYM_LEADER,
    .victoryMusic = MUS_HG_VICTORY_GYM_LEADER,
    .redirects = gRogueTrainerMusicRedirect_3,
    .redirectCount = ARRAY_COUNT(gRogueTrainerMusicRedirect_3),
    },
    [BATTLE_MUSIC_JOHTO_CHAMPION]
{
    .encounterMusic = MUS_HG_ENCOUNTER_BOY_1,
    .battleMusic = MUS_HG_VS_CHAMPION,
    .victoryMusic = MUS_HG_VICTORY_GYM_LEADER,
    },
    [BATTLE_MUSIC_JOHTO_ELITE]
{
    .encounterMusic = MUS_HG_ENCOUNTER_BOY_1,
    .battleMusic = MUS_HG_VS_GYM_LEADER,
    .victoryMusic = MUS_HG_VICTORY_GYM_LEADER,
    },
    [BATTLE_MUSIC_JOHTO_RIVAL]
{
    .encounterMusic = MUS_HG_ENCOUNTER_RIVAL,
    .battleMusic = MUS_HG_VS_RIVAL,
    .victoryMusic = MUS_HG_VICTORY_TRAINER,
    },
    [BATTLE_MUSIC_KALOS_BOSS]
{
    .encounterMusic = MUS_NONE,
    .battleMusic = MUS_NONE,
    .victoryMusic = MUS_NONE,
    .redirects = gRogueTrainerMusicRedirect_4,
    .redirectCount = ARRAY_COUNT(gRogueTrainerMusicRedirect_4),
    },
    [BATTLE_MUSIC_KANTO_BOSS]
{
    .encounterMusic = MUS_RG_ENCOUNTER_GYM_LEADER,
    .battleMusic = MUS_RG_VS_GYM_LEADER,
    .victoryMusic = MUS_RG_VICTORY_GYM_LEADER,
    .redirects = gRogueTrainerMusicRedirect_5,
    .redirectCount = ARRAY_COUNT(gRogueTrainerMusicRedirect_5),
    },
    [BATTLE_MUSIC_KANTO_CHAMPION]
{
    .encounterMusic = MUS_RG_ENCOUNTER_GYM_LEADER,
    .battleMusic = MUS_RG_VS_CHAMPION,
    .victoryMusic = MUS_VICTORY_LEAGUE,
    },
    [BATTLE_MUSIC_KANTO_ELITE]
{
    .encounterMusic = MUS_RG_ENCOUNTER_GYM_LEADER,
    .battleMusic = MUS_RG_VS_GYM_LEADER,
    .victoryMusic = MUS_RG_VICTORY_GYM_LEADER,
    },
    [BATTLE_MUSIC_KANTO_RIVAL]
{
    .encounterMusic = MUS_RG_ENCOUNTER_RIVAL,
    .battleMusic = MUS_RG_VS_TRAINER,
    .victoryMusic = MUS_RG_VICTORY_TRAINER,
    },
    [BATTLE_MUSIC_LEGENDARY_ARCEUS]
{
    .encounterMusic = MUS_NONE,
    .battleMusic = MUS_DP_VS_ARCEUS,
    .victoryMusic = MUS_DP_VICTORY_WILD,
    },
    [BATTLE_MUSIC_LEGENDARY_BATTLE]
{
    .encounterMusic = MUS_NONE,
    .battleMusic = MUS_RG_VS_LEGEND,
    .victoryMusic = MUS_VICTORY_WILD,
    .redirects = gRogueTrainerMusicRedirect_6,
    .redirectCount = ARRAY_COUNT(gRogueTrainerMusicRedirect_6),
    },
    [BATTLE_MUSIC_LEGENDARY_DIALGA_PALKIA]
{
    .encounterMusic = MUS_NONE,
    .battleMusic = MUS_DP_VS_DIALGA_PALKIA,
    .victoryMusic = MUS_DP_VICTORY_WILD,
    },
    [BATTLE_MUSIC_LEGENDARY_ENTEI]
{
    .encounterMusic = MUS_NONE,
    .battleMusic = MUS_HG_VS_ENTEI,
    .victoryMusic = MUS_VICTORY_WILD,
    },
    [BATTLE_MUSIC_LEGENDARY_GIRATINA]
{
    .encounterMusic = MUS_NONE,
    .battleMusic = MUS_PL_VS_GIRATINA,
    .victoryMusic = MUS_DP_VICTORY_WILD,
    },
    [BATTLE_MUSIC_LEGENDARY_HO_OH]
{
    .encounterMusic = MUS_NONE,
    .battleMusic = MUS_HG_VS_HO_OH,
    .victoryMusic = MUS_VICTORY_WILD,
    },
    [BATTLE_MUSIC_LEGENDARY_LAKE_GUARDIANS]
{
    .encounterMusic = MUS_NONE,
    .battleMusic = MUS_DP_VS_UXIE_MESPRIT_AZELF,
    .victoryMusic = MUS_DP_VICTORY_WILD,
    },
    [BATTLE_MUSIC_LEGENDARY_LUGIA]
{
    .encounterMusic = MUS_NONE,
    .battleMusic = MUS_HG_VS_LUGIA,
    .victoryMusic = MUS_VICTORY_WILD,
    },
    [BATTLE_MUSIC_LEGENDARY_MEW]
{
    .encounterMusic = MUS_NONE,
    .battleMusic = MUS_VS_MEW,
    .victoryMusic = MUS_VICTORY_WILD,
    },
    [BATTLE_MUSIC_LEGENDARY_MEWTWO]
{
    .encounterMusic = MUS_NONE,
    .battleMusic = MUS_RG_VS_MEWTWO,
    .victoryMusic = MUS_VICTORY_WILD,
    },
    [BATTLE_MUSIC_LEGENDARY_RAIKOU]
{
    .encounterMusic = MUS_NONE,
    .battleMusic = MUS_HG_VS_RAIKOU,
    .victoryMusic = MUS_VICTORY_WILD,
    },
    [BATTLE_MUSIC_LEGENDARY_REGI]
{
    .encounterMusic = MUS_NONE,
    .battleMusic = MUS_VS_REGI,
    .victoryMusic = MUS_VICTORY_WILD,
    },
    [BATTLE_MUSIC_LEGENDARY_SPACE]
{
    .encounterMusic = MUS_NONE,
    .battleMusic = MUS_RG_VS_DEOXYS,
    .victoryMusic = MUS_VICTORY_WILD,
    },
    [BATTLE_MUSIC_LEGENDARY_SUICUNE]
{
    .encounterMusic = MUS_NONE,
    .battleMusic = MUS_HG_VS_SUICUNE,
    .victoryMusic = MUS_VICTORY_WILD,
    },
    [BATTLE_MUSIC_LEGENDARY_WEATHER_TRIO]
{
    .encounterMusic = MUS_NONE,
    .battleMusic = MUS_VS_KYOGRE_GROUDON,
    .victoryMusic = MUS_VICTORY_WILD,
    },
    [BATTLE_MUSIC_PALDEA_BOSS]
{
    .encounterMusic = MUS_NONE,
    .battleMusic = MUS_NONE,
    .victoryMusic = MUS_NONE,
    .redirects = gRogueTrainerMusicRedirect_7,
    .redirectCount = ARRAY_COUNT(gRogueTrainerMusicRedirect_7),
    },
    [BATTLE_MUSIC_ROGUE_BOSS]
{
    .encounterMusic = MUS_DP_ENCOUNTER_INTENSE,
    .battleMusic = MUS_HG_VS_GYM_LEADER_KANTO,
    .victoryMusic = MUS_HG_VICTORY_GYM_LEADER,
    .redirects = gRogueTrainerMusicRedirect_8,
    .redirectCount = ARRAY_COUNT(gRogueTrainerMusicRedirect_8),
    },
    [BATTLE_MUSIC_ROGUE_CHAMPION]
{
    .encounterMusic = MUS_RG_ENCOUNTER_GYM_LEADER,
    .battleMusic = MUS_RG_VS_CHAMPION,
    .victoryMusic = MUS_DP_VICTORY_CHAMPION,
    },
    [BATTLE_MUSIC_ROGUE_ELITE]
{
    .encounterMusic = MUS_DP_ENCOUNTER_ELITE_FOUR,
    .battleMusic = MUS_DP_VS_ELITE_FOUR,
    .victoryMusic = MUS_DP_VICTORY_ELITE_FOUR,
    },
    [BATTLE_MUSIC_ROGUE_FINAL_CHAMPION]
{
    .encounterMusic = MUS_NONE,
    .battleMusic = MUS_HG_VS_FRONTIER_BRAIN,
    .victoryMusic = MUS_HG_VICTORY_FRONTIER_BRAIN,
    },
    [BATTLE_MUSIC_ROGUE_RIVAL]
{
    .encounterMusic = MUS_PL_MYSTERY_GIFT,
    .battleMusic = MUS_HG_VS_TRAINER_KANTO,
    .victoryMusic = MUS_DP_VICTORY_TRAINER,
    },
    [BATTLE_MUSIC_ROUTE_TRAINER]
{
    .encounterMusic = MUS_ENCOUNTER_MALE,
    .battleMusic = MUS_VS_TRAINER,
    .victoryMusic = MUS_VICTORY_TRAINER,
    .redirects = gRogueTrainerMusicRedirect_9,
    .redirectCount = ARRAY_COUNT(gRogueTrainerMusicRedirect_9),
    },
    [BATTLE_MUSIC_ROUTE_TRAINER_COOL]
{
    .encounterMusic = MUS_ENCOUNTER_COOL,
    .battleMusic = MUS_VS_TRAINER,
    .victoryMusic = MUS_VICTORY_TRAINER,
    },
    [BATTLE_MUSIC_ROUTE_TRAINER_FEMALE]
{
    .encounterMusic = MUS_ENCOUNTER_FEMALE,
    .battleMusic = MUS_VS_TRAINER,
    .victoryMusic = MUS_VICTORY_TRAINER,
    },
    [BATTLE_MUSIC_ROUTE_TRAINER_GIRL]
{
    .encounterMusic = MUS_ENCOUNTER_GIRL,
    .battleMusic = MUS_VS_TRAINER,
    .victoryMusic = MUS_VICTORY_TRAINER,
    },
    [BATTLE_MUSIC_ROUTE_TRAINER_HIKER]
{
    .encounterMusic = MUS_ENCOUNTER_HIKER,
    .battleMusic = MUS_VS_TRAINER,
    .victoryMusic = MUS_VICTORY_TRAINER,
    },
    [BATTLE_MUSIC_ROUTE_TRAINER_INTENSE]
{
    .encounterMusic = MUS_ENCOUNTER_INTENSE,
    .battleMusic = MUS_VS_TRAINER,
    .victoryMusic = MUS_VICTORY_TRAINER,
    },
    [BATTLE_MUSIC_ROUTE_TRAINER_RICH]
{
    .encounterMusic = MUS_ENCOUNTER_RICH,
    .battleMusic = MUS_VS_TRAINER,
    .victoryMusic = MUS_VICTORY_TRAINER,
    },
    [BATTLE_MUSIC_ROUTE_TRAINER_SUSPICIOUS]
{
    .encounterMusic = MUS_ENCOUNTER_SUSPICIOUS,
    .battleMusic = MUS_VS_TRAINER,
    .victoryMusic = MUS_VICTORY_TRAINER,
    },
    [BATTLE_MUSIC_SINNOH_BOSS]
{
    .encounterMusic = MUS_DP_ENCOUNTER_INTENSE,
    .battleMusic = MUS_DP_VS_GYM_LEADER,
    .victoryMusic = MUS_DP_VICTORY_GYM_LEADER,
    .redirects = gRogueTrainerMusicRedirect_10,
    .redirectCount = ARRAY_COUNT(gRogueTrainerMusicRedirect_10),
    },
    [BATTLE_MUSIC_SINNOH_CHAMPION]
{
    .encounterMusic = MUS_DP_ENCOUNTER_CHAMPION,
    .battleMusic = MUS_DP_VS_CHAMPION,
    .victoryMusic = MUS_DP_VICTORY_CHAMPION,
    },
    [BATTLE_MUSIC_SINNOH_ELITE]
{
    .encounterMusic = MUS_DP_ENCOUNTER_ELITE_FOUR,
    .battleMusic = MUS_DP_VS_ELITE_FOUR,
    .victoryMusic = MUS_DP_VICTORY_ELITE_FOUR,
    },
    [BATTLE_MUSIC_SINNOH_RIVAL]
{
    .encounterMusic = MUS_DP_ENCOUNTER_ACE_TRAINER,
    .battleMusic = MUS_DP_VS_RIVAL,
    .victoryMusic = MUS_DP_VICTORY_TRAINER,
    },
    [BATTLE_MUSIC_TEAM_AQUA]
{
    .encounterMusic = MUS_ENCOUNTER_AQUA,
    .battleMusic = MUS_VS_AQUA_MAGMA,
    .victoryMusic = MUS_VICTORY_AQUA_MAGMA,
    .redirects = gRogueTrainerMusicRedirect_11,
    .redirectCount = ARRAY_COUNT(gRogueTrainerMusicRedirect_11),
    },
    [BATTLE_MUSIC_TEAM_AQUA_MAGMA_LEADER]
{
    .encounterMusic = MUS_RG_ENCOUNTER_GYM_LEADER,
    .battleMusic = MUS_VS_AQUA_MAGMA_LEADER,
    .victoryMusic = MUS_VICTORY_AQUA_MAGMA,
    },
    [BATTLE_MUSIC_TEAM_GALACTIC]
{
    .encounterMusic = MUS_DP_ENCOUNTER_GALACTIC,
    .battleMusic = MUS_DP_VS_GALACTIC,
    .victoryMusic = MUS_DP_VICTORY_GALACTIC,
    .redirects = gRogueTrainerMusicRedirect_12,
    .redirectCount = ARRAY_COUNT(gRogueTrainerMusicRedirect_12),
    },
    [BATTLE_MUSIC_TEAM_GALACTIC_LEADER]
{
    .encounterMusic = MUS_DP_ENCOUNTER_INTENSE,
    .battleMusic = MUS_DP_VS_GALACTIC_BOSS,
    .victoryMusic = MUS_DP_VICTORY_GALACTIC,
    },
    [BATTLE_MUSIC_TEAM_MAGMA]
{
    .encounterMusic = MUS_ENCOUNTER_MAGMA,
    .battleMusic = MUS_VS_AQUA_MAGMA,
    .victoryMusic = MUS_VICTORY_AQUA_MAGMA,
    .redirects = gRogueTrainerMusicRedirect_13,
    .redirectCount = ARRAY_COUNT(gRogueTrainerMusicRedirect_13),
    },
    [BATTLE_MUSIC_TEAM_ROCKET]
{
    .encounterMusic = MUS_RG_ENCOUNTER_ROCKET,
    .battleMusic = MUS_RG_VS_TRAINER,
    .victoryMusic = MUS_RG_VICTORY_TRAINER,
    .redirects = gRogueTrainerMusicRedirect_14,
    .redirectCount = ARRAY_COUNT(gRogueTrainerMusicRedirect_14),
    },
    [BATTLE_MUSIC_TEAM_ROCKET_LEADER]
{
    .encounterMusic = MUS_RG_ENCOUNTER_GYM_LEADER,
    .battleMusic = MUS_RG_VS_TRAINER,
    .victoryMusic = MUS_RG_VICTORY_TRAINER,
    },
    [BATTLE_MUSIC_UNOVA_BOSS]
{
    .encounterMusic = MUS_NONE,
    .battleMusic = MUS_NONE,
    .victoryMusic = MUS_NONE,
    .redirects = gRogueTrainerMusicRedirect_15,
    .redirectCount = ARRAY_COUNT(gRogueTrainerMusicRedirect_15),
    },
    [BATTLE_MUSIC_WILD_BATTLE]
{
    .encounterMusic = MUS_NONE,
    .battleMusic = MUS_VS_WILD,
    .victoryMusic = MUS_VICTORY_WILD,
    },
};

