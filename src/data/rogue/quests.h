//
// DO NOT EDIT THIS FILE
// This file was generated using Pokabbie\CustomJson from 'src/data/rogue/quests.json'
//

static u8 const sTitle_TO_ADVENTUREEMARK_0[] = _("To Adventure!");
extern const u8 gQuestDescText_TO_ADVENTUREEMARK_0[];

static u8 const sCustomPopupTitle_TO_ADVENTUREEMARK_0_3[] = _("Adventure Stats");
static u8 const sCustomPopupSubtitle_TO_ADVENTUREEMARK_0_3[] = _("{COLOR LIGHT_BLUE}{SHADOW BLUE}Page Unlocked");

static struct CustomPopup const sCustomPopup_TO_ADVENTUREEMARK_0_3 = 
{
    .titleStr = sCustomPopupTitle_TO_ADVENTUREEMARK_0_3,
    .subtitleStr = sCustomPopupSubtitle_TO_ADVENTUREEMARK_0_3,
    .itemIcon = ITEM_QUEST_LOG,
    .soundEffect = 0,
    .fanfare = MUS_RG_OBTAIN_KEY_ITEM,
};

static struct RogueQuestReward const sRewards_TO_ADVENTUREEMARK_0[] = 
{
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_MONEY,
        .perType = {
            .money = {
                .amount = QUEST_REWARD_SMALL_MONEY,
            }
        }
    },
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_ITEM,
        .perType = {
            .item = {
                .item = ITEM_BUILDING_SUPPLIES,
                .count = QUEST_REWARD_SMALL_BUILD_AMOUNT,
            }
        }
    },
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_QUEST_UNLOCK,
        .perType = {
            .questUnlock = {
                .questId = QUEST_ID_WELCOME_HOME,
            }
        }
    },
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = &sCustomPopup_TO_ADVENTUREEMARK_0_3,
        .type = QUEST_REWARD_FLAG,
        .perType = {
            .flag = {
                .flagId = FLAG_ROGUE_STUB,
            }
        }
    },
};
static u16 const sTriggerParams_TO_ADVENTUREEMARK_0_0[] = 
{
};
static struct RogueQuestTrigger const sTriggers_TO_ADVENTUREEMARK_0[] = 
{
    {
        .callback = QuestCondition_Always,
        .passState = QUEST_STATUS_SUCCESS,
        .failState = QUEST_STATUS_PENDING,
        .flags = 0 | QUEST_TRIGGER_RUN_END,
        .params = sTriggerParams_TO_ADVENTUREEMARK_0_0,
        .paramCount = ARRAY_COUNT(sTriggerParams_TO_ADVENTUREEMARK_0_0),
    },
};

static u8 const sTitle_GYM_BADGE_1_1[] = _("Gym Badge 1");
extern const u8 gQuestDescText_GYM_BADGE_1_1[];

static struct RogueQuestReward const sRewards_GYM_BADGE_1_1[] = 
{
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_MONEY,
        .perType = {
            .money = {
                .amount = QUEST_REWARD_SMALL_MONEY,
            }
        }
    },
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_ITEM,
        .perType = {
            .item = {
                .item = ITEM_BUILDING_SUPPLIES,
                .count = QUEST_REWARD_SMALL_BUILD_AMOUNT,
            }
        }
    },
};
static u16 const sTriggerParams_GYM_BADGE_1_1_0[] = 
{
    ROGUE_GYM_START_DIFFICULTY + 0,
};
static struct RogueQuestTrigger const sTriggers_GYM_BADGE_1_1[] = 
{
    {
        .callback = QuestCondition_DifficultyGreaterThan,
        .passState = QUEST_STATUS_SUCCESS,
        .failState = QUEST_STATUS_PENDING,
        .flags = 0 | QUEST_TRIGGER_EARN_BADGE,
        .params = sTriggerParams_GYM_BADGE_1_1_0,
        .paramCount = ARRAY_COUNT(sTriggerParams_GYM_BADGE_1_1_0),
    },
};

static u8 const sTitle_GYM_BADGE_2_2[] = _("Gym Badge 2");
extern const u8 gQuestDescText_GYM_BADGE_2_2[];

static struct RogueQuestReward const sRewards_GYM_BADGE_2_2[] = 
{
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_MONEY,
        .perType = {
            .money = {
                .amount = QUEST_REWARD_SMALL_MONEY,
            }
        }
    },
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_ITEM,
        .perType = {
            .item = {
                .item = ITEM_BUILDING_SUPPLIES,
                .count = QUEST_REWARD_SMALL_BUILD_AMOUNT,
            }
        }
    },
};
static u16 const sTriggerParams_GYM_BADGE_2_2_0[] = 
{
    ROGUE_GYM_START_DIFFICULTY + 1,
};
static struct RogueQuestTrigger const sTriggers_GYM_BADGE_2_2[] = 
{
    {
        .callback = QuestCondition_DifficultyGreaterThan,
        .passState = QUEST_STATUS_SUCCESS,
        .failState = QUEST_STATUS_PENDING,
        .flags = 0 | QUEST_TRIGGER_EARN_BADGE,
        .params = sTriggerParams_GYM_BADGE_2_2_0,
        .paramCount = ARRAY_COUNT(sTriggerParams_GYM_BADGE_2_2_0),
    },
};

static u8 const sTitle_GYM_BADGE_3_3[] = _("Gym Badge 3");
extern const u8 gQuestDescText_GYM_BADGE_3_3[];

static struct RogueQuestReward const sRewards_GYM_BADGE_3_3[] = 
{
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_MONEY,
        .perType = {
            .money = {
                .amount = QUEST_REWARD_SMALL_MONEY,
            }
        }
    },
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_ITEM,
        .perType = {
            .item = {
                .item = ITEM_BUILDING_SUPPLIES,
                .count = QUEST_REWARD_SMALL_BUILD_AMOUNT,
            }
        }
    },
};
static u16 const sTriggerParams_GYM_BADGE_3_3_0[] = 
{
    ROGUE_GYM_START_DIFFICULTY + 2,
};
static struct RogueQuestTrigger const sTriggers_GYM_BADGE_3_3[] = 
{
    {
        .callback = QuestCondition_DifficultyGreaterThan,
        .passState = QUEST_STATUS_SUCCESS,
        .failState = QUEST_STATUS_PENDING,
        .flags = 0 | QUEST_TRIGGER_EARN_BADGE,
        .params = sTriggerParams_GYM_BADGE_3_3_0,
        .paramCount = ARRAY_COUNT(sTriggerParams_GYM_BADGE_3_3_0),
    },
};

static u8 const sTitle_GYM_BADGE_4_4[] = _("Gym Badge 4");
extern const u8 gQuestDescText_GYM_BADGE_4_4[];

static struct RogueQuestReward const sRewards_GYM_BADGE_4_4[] = 
{
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_MONEY,
        .perType = {
            .money = {
                .amount = QUEST_REWARD_SMALL_MONEY,
            }
        }
    },
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_ITEM,
        .perType = {
            .item = {
                .item = ITEM_BUILDING_SUPPLIES,
                .count = QUEST_REWARD_SMALL_BUILD_AMOUNT,
            }
        }
    },
};
static u16 const sTriggerParams_GYM_BADGE_4_4_0[] = 
{
    ROGUE_GYM_START_DIFFICULTY + 3,
};
static struct RogueQuestTrigger const sTriggers_GYM_BADGE_4_4[] = 
{
    {
        .callback = QuestCondition_DifficultyGreaterThan,
        .passState = QUEST_STATUS_SUCCESS,
        .failState = QUEST_STATUS_PENDING,
        .flags = 0 | QUEST_TRIGGER_EARN_BADGE,
        .params = sTriggerParams_GYM_BADGE_4_4_0,
        .paramCount = ARRAY_COUNT(sTriggerParams_GYM_BADGE_4_4_0),
    },
};

static u8 const sTitle_GYM_BADGE_5_5[] = _("Gym Badge 5");
extern const u8 gQuestDescText_GYM_BADGE_5_5[];

static struct RogueQuestReward const sRewards_GYM_BADGE_5_5[] = 
{
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_MONEY,
        .perType = {
            .money = {
                .amount = QUEST_REWARD_SMALL_MONEY,
            }
        }
    },
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_ITEM,
        .perType = {
            .item = {
                .item = ITEM_BUILDING_SUPPLIES,
                .count = QUEST_REWARD_SMALL_BUILD_AMOUNT,
            }
        }
    },
};
static u16 const sTriggerParams_GYM_BADGE_5_5_0[] = 
{
    ROGUE_GYM_START_DIFFICULTY + 4,
};
static struct RogueQuestTrigger const sTriggers_GYM_BADGE_5_5[] = 
{
    {
        .callback = QuestCondition_DifficultyGreaterThan,
        .passState = QUEST_STATUS_SUCCESS,
        .failState = QUEST_STATUS_PENDING,
        .flags = 0 | QUEST_TRIGGER_EARN_BADGE,
        .params = sTriggerParams_GYM_BADGE_5_5_0,
        .paramCount = ARRAY_COUNT(sTriggerParams_GYM_BADGE_5_5_0),
    },
};

static u8 const sTitle_GYM_BADGE_6_6[] = _("Gym Badge 6");
extern const u8 gQuestDescText_GYM_BADGE_6_6[];

static struct RogueQuestReward const sRewards_GYM_BADGE_6_6[] = 
{
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_MONEY,
        .perType = {
            .money = {
                .amount = QUEST_REWARD_SMALL_MONEY,
            }
        }
    },
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_ITEM,
        .perType = {
            .item = {
                .item = ITEM_BUILDING_SUPPLIES,
                .count = QUEST_REWARD_SMALL_BUILD_AMOUNT,
            }
        }
    },
};
static u16 const sTriggerParams_GYM_BADGE_6_6_0[] = 
{
    ROGUE_GYM_START_DIFFICULTY + 5,
};
static struct RogueQuestTrigger const sTriggers_GYM_BADGE_6_6[] = 
{
    {
        .callback = QuestCondition_DifficultyGreaterThan,
        .passState = QUEST_STATUS_SUCCESS,
        .failState = QUEST_STATUS_PENDING,
        .flags = 0 | QUEST_TRIGGER_EARN_BADGE,
        .params = sTriggerParams_GYM_BADGE_6_6_0,
        .paramCount = ARRAY_COUNT(sTriggerParams_GYM_BADGE_6_6_0),
    },
};

static u8 const sTitle_GYM_BADGE_7_7[] = _("Gym Badge 7");
extern const u8 gQuestDescText_GYM_BADGE_7_7[];

static struct RogueQuestReward const sRewards_GYM_BADGE_7_7[] = 
{
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_MONEY,
        .perType = {
            .money = {
                .amount = QUEST_REWARD_SMALL_MONEY,
            }
        }
    },
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_ITEM,
        .perType = {
            .item = {
                .item = ITEM_BUILDING_SUPPLIES,
                .count = QUEST_REWARD_SMALL_BUILD_AMOUNT,
            }
        }
    },
};
static u16 const sTriggerParams_GYM_BADGE_7_7_0[] = 
{
    ROGUE_GYM_START_DIFFICULTY + 6,
};
static struct RogueQuestTrigger const sTriggers_GYM_BADGE_7_7[] = 
{
    {
        .callback = QuestCondition_DifficultyGreaterThan,
        .passState = QUEST_STATUS_SUCCESS,
        .failState = QUEST_STATUS_PENDING,
        .flags = 0 | QUEST_TRIGGER_EARN_BADGE,
        .params = sTriggerParams_GYM_BADGE_7_7_0,
        .paramCount = ARRAY_COUNT(sTriggerParams_GYM_BADGE_7_7_0),
    },
};

static u8 const sTitle_GYM_BADGE_8_8[] = _("Gym Badge 8");
extern const u8 gQuestDescText_GYM_BADGE_8_8[];

static struct RogueQuestReward const sRewards_GYM_BADGE_8_8[] = 
{
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_MONEY,
        .perType = {
            .money = {
                .amount = QUEST_REWARD_SMALL_MONEY,
            }
        }
    },
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_ITEM,
        .perType = {
            .item = {
                .item = ITEM_BUILDING_SUPPLIES,
                .count = QUEST_REWARD_SMALL_BUILD_AMOUNT,
            }
        }
    },
};
static u16 const sTriggerParams_GYM_BADGE_8_8_0[] = 
{
    ROGUE_GYM_START_DIFFICULTY + 7,
};
static struct RogueQuestTrigger const sTriggers_GYM_BADGE_8_8[] = 
{
    {
        .callback = QuestCondition_DifficultyGreaterThan,
        .passState = QUEST_STATUS_SUCCESS,
        .failState = QUEST_STATUS_PENDING,
        .flags = 0 | QUEST_TRIGGER_EARN_BADGE,
        .params = sTriggerParams_GYM_BADGE_8_8_0,
        .paramCount = ARRAY_COUNT(sTriggerParams_GYM_BADGE_8_8_0),
    },
};

static u8 const sTitle_ELITE_MASTER_9[] = _("Elite Master");
extern const u8 gQuestDescText_ELITE_MASTER_9[];

static struct RogueQuestReward const sRewards_ELITE_MASTER_9[] = 
{
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_MONEY,
        .perType = {
            .money = {
                .amount = QUEST_REWARD_LARGE_MONEY,
            }
        }
    },
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_ITEM,
        .perType = {
            .item = {
                .item = ITEM_BUILDING_SUPPLIES,
                .count = QUEST_REWARD_SMALL_BUILD_AMOUNT,
            }
        }
    },
};
static u16 const sTriggerParams_ELITE_MASTER_9_0[] = 
{
    ROGUE_ELITE_START_DIFFICULTY + 3,
};
static struct RogueQuestTrigger const sTriggers_ELITE_MASTER_9[] = 
{
    {
        .callback = QuestCondition_DifficultyGreaterThan,
        .passState = QUEST_STATUS_SUCCESS,
        .failState = QUEST_STATUS_PENDING,
        .flags = 0 | QUEST_TRIGGER_EARN_BADGE,
        .params = sTriggerParams_ELITE_MASTER_9_0,
        .paramCount = ARRAY_COUNT(sTriggerParams_ELITE_MASTER_9_0),
    },
};

static u8 const sTitle_CHAMPION_10[] = _("Champion");
extern const u8 gQuestDescText_CHAMPION_10[];

static u8 const sCustomPopupTitle_CHAMPION_10_2[] = _("Victory Lap");
static u8 const sCustomPopupSubtitle_CHAMPION_10_2[] = _("{COLOR LIGHT_BLUE}{SHADOW BLUE}Feature Unlocked!");

static struct CustomPopup const sCustomPopup_CHAMPION_10_2 = 
{
    .titleStr = sCustomPopupTitle_CHAMPION_10_2,
    .subtitleStr = sCustomPopupSubtitle_CHAMPION_10_2,
    .itemIcon = ITEM_VS_SEEKER,
    .soundEffect = 0,
    .fanfare = MUS_RG_OBTAIN_KEY_ITEM,
};

static struct RogueQuestReward const sRewards_CHAMPION_10[] = 
{
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_MONEY,
        .perType = {
            .money = {
                .amount = QUEST_REWARD_LARGE_MONEY,
            }
        }
    },
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_ITEM,
        .perType = {
            .item = {
                .item = ITEM_BUILDING_SUPPLIES,
                .count = QUEST_REWARD_SMALL_BUILD_AMOUNT,
            }
        }
    },
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = &sCustomPopup_CHAMPION_10_2,
        .type = QUEST_REWARD_FLAG,
        .perType = {
            .flag = {
                .flagId = FLAG_ROGUE_UNLOCKED_VICTORY_LAP,
            }
        }
    },
};
static u16 const sTriggerParams_CHAMPION_10_0[] = 
{
};
static struct RogueQuestTrigger const sTriggers_CHAMPION_10[] = 
{
    {
        .callback = QuestCondition_Always,
        .passState = QUEST_STATUS_SUCCESS,
        .failState = QUEST_STATUS_PENDING,
        .flags = 0 | QUEST_TRIGGER_ENTER_HALL_OF_FAME,
        .params = sTriggerParams_CHAMPION_10_0,
        .paramCount = ARRAY_COUNT(sTriggerParams_CHAMPION_10_0),
    },
};

static u8 const sTitle_WELCOME_HOME_11[] = _("Welcome Home");
extern const u8 gQuestDescText_WELCOME_HOME_11[];

static u8 const sCustomPopupTitle_WELCOME_HOME_11_2[] = _("Town Map Upgrade");
static u8 const sCustomPopupSubtitle_WELCOME_HOME_11_2[] = _("{COLOR LIGHT_BLUE}{SHADOW BLUE}Teleport Unlocked!");

static struct CustomPopup const sCustomPopup_WELCOME_HOME_11_2 = 
{
    .titleStr = sCustomPopupTitle_WELCOME_HOME_11_2,
    .subtitleStr = sCustomPopupSubtitle_WELCOME_HOME_11_2,
    .itemIcon = ITEM_TOWN_MAP,
    .soundEffect = 0,
    .fanfare = MUS_RG_OBTAIN_KEY_ITEM,
};

static struct RogueQuestReward const sRewards_WELCOME_HOME_11[] = 
{
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_MONEY,
        .perType = {
            .money = {
                .amount = QUEST_REWARD_MEDIUM_MONEY,
            }
        }
    },
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_ITEM,
        .perType = {
            .item = {
                .item = ITEM_BUILDING_SUPPLIES,
                .count = QUEST_REWARD_MEDIUM_BUILD_AMOUNT,
            }
        }
    },
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = &sCustomPopup_WELCOME_HOME_11_2,
        .type = QUEST_REWARD_FLAG,
        .perType = {
            .flag = {
                .flagId = FLAG_ROGUE_UNLOCKED_MAP_TELEPORT,
            }
        }
    },
};
static u16 const sTriggerParams_WELCOME_HOME_11_0[] = 
{
};
static struct RogueQuestTrigger const sTriggers_WELCOME_HOME_11[] = 
{
    {
        .callback = QuestCondition_HasBuiltAllAreas,
        .passState = QUEST_STATUS_SUCCESS,
        .failState = QUEST_STATUS_PENDING,
        .flags = 0 | QUEST_TRIGGER_MISC_UPDATE,
        .params = sTriggerParams_WELCOME_HOME_11_0,
        .paramCount = ARRAY_COUNT(sTriggerParams_WELCOME_HOME_11_0),
    },
};

static u8 const sTitle_POST_GAMEQMARK_12[] = _("Post Game?");
extern const u8 gQuestDescText_POST_GAMEQMARK_12[];

static struct RogueQuestReward const sRewards_POST_GAMEQMARK_12[] = 
{
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_MONEY,
        .perType = {
            .money = {
                .amount = QUEST_REWARD_SMALL_MONEY,
            }
        }
    },
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_QUEST_UNLOCK,
        .perType = {
            .questUnlock = {
                .questId = QUEST_ID_REGIONAL_STYLE,
            }
        }
    },
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_QUEST_UNLOCK,
        .perType = {
            .questUnlock = {
                .questId = QUEST_ID_TYPE_MASTER,
            }
        }
    },
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_QUEST_UNLOCK,
        .perType = {
            .questUnlock = {
                .questId = QUEST_ID_ONE_LAST_QUEST,
            }
        }
    },
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_QUEST_UNLOCK,
        .perType = {
            .questUnlock = {
                .questId = QUEST_ID_TASTE_THE_RAINBOW,
            }
        }
    },
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_QUEST_UNLOCK,
        .perType = {
            .questUnlock = {
                .questId = QUEST_ID_LONG_HAUL,
            }
        }
    },
#if defined(ROGUE_EXPANSION)
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_QUEST_UNLOCK,
        .perType = {
            .questUnlock = {
                .questId = QUEST_ID_BATTLE_GIMMICK,
            }
        }
    },
#endif
#if defined(ROGUE_EXPANSION)
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_QUEST_UNLOCK,
        .perType = {
            .questUnlock = {
                .questId = QUEST_ID_MEGA_EVOLUTION,
            }
        }
    },
#endif
#if defined(ROGUE_EXPANSION)
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_QUEST_UNLOCK,
        .perType = {
            .questUnlock = {
                .questId = QUEST_ID_Z_MOVES,
            }
        }
    },
#endif
#if defined(ROGUE_EXPANSION)
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_QUEST_UNLOCK,
        .perType = {
            .questUnlock = {
                .questId = QUEST_ID_DYNAMAX,
            }
        }
    },
#endif
#if defined(ROGUE_EXPANSION)
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_QUEST_UNLOCK,
        .perType = {
            .questUnlock = {
                .questId = QUEST_ID_TERASTALLIZATION,
            }
        }
    },
#endif
#if defined(ROGUE_EXPANSION)
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_QUEST_UNLOCK,
        .perType = {
            .questUnlock = {
                .questId = QUEST_ID_GIMMICK_OVERFLOW,
            }
        }
    },
#endif
};
static u16 const sTriggerParams_POST_GAMEQMARK_12_0[] = 
{
    MAP_ROGUE_INTERIOR_CHALLENGE_FRONTIER,
};
static struct RogueQuestTrigger const sTriggers_POST_GAMEQMARK_12[] = 
{
    {
        .callback = QuestCondition_CurrentlyInMap,
        .passState = QUEST_STATUS_SUCCESS,
        .failState = QUEST_STATUS_PENDING,
        .flags = 0 | QUEST_TRIGGER_MAP_SPECIFIC_EVENT,
        .params = sTriggerParams_POST_GAMEQMARK_12_0,
        .paramCount = ARRAY_COUNT(sTriggerParams_POST_GAMEQMARK_12_0),
    },
};

static u8 const sTitle_ONE_LAST_QUEST_13[] = _("One Last Quest…");
extern const u8 gQuestDescText_ONE_LAST_QUEST_13[];

static u8 const sCustomPopupTitle_ONE_LAST_QUEST_13_3[] = _("Rogue Trainers");
static u8 const sCustomPopupSubtitle_ONE_LAST_QUEST_13_3[] = _("{COLOR LIGHT_BLUE}{SHADOW BLUE}Unlocked in Config Lab");

static struct CustomPopup const sCustomPopup_ONE_LAST_QUEST_13_3 = 
{
    .titleStr = sCustomPopupTitle_ONE_LAST_QUEST_13_3,
    .subtitleStr = sCustomPopupSubtitle_ONE_LAST_QUEST_13_3,
    .itemIcon = ITEM_C_GEAR,
    .soundEffect = 0,
    .fanfare = MUS_RG_OBTAIN_KEY_ITEM,
};

static struct RogueQuestReward const sRewards_ONE_LAST_QUEST_13[] = 
{
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_MONEY,
        .perType = {
            .money = {
                .amount = QUEST_REWARD_LARGE_MONEY,
            }
        }
    },
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_ITEM,
        .perType = {
            .item = {
                .item = ITEM_BUILDING_SUPPLIES,
                .count = QUEST_REWARD_MEDIUM_BUILD_AMOUNT,
            }
        }
    },
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_QUEST_UNLOCK,
        .perType = {
            .questUnlock = {
                .questId = QUEST_ID_THE_FINAL_RUN,
            }
        }
    },
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = &sCustomPopup_ONE_LAST_QUEST_13_3,
        .type = QUEST_REWARD_FLAG,
        .perType = {
            .flag = {
                .flagId = FLAG_ROGUE_STUB,
            }
        }
    },
};
static u16 const sTriggerParams_ONE_LAST_QUEST_13_0[] = 
{
};
static struct RogueQuestTrigger const sTriggers_ONE_LAST_QUEST_13[] = 
{
    {
        .callback = QuestCondition_CanUnlockFinalQuest,
        .passState = QUEST_STATUS_SUCCESS,
        .failState = QUEST_STATUS_PENDING,
        .flags = 0 | QUEST_TRIGGER_MISC_UPDATE,
        .params = sTriggerParams_ONE_LAST_QUEST_13_0,
        .paramCount = ARRAY_COUNT(sTriggerParams_ONE_LAST_QUEST_13_0),
    },
};

#if !defined(ROGUE_EXPANSION)
static u8 const sTitle_THE_FINAL_RUN_14[] = _("The Final Run.");
extern const u8 gQuestDescText_THE_FINAL_RUN_14[];

static struct RogueQuestReward const sRewards_THE_FINAL_RUN_14[] = 
{
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_MONEY,
        .perType = {
            .money = {
                .amount = QUEST_REWARD_LARGEST_MONEY,
            }
        }
    },
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_POKEMON,
        .perType = {
            .pokemon = {
                .species = SPECIES_MAREEP,
                .isShiny = FALSE,
                .customMonId = CUSTOM_MON_ABBIE_MAREEP,
                .nickname = NULL,
            }
        }
    },
    {
        .visiblity = QUEST_REWARD_VISIBLITY_OBSCURED,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_POKEMON,
        .perType = {
            .pokemon = {
                .species = SPECIES_WOBBUFFET,
                .isShiny = FALSE,
                .customMonId = CUSTOM_MON_WAHEY_WOBBUFFET,
                .nickname = NULL,
            }
        }
    },
};
static u16 const sTriggerParams_THE_FINAL_RUN_14_0[] = 
{
};
static u16 const sTriggerParams_THE_FINAL_RUN_14_1[] = 
{
};
static struct RogueQuestTrigger const sTriggers_THE_FINAL_RUN_14[] = 
{
    {
        .callback = QuestCondition_IsFinalQuestConditionMet,
        .passState = QUEST_STATUS_PENDING,
        .failState = QUEST_STATUS_FAIL,
        .flags = 0 | QUEST_TRIGGER_RUN_START,
        .params = sTriggerParams_THE_FINAL_RUN_14_0,
        .paramCount = ARRAY_COUNT(sTriggerParams_THE_FINAL_RUN_14_0),
    },
    {
        .callback = QuestCondition_Always,
        .passState = QUEST_STATUS_SUCCESS,
        .failState = QUEST_STATUS_PENDING,
        .flags = 0 | QUEST_TRIGGER_ENTER_HALL_OF_FAME,
        .params = sTriggerParams_THE_FINAL_RUN_14_1,
        .paramCount = ARRAY_COUNT(sTriggerParams_THE_FINAL_RUN_14_1),
    },
};
#endif

#if defined(ROGUE_EXPANSION)
static u8 const sTitle_THE_FINAL_RUN_15[] = _("The Final Run.");
extern const u8 gQuestDescText_THE_FINAL_RUN_15[];

static struct RogueQuestReward const sRewards_THE_FINAL_RUN_15[] = 
{
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_MONEY,
        .perType = {
            .money = {
                .amount = QUEST_REWARD_LARGEST_MONEY,
            }
        }
    },
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_POKEMON,
        .perType = {
            .pokemon = {
                .species = SPECIES_MAREEP,
                .isShiny = FALSE,
                .customMonId = CUSTOM_MON_ABBIE_MAREEP,
                .nickname = NULL,
            }
        }
    },
    {
        .visiblity = QUEST_REWARD_VISIBLITY_OBSCURED,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_POKEMON,
        .perType = {
            .pokemon = {
                .species = SPECIES_WOBBUFFET,
                .isShiny = FALSE,
                .customMonId = CUSTOM_MON_WAHEY_WOBBUFFET,
                .nickname = NULL,
            }
        }
    },
};
static u16 const sTriggerParams_THE_FINAL_RUN_15_0[] = 
{
};
static u16 const sTriggerParams_THE_FINAL_RUN_15_1[] = 
{
};
static struct RogueQuestTrigger const sTriggers_THE_FINAL_RUN_15[] = 
{
    {
        .callback = QuestCondition_IsFinalQuestConditionMet,
        .passState = QUEST_STATUS_PENDING,
        .failState = QUEST_STATUS_FAIL,
        .flags = 0 | QUEST_TRIGGER_RUN_START,
        .params = sTriggerParams_THE_FINAL_RUN_15_0,
        .paramCount = ARRAY_COUNT(sTriggerParams_THE_FINAL_RUN_15_0),
    },
    {
        .callback = QuestCondition_Always,
        .passState = QUEST_STATUS_SUCCESS,
        .failState = QUEST_STATUS_PENDING,
        .flags = 0 | QUEST_TRIGGER_ENTER_HALL_OF_FAME,
        .params = sTriggerParams_THE_FINAL_RUN_15_1,
        .paramCount = ARRAY_COUNT(sTriggerParams_THE_FINAL_RUN_15_1),
    },
};
#endif

static u8 const sTitle_COLLECTOR_16[] = _("Collector");
extern const u8 gQuestDescText_COLLECTOR_16[];

static struct RogueQuestReward const sRewards_COLLECTOR_16[] = 
{
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_MONEY,
        .perType = {
            .money = {
                .amount = QUEST_REWARD_SMALL_MONEY,
            }
        }
    },
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_ITEM,
        .perType = {
            .item = {
                .item = ITEM_BUILDING_SUPPLIES,
                .count = QUEST_REWARD_SMALL_BUILD_AMOUNT,
            }
        }
    },
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_DECOR,
        .perType = {
            .decor = {
                .decorId = DECOR_ID_PC,
            }
        }
    },
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_QUEST_UNLOCK,
        .perType = {
            .questUnlock = {
                .questId = QUEST_ID_COLLECTOR_PLUS,
            }
        }
    },
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_QUEST_UNLOCK,
        .perType = {
            .questUnlock = {
                .questId = QUEST_ID_COLLECTOR_S,
            }
        }
    },
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_QUEST_UNLOCK,
        .perType = {
            .questUnlock = {
                .questId = QUEST_ID_COLLECTOR_X,
            }
        }
    },
};
static u16 const sTriggerParams_COLLECTOR_16_0[] = 
{
    14,
};
static struct RogueQuestTrigger const sTriggers_COLLECTOR_16[] = 
{
    {
        .callback = QuestCondition_PokedexEntryCountGreaterThan,
        .passState = QUEST_STATUS_SUCCESS,
        .failState = QUEST_STATUS_PENDING,
        .flags = 0 | QUEST_TRIGGER_POKEDEX_UPDATE,
        .params = sTriggerParams_COLLECTOR_16_0,
        .paramCount = ARRAY_COUNT(sTriggerParams_COLLECTOR_16_0),
    },
};

static u8 const sTitle_COLLECTOR_PLUS_17[] = _("Collector +");
extern const u8 gQuestDescText_COLLECTOR_PLUS_17[];

static struct RogueQuestReward const sRewards_COLLECTOR_PLUS_17[] = 
{
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_MONEY,
        .perType = {
            .money = {
                .amount = QUEST_REWARD_MEDIUM_MONEY,
            }
        }
    },
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_ITEM,
        .perType = {
            .item = {
                .item = ITEM_BUILDING_SUPPLIES,
                .count = QUEST_REWARD_LARGE_BUILD_AMOUNT,
            }
        }
    },
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_DECOR,
        .perType = {
            .decor = {
                .decorId = DECOR_ID_CUSHIONS,
            }
        }
    },
};
static u16 const sTriggerParams_COLLECTOR_PLUS_17_0[] = 
{
    99,
};
static struct RogueQuestTrigger const sTriggers_COLLECTOR_PLUS_17[] = 
{
    {
        .callback = QuestCondition_PokedexEntryCountGreaterThan,
        .passState = QUEST_STATUS_SUCCESS,
        .failState = QUEST_STATUS_PENDING,
        .flags = 0 | QUEST_TRIGGER_POKEDEX_UPDATE,
        .params = sTriggerParams_COLLECTOR_PLUS_17_0,
        .paramCount = ARRAY_COUNT(sTriggerParams_COLLECTOR_PLUS_17_0),
    },
};

static u8 const sTitle_COLLECTOR_S_18[] = _("Collector S");
extern const u8 gQuestDescText_COLLECTOR_S_18[];

static struct RogueQuestReward const sRewards_COLLECTOR_S_18[] = 
{
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_MONEY,
        .perType = {
            .money = {
                .amount = QUEST_REWARD_SMALL_MONEY,
            }
        }
    },
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_SHOP_ITEM,
        .perType = {
            .shopItem = {
                .item = ITEM_STARF_BERRY,
            }
        }
    },
    {
        .visiblity = QUEST_REWARD_VISIBLITY_INVISIBLE,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_ITEM,
        .perType = {
            .item = {
                .item = ITEM_STARF_BERRY,
                .count = 3,
            }
        }
    },
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_ITEM,
        .perType = {
            .item = {
                .item = ITEM_BUILDING_SUPPLIES,
                .count = QUEST_REWARD_SMALL_BUILD_AMOUNT,
            }
        }
    },
};
static u16 const sTriggerParams_COLLECTOR_S_18_0[] = 
{
    9,
};
static struct RogueQuestTrigger const sTriggers_COLLECTOR_S_18[] = 
{
    {
        .callback = QuestCondition_PokedexShinyEntryCountGreaterThan,
        .passState = QUEST_STATUS_SUCCESS,
        .failState = QUEST_STATUS_PENDING,
        .flags = 0 | QUEST_TRIGGER_POKEDEX_UPDATE,
        .params = sTriggerParams_COLLECTOR_S_18_0,
        .paramCount = ARRAY_COUNT(sTriggerParams_COLLECTOR_S_18_0),
    },
};

static u8 const sTitle_COLLECTOR_X_19[] = _("Collector X");
extern const u8 gQuestDescText_COLLECTOR_X_19[];

static struct RogueQuestReward const sRewards_COLLECTOR_X_19[] = 
{
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_MONEY,
        .perType = {
            .money = {
                .amount = QUEST_REWARD_MEDIUM_MONEY,
            }
        }
    },
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_SHOP_ITEM,
        .perType = {
            .shopItem = {
                .item = ITEM_MASTER_BALL,
            }
        }
    },
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_ITEM,
        .perType = {
            .item = {
                .item = ITEM_BUILDING_SUPPLIES,
                .count = QUEST_REWARD_MEDIUM_BUILD_AMOUNT,
            }
        }
    },
};
static u16 const sTriggerParams_COLLECTOR_X_19_0[] = 
{
    ROGUE_ELITE_START_DIFFICULTY,
};
static u16 const sTriggerParams_COLLECTOR_X_19_1[] = 
{
};
static u16 const sTriggerParams_COLLECTOR_X_19_2[] = 
{
    ROGUE_ELITE_START_DIFFICULTY + 3,
};
static struct RogueQuestTrigger const sTriggers_COLLECTOR_X_19[] = 
{
    {
        .callback = QuestCondition_DifficultyGreaterThan,
        .passState = QUEST_STATUS_PENDING,
        .failState = QUEST_STATUS_BREAK,
        .flags = 0 | QUEST_TRIGGER_EARN_BADGE,
        .params = sTriggerParams_COLLECTOR_X_19_0,
        .paramCount = ARRAY_COUNT(sTriggerParams_COLLECTOR_X_19_0),
    },
    {
        .callback = QuestCondition_PartyContainsLegendary,
        .passState = QUEST_STATUS_PENDING,
        .failState = QUEST_STATUS_FAIL,
        .flags = 0 | QUEST_TRIGGER_EARN_BADGE,
        .params = sTriggerParams_COLLECTOR_X_19_1,
        .paramCount = ARRAY_COUNT(sTriggerParams_COLLECTOR_X_19_1),
    },
    {
        .callback = QuestCondition_DifficultyGreaterThan,
        .passState = QUEST_STATUS_SUCCESS,
        .failState = QUEST_STATUS_PENDING,
        .flags = 0 | QUEST_TRIGGER_EARN_BADGE,
        .params = sTriggerParams_COLLECTOR_X_19_2,
        .paramCount = ARRAY_COUNT(sTriggerParams_COLLECTOR_X_19_2),
    },
};

static u8 const sTitle_CARE_TACTICS_20[] = _("Care Tactics");
extern const u8 gQuestDescText_CARE_TACTICS_20[];

static struct RogueQuestReward const sRewards_CARE_TACTICS_20[] = 
{
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_MONEY,
        .perType = {
            .money = {
                .amount = QUEST_REWARD_MEDIUM_MONEY,
            }
        }
    },
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_ITEM,
        .perType = {
            .item = {
                .item = ITEM_BUILDING_SUPPLIES,
                .count = QUEST_REWARD_MEDIUM_BUILD_AMOUNT,
            }
        }
    },
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_DECOR,
        .perType = {
            .decor = {
                .decorId = DECOR_ID_DOLL,
            }
        }
    },
};
static u16 const sTriggerParams_CARE_TACTICS_20_0[] = 
{
};
static u16 const sTriggerParams_CARE_TACTICS_20_1[] = 
{
    ROGUE_GYM_MID_DIFFICULTY - 1,
};
static struct RogueQuestTrigger const sTriggers_CARE_TACTICS_20[] = 
{
    {
        .callback = QuestCondition_PartyContainsInitialPartner,
        .passState = QUEST_STATUS_PENDING,
        .failState = QUEST_STATUS_FAIL,
        .flags = 0 | QUEST_TRIGGER_ANY_BATTLE_END,
        .params = sTriggerParams_CARE_TACTICS_20_0,
        .paramCount = ARRAY_COUNT(sTriggerParams_CARE_TACTICS_20_0),
    },
    {
        .callback = QuestCondition_DifficultyGreaterThan,
        .passState = QUEST_STATUS_SUCCESS,
        .failState = QUEST_STATUS_PENDING,
        .flags = 0 | QUEST_TRIGGER_EARN_BADGE,
        .params = sTriggerParams_CARE_TACTICS_20_1,
        .paramCount = ARRAY_COUNT(sTriggerParams_CARE_TACTICS_20_1),
    },
};

static u8 const sTitle_SMART_TACTICS_21[] = _("Smart Tactics");
extern const u8 gQuestDescText_SMART_TACTICS_21[];

static struct RogueQuestReward const sRewards_SMART_TACTICS_21[] = 
{
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_MONEY,
        .perType = {
            .money = {
                .amount = QUEST_REWARD_MEDIUM_MONEY,
            }
        }
    },
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_ITEM,
        .perType = {
            .item = {
                .item = ITEM_BUILDING_SUPPLIES,
                .count = QUEST_REWARD_LARGE_BUILD_AMOUNT,
            }
        }
    },
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_DECOR,
        .perType = {
            .decor = {
                .decorId = DECOR_ID_PC_WANDERING_PKMN,
            }
        }
    },
};
static u16 const sTriggerParams_SMART_TACTICS_21_0[] = 
{
};
static u16 const sTriggerParams_SMART_TACTICS_21_1[] = 
{
    ROGUE_ELITE_START_DIFFICULTY - 1,
};
static struct RogueQuestTrigger const sTriggers_SMART_TACTICS_21[] = 
{
    {
        .callback = QuestCondition_PartyContainsInitialPartner,
        .passState = QUEST_STATUS_PENDING,
        .failState = QUEST_STATUS_FAIL,
        .flags = 0 | QUEST_TRIGGER_ANY_BATTLE_END,
        .params = sTriggerParams_SMART_TACTICS_21_0,
        .paramCount = ARRAY_COUNT(sTriggerParams_SMART_TACTICS_21_0),
    },
    {
        .callback = QuestCondition_DifficultyGreaterThan,
        .passState = QUEST_STATUS_SUCCESS,
        .failState = QUEST_STATUS_PENDING,
        .flags = 0 | QUEST_TRIGGER_EARN_BADGE,
        .params = sTriggerParams_SMART_TACTICS_21_1,
        .paramCount = ARRAY_COUNT(sTriggerParams_SMART_TACTICS_21_1),
    },
};

static u8 const sTitle_MR_RANDOMAN_22[] = _("Mr. Randoman");
extern const u8 gQuestDescText_MR_RANDOMAN_22[];

static struct RogueQuestReward const sRewards_MR_RANDOMAN_22[] = 
{
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_MONEY,
        .perType = {
            .money = {
                .amount = QUEST_REWARD_SMALL_MONEY,
            }
        }
    },
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_ITEM,
        .perType = {
            .item = {
                .item = ITEM_BUILDING_SUPPLIES,
                .count = QUEST_REWARD_SMALL_BUILD_AMOUNT,
            }
        }
    },
};
static u16 const sTriggerParams_MR_RANDOMAN_22_0[] = 
{
    ADVPATH_ROOM_RESTSTOP,
};
static u16 const sTriggerParams_MR_RANDOMAN_22_1[] = 
{
};
static struct RogueQuestTrigger const sTriggers_MR_RANDOMAN_22[] = 
{
    {
        .callback = QuestCondition_InAdventureEncounterType,
        .passState = QUEST_STATUS_PENDING,
        .failState = QUEST_STATUS_BREAK,
        .flags = 0 | QUEST_TRIGGER_EXIT_ENCOUNTER,
        .params = sTriggerParams_MR_RANDOMAN_22_0,
        .paramCount = ARRAY_COUNT(sTriggerParams_MR_RANDOMAN_22_0),
    },
    {
        .callback = QuestCondition_RandomanWasUsed,
        .passState = QUEST_STATUS_SUCCESS,
        .failState = QUEST_STATUS_PENDING,
        .flags = 0 | QUEST_TRIGGER_EXIT_ENCOUNTER,
        .params = sTriggerParams_MR_RANDOMAN_22_1,
        .paramCount = ARRAY_COUNT(sTriggerParams_MR_RANDOMAN_22_1),
    },
};

static u8 const sTitle_SHOPPING_SPREE_23[] = _("Shopping Spree");
extern const u8 gQuestDescText_SHOPPING_SPREE_23[];

static struct RogueQuestReward const sRewards_SHOPPING_SPREE_23[] = 
{
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_MONEY,
        .perType = {
            .money = {
                .amount = QUEST_REWARD_SMALL_MONEY,
            }
        }
    },
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_ITEM,
        .perType = {
            .item = {
                .item = ITEM_BUILDING_SUPPLIES,
                .count = QUEST_REWARD_SMALL_BUILD_AMOUNT,
            }
        }
    },
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_DECOR,
        .perType = {
            .decor = {
                .decorId = DECOR_ID_CUSHIONS,
            }
        }
    },
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_QUEST_UNLOCK,
        .perType = {
            .questUnlock = {
                .questId = QUEST_ID_BIG_SAVER,
            }
        }
    },
};
static u16 const sTriggerParams_SHOPPING_SPREE_23_0[] = 
{
    ADVPATH_ROOM_RESTSTOP,
};
static u16 const sTriggerParams_SHOPPING_SPREE_23_1[] = 
{
    19999,
};
static struct RogueQuestTrigger const sTriggers_SHOPPING_SPREE_23[] = 
{
    {
        .callback = QuestCondition_InAdventureEncounterType,
        .passState = QUEST_STATUS_PENDING,
        .failState = QUEST_STATUS_BREAK,
        .flags = 0 | QUEST_TRIGGER_EXIT_ENCOUNTER,
        .params = sTriggerParams_SHOPPING_SPREE_23_0,
        .paramCount = ARRAY_COUNT(sTriggerParams_SHOPPING_SPREE_23_0),
    },
    {
        .callback = QuestCondition_TotalMoneySpentGreaterThan,
        .passState = QUEST_STATUS_SUCCESS,
        .failState = QUEST_STATUS_PENDING,
        .flags = 0 | QUEST_TRIGGER_EXIT_ENCOUNTER,
        .params = sTriggerParams_SHOPPING_SPREE_23_1,
        .paramCount = ARRAY_COUNT(sTriggerParams_SHOPPING_SPREE_23_1),
    },
};

static u8 const sTitle_BIG_SAVER_24[] = _("Big Saver");
extern const u8 gQuestDescText_BIG_SAVER_24[];

static struct RogueQuestReward const sRewards_BIG_SAVER_24[] = 
{
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_MONEY,
        .perType = {
            .money = {
                .amount = QUEST_REWARD_SMALL_MONEY,
            }
        }
    },
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_ITEM,
        .perType = {
            .item = {
                .item = ITEM_BUILDING_SUPPLIES,
                .count = QUEST_REWARD_MEDIUM_BUILD_AMOUNT,
            }
        }
    },
};
static u16 const sTriggerParams_BIG_SAVER_24_0[] = 
{
    ADVPATH_ROOM_RESTSTOP,
};
static u16 const sTriggerParams_BIG_SAVER_24_1[] = 
{
    49999,
};
static struct RogueQuestTrigger const sTriggers_BIG_SAVER_24[] = 
{
    {
        .callback = QuestCondition_InAdventureEncounterType,
        .passState = QUEST_STATUS_PENDING,
        .failState = QUEST_STATUS_BREAK,
        .flags = 0 | QUEST_TRIGGER_EXIT_ENCOUNTER,
        .params = sTriggerParams_BIG_SAVER_24_0,
        .paramCount = ARRAY_COUNT(sTriggerParams_BIG_SAVER_24_0),
    },
    {
        .callback = QuestCondition_PlayerMoneyGreaterThan,
        .passState = QUEST_STATUS_SUCCESS,
        .failState = QUEST_STATUS_PENDING,
        .flags = 0 | QUEST_TRIGGER_EXIT_ENCOUNTER,
        .params = sTriggerParams_BIG_SAVER_24_1,
        .paramCount = ARRAY_COUNT(sTriggerParams_BIG_SAVER_24_1),
    },
};

static u8 const sTitle_TRUE_LEGEND_25[] = _("True Legend");
extern const u8 gQuestDescText_TRUE_LEGEND_25[];

static u8 const sCustomPopupTitle_TRUE_LEGEND_25_2[] = _("Safari Area");
static u8 const sCustomPopupSubtitle_TRUE_LEGEND_25_2[] = _("{COLOR LIGHT_BLUE}{SHADOW BLUE}Mountains shift…");

static struct CustomPopup const sCustomPopup_TRUE_LEGEND_25_2 = 
{
    .titleStr = sCustomPopupTitle_TRUE_LEGEND_25_2,
    .subtitleStr = sCustomPopupSubtitle_TRUE_LEGEND_25_2,
    .itemIcon = ITEM_TOWN_MAP,
    .soundEffect = 0,
    .fanfare = MUS_RG_OBTAIN_KEY_ITEM,
};

static struct RogueQuestReward const sRewards_TRUE_LEGEND_25[] = 
{
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_MONEY,
        .perType = {
            .money = {
                .amount = QUEST_REWARD_SMALL_MONEY,
            }
        }
    },
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_ITEM,
        .perType = {
            .item = {
                .item = ITEM_BUILDING_SUPPLIES,
                .count = QUEST_REWARD_SMALL_BUILD_AMOUNT,
            }
        }
    },
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = &sCustomPopup_TRUE_LEGEND_25_2,
        .type = QUEST_REWARD_HUB_UPGRADE,
        .perType = {
            .hubUpgrade = {
                .upgradeId = HUB_UPGRADE_SAFARI_ZONE_LEGENDS_CAVE,
            }
        }
    },
};
static u16 const sTriggerParams_TRUE_LEGEND_25_0[] = 
{
};
static struct RogueQuestTrigger const sTriggers_TRUE_LEGEND_25[] = 
{
    {
        .callback = QuestCondition_Always,
        .passState = QUEST_STATUS_SUCCESS,
        .failState = QUEST_STATUS_PENDING,
        .flags = 0 | QUEST_TRIGGER_MON_LEGEND_CAUGHT,
        .params = sTriggerParams_TRUE_LEGEND_25_0,
        .paramCount = ARRAY_COUNT(sTriggerParams_TRUE_LEGEND_25_0),
    },
};

static u8 const sTitle_SHINY_A_DAY_26[] = _("Shiny a Day");
extern const u8 gQuestDescText_SHINY_A_DAY_26[];

static struct RogueQuestReward const sRewards_SHINY_A_DAY_26[] = 
{
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_MONEY,
        .perType = {
            .money = {
                .amount = QUEST_REWARD_SMALL_MONEY,
            }
        }
    },
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_ITEM,
        .perType = {
            .item = {
                .item = ITEM_POKEBLOCK_SHINY,
                .count = 5,
            }
        }
    },
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_ITEM,
        .perType = {
            .item = {
                .item = ITEM_BUILDING_SUPPLIES,
                .count = QUEST_REWARD_SMALL_BUILD_AMOUNT,
            }
        }
    },
};
static u16 const sTriggerParams_SHINY_A_DAY_26_0[] = 
{
};
static struct RogueQuestTrigger const sTriggers_SHINY_A_DAY_26[] = 
{
    {
        .callback = QuestCondition_Always,
        .passState = QUEST_STATUS_SUCCESS,
        .failState = QUEST_STATUS_PENDING,
        .flags = 0 | QUEST_TRIGGER_MON_SHINY_CAUGHT,
        .params = sTriggerParams_SHINY_A_DAY_26_0,
        .paramCount = ARRAY_COUNT(sTriggerParams_SHINY_A_DAY_26_0),
    },
};

static u8 const sTitle_HIDDEN_GROTTO_27[] = _("Hidden Grotto");
extern const u8 gQuestDescText_HIDDEN_GROTTO_27[];

static struct RogueQuestReward const sRewards_HIDDEN_GROTTO_27[] = 
{
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_MONEY,
        .perType = {
            .money = {
                .amount = QUEST_REWARD_SMALL_MONEY,
            }
        }
    },
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_ITEM,
        .perType = {
            .item = {
                .item = ITEM_BUILDING_SUPPLIES,
                .count = QUEST_REWARD_SMALL_BUILD_AMOUNT,
            }
        }
    },
};
static u16 const sTriggerParams_HIDDEN_GROTTO_27_0[] = 
{
    ADVPATH_ROOM_WILD_DEN,
};
static struct RogueQuestTrigger const sTriggers_HIDDEN_GROTTO_27[] = 
{
    {
        .callback = QuestCondition_CurrentlyInRoomType,
        .passState = QUEST_STATUS_SUCCESS,
        .failState = QUEST_STATUS_PENDING,
        .flags = 0 | QUEST_TRIGGER_ANY_MON_CAUGHT,
        .params = sTriggerParams_HIDDEN_GROTTO_27_0,
        .paramCount = ARRAY_COUNT(sTriggerParams_HIDDEN_GROTTO_27_0),
    },
};

static u8 const sTitle_POKE_BALL_GOEMARK_28[] = _("Poké Ball, Go!");
extern const u8 gQuestDescText_POKE_BALL_GOEMARK_28[];

static struct RogueQuestReward const sRewards_POKE_BALL_GOEMARK_28[] = 
{
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_MONEY,
        .perType = {
            .money = {
                .amount = QUEST_REWARD_SMALL_MONEY,
            }
        }
    },
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_ITEM,
        .perType = {
            .item = {
                .item = ITEM_BUILDING_SUPPLIES,
                .count = QUEST_REWARD_SMALL_BUILD_AMOUNT,
            }
        }
    },
};
static u16 const sTriggerParams_POKE_BALL_GOEMARK_28_0[] = 
{
    ADVPATH_ROOM_CATCHING_CONTEST,
};
static struct RogueQuestTrigger const sTriggers_POKE_BALL_GOEMARK_28[] = 
{
    {
        .callback = QuestCondition_CurrentlyInRoomType,
        .passState = QUEST_STATUS_SUCCESS,
        .failState = QUEST_STATUS_PENDING,
        .flags = 0 | QUEST_TRIGGER_MAP_SPECIFIC_EVENT,
        .params = sTriggerParams_POKE_BALL_GOEMARK_28_0,
        .paramCount = ARRAY_COUNT(sTriggerParams_POKE_BALL_GOEMARK_28_0),
    },
};

static u8 const sTitle_ENTICING_POKEBLOCK_29[] = _("Enticing {POKEBLOCK}");
extern const u8 gQuestDescText_ENTICING_POKEBLOCK_29[];

static struct RogueQuestReward const sRewards_ENTICING_POKEBLOCK_29[] = 
{
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_MONEY,
        .perType = {
            .money = {
                .amount = QUEST_REWARD_SMALL_MONEY,
            }
        }
    },
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_ITEM,
        .perType = {
            .item = {
                .item = ITEM_BUILDING_SUPPLIES,
                .count = QUEST_REWARD_SMALL_BUILD_AMOUNT,
            }
        }
    },
};
static u16 const sTriggerParams_ENTICING_POKEBLOCK_29_0[] = 
{
    ADVPATH_ROOM_HONEY_TREE,
};
static struct RogueQuestTrigger const sTriggers_ENTICING_POKEBLOCK_29[] = 
{
    {
        .callback = QuestCondition_CurrentlyInRoomType,
        .passState = QUEST_STATUS_SUCCESS,
        .failState = QUEST_STATUS_PENDING,
        .flags = 0 | QUEST_TRIGGER_MAP_SPECIFIC_EVENT,
        .params = sTriggerParams_ENTICING_POKEBLOCK_29_0,
        .paramCount = ARRAY_COUNT(sTriggerParams_ENTICING_POKEBLOCK_29_0),
    },
};

static u8 const sTitle_ELO_CLIMB_30[] = _("Elo Climb");
extern const u8 gQuestDescText_ELO_CLIMB_30[];

static struct RogueQuestReward const sRewards_ELO_CLIMB_30[] = 
{
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_MONEY,
        .perType = {
            .money = {
                .amount = QUEST_REWARD_SMALL_MONEY,
            }
        }
    },
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_ITEM,
        .perType = {
            .item = {
                .item = ITEM_BUILDING_SUPPLIES,
                .count = QUEST_REWARD_SMALL_BUILD_AMOUNT,
            }
        }
    },
};
static u16 const sTriggerParams_ELO_CLIMB_30_0[] = 
{
    ADVPATH_ROOM_BATTLE_SIM,
};
static struct RogueQuestTrigger const sTriggers_ELO_CLIMB_30[] = 
{
    {
        .callback = QuestCondition_CurrentlyInRoomType,
        .passState = QUEST_STATUS_SUCCESS,
        .failState = QUEST_STATUS_PENDING,
        .flags = 0 | QUEST_TRIGGER_MAP_SPECIFIC_EVENT,
        .params = sTriggerParams_ELO_CLIMB_30_0,
        .paramCount = ARRAY_COUNT(sTriggerParams_ELO_CLIMB_30_0),
    },
};

static u8 const sTitle_ALL_SKILL_31[] = _("All Skill");
extern const u8 gQuestDescText_ALL_SKILL_31[];

static struct RogueQuestReward const sRewards_ALL_SKILL_31[] = 
{
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_MONEY,
        .perType = {
            .money = {
                .amount = QUEST_REWARD_SMALL_MONEY,
            }
        }
    },
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_ITEM,
        .perType = {
            .item = {
                .item = ITEM_BUILDING_SUPPLIES,
                .count = QUEST_REWARD_SMALL_BUILD_AMOUNT,
            }
        }
    },
};
static u16 const sTriggerParams_ALL_SKILL_31_0[] = 
{
    ADVPATH_ROOM_GAMESHOW,
};
static struct RogueQuestTrigger const sTriggers_ALL_SKILL_31[] = 
{
    {
        .callback = QuestCondition_CurrentlyInRoomType,
        .passState = QUEST_STATUS_SUCCESS,
        .failState = QUEST_STATUS_PENDING,
        .flags = 0 | QUEST_TRIGGER_MAP_SPECIFIC_EVENT,
        .params = sTriggerParams_ALL_SKILL_31_0,
        .paramCount = ARRAY_COUNT(sTriggerParams_ALL_SKILL_31_0),
    },
};

static u8 const sTitle_FATEFUL_ENCOUNTER_32[] = _("Fateful Encounter");
extern const u8 gQuestDescText_FATEFUL_ENCOUNTER_32[];

static struct RogueQuestReward const sRewards_FATEFUL_ENCOUNTER_32[] = 
{
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_MONEY,
        .perType = {
            .money = {
                .amount = QUEST_REWARD_SMALL_MONEY,
            }
        }
    },
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_ITEM,
        .perType = {
            .item = {
                .item = ITEM_BUILDING_SUPPLIES,
                .count = QUEST_REWARD_SMALL_BUILD_AMOUNT,
            }
        }
    },
};
static u16 const sTriggerParams_FATEFUL_ENCOUNTER_32_0[] = 
{
    ADVPATH_ROOM_LAB,
};
static struct RogueQuestTrigger const sTriggers_FATEFUL_ENCOUNTER_32[] = 
{
    {
        .callback = QuestCondition_CurrentlyInRoomType,
        .passState = QUEST_STATUS_SUCCESS,
        .failState = QUEST_STATUS_PENDING,
        .flags = 0 | QUEST_TRIGGER_MAP_SPECIFIC_EVENT,
        .params = sTriggerParams_FATEFUL_ENCOUNTER_32_0,
        .paramCount = ARRAY_COUNT(sTriggerParams_FATEFUL_ENCOUNTER_32_0),
    },
};

static u8 const sTitle_BLASTING_OFF_33[] = _("Blasting Off");
extern const u8 gQuestDescText_BLASTING_OFF_33[];

static struct RogueQuestReward const sRewards_BLASTING_OFF_33[] = 
{
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_MONEY,
        .perType = {
            .money = {
                .amount = QUEST_REWARD_SMALL_MONEY,
            }
        }
    },
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_SHOP_ITEM,
        .perType = {
            .shopItem = {
                .item = ITEM_SITRUS_BERRY,
            }
        }
    },
    {
        .visiblity = QUEST_REWARD_VISIBLITY_INVISIBLE,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_ITEM,
        .perType = {
            .item = {
                .item = ITEM_SITRUS_BERRY,
                .count = 1,
            }
        }
    },
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_ITEM,
        .perType = {
            .item = {
                .item = ITEM_BUILDING_SUPPLIES,
                .count = QUEST_REWARD_SMALL_BUILD_AMOUNT,
            }
        }
    },
};
static u16 const sTriggerParams_BLASTING_OFF_33_0[] = 
{
    ADVPATH_ROOM_TEAM_HIDEOUT,
};
static struct RogueQuestTrigger const sTriggers_BLASTING_OFF_33[] = 
{
    {
        .callback = QuestCondition_CurrentlyInRoomType,
        .passState = QUEST_STATUS_SUCCESS,
        .failState = QUEST_STATUS_PENDING,
        .flags = 0 | QUEST_TRIGGER_MAP_SPECIFIC_EVENT,
        .params = sTriggerParams_BLASTING_OFF_33_0,
        .paramCount = ARRAY_COUNT(sTriggerParams_BLASTING_OFF_33_0),
    },
};

static u8 const sTitle_MANKEYS_PAW_34[] = _("Mankey's Paw");
extern const u8 gQuestDescText_MANKEYS_PAW_34[];

static struct RogueQuestReward const sRewards_MANKEYS_PAW_34[] = 
{
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_MONEY,
        .perType = {
            .money = {
                .amount = QUEST_REWARD_SMALL_MONEY,
            }
        }
    },
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_ITEM,
        .perType = {
            .item = {
                .item = ITEM_BUILDING_SUPPLIES,
                .count = QUEST_REWARD_SMALL_BUILD_AMOUNT,
            }
        }
    },
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_DECOR,
        .perType = {
            .decor = {
                .decorId = DECOR_ID_FLAG,
            }
        }
    },
};
static u16 const sTriggerParams_MANKEYS_PAW_34_0[] = 
{
    ADVPATH_ROOM_DARK_DEAL,
};
static struct RogueQuestTrigger const sTriggers_MANKEYS_PAW_34[] = 
{
    {
        .callback = QuestCondition_CurrentlyInRoomType,
        .passState = QUEST_STATUS_SUCCESS,
        .failState = QUEST_STATUS_PENDING,
        .flags = 0 | QUEST_TRIGGER_MAP_SPECIFIC_EVENT,
        .params = sTriggerParams_MANKEYS_PAW_34_0,
        .paramCount = ARRAY_COUNT(sTriggerParams_MANKEYS_PAW_34_0),
    },
};

static u8 const sTitle_BLESSINGS_FAVOUR_35[] = _("Blessing's Favour");
extern const u8 gQuestDescText_BLESSINGS_FAVOUR_35[];

static struct RogueQuestReward const sRewards_BLESSINGS_FAVOUR_35[] = 
{
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_MONEY,
        .perType = {
            .money = {
                .amount = QUEST_REWARD_SMALL_MONEY,
            }
        }
    },
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_ITEM,
        .perType = {
            .item = {
                .item = ITEM_BUILDING_SUPPLIES,
                .count = QUEST_REWARD_SMALL_BUILD_AMOUNT,
            }
        }
    },
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_DECOR,
        .perType = {
            .decor = {
                .decorId = DECOR_ID_BED,
            }
        }
    },
};
static u16 const sTriggerParams_BLESSINGS_FAVOUR_35_0[] = 
{
    ADVPATH_ROOM_SHRINE,
};
static struct RogueQuestTrigger const sTriggers_BLESSINGS_FAVOUR_35[] = 
{
    {
        .callback = QuestCondition_CurrentlyInRoomType,
        .passState = QUEST_STATUS_SUCCESS,
        .failState = QUEST_STATUS_PENDING,
        .flags = 0 | QUEST_TRIGGER_MAP_SPECIFIC_EVENT,
        .params = sTriggerParams_BLESSINGS_FAVOUR_35_0,
        .paramCount = ARRAY_COUNT(sTriggerParams_BLESSINGS_FAVOUR_35_0),
    },
};

static u8 const sTitle_NOT_TODAYEMARK_36[] = _("Not Today!");
extern const u8 gQuestDescText_NOT_TODAYEMARK_36[];

static struct RogueQuestReward const sRewards_NOT_TODAYEMARK_36[] = 
{
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_MONEY,
        .perType = {
            .money = {
                .amount = QUEST_REWARD_SMALL_MONEY,
            }
        }
    },
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_SHOP_ITEM,
        .perType = {
            .shopItem = {
                .item = ITEM_ESCAPE_ROPE,
            }
        }
    },
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_ITEM,
        .perType = {
            .item = {
                .item = ITEM_BUILDING_SUPPLIES,
                .count = QUEST_REWARD_SMALL_BUILD_AMOUNT,
            }
        }
    },
};
static u16 const sTriggerParams_NOT_TODAYEMARK_36_0[] = 
{
    ITEM_ESCAPE_ROPE,
};
static u16 const sTriggerParams_NOT_TODAYEMARK_36_1[] = 
{
    FLAG_ROGUE_RIVAL_DISABLED,
};
static struct RogueQuestTrigger const sTriggers_NOT_TODAYEMARK_36[] = 
{
    {
        .callback = QuestCondition_LastItemWasAny,
        .passState = QUEST_STATUS_PENDING,
        .failState = QUEST_STATUS_BREAK,
        .flags = 0 | QUEST_TRIGGER_FIELD_ITEM_USED,
        .params = sTriggerParams_NOT_TODAYEMARK_36_0,
        .paramCount = ARRAY_COUNT(sTriggerParams_NOT_TODAYEMARK_36_0),
    },
    {
        .callback = QuestCondition_FlagGet,
        .passState = QUEST_STATUS_PENDING,
        .failState = QUEST_STATUS_SUCCESS,
        .flags = 0 | QUEST_TRIGGER_FIELD_ITEM_USED,
        .params = sTriggerParams_NOT_TODAYEMARK_36_1,
        .paramCount = ARRAY_COUNT(sTriggerParams_NOT_TODAYEMARK_36_1),
    },
};

static u8 const sTitle_DOUBLE_TROUBLE_37[] = _("Double Trouble");
extern const u8 gQuestDescText_DOUBLE_TROUBLE_37[];

static struct RogueQuestReward const sRewards_DOUBLE_TROUBLE_37[] = 
{
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_MONEY,
        .perType = {
            .money = {
                .amount = QUEST_REWARD_LARGE_MONEY,
            }
        }
    },
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_ITEM,
        .perType = {
            .item = {
                .item = ITEM_BUILDING_SUPPLIES,
                .count = QUEST_REWARD_LARGE_BUILD_AMOUNT,
            }
        }
    },
};
static struct RogueQuestRequirement const sRequirements_DOUBLE_TROUBLE_37[] = 
{
    {
        .type = QUEST_REQUIREMENT_TYPE_CONFIG_RANGE,
        .perType = {
            .configRange = {
                .range = CONFIG_RANGE_BATTLE_FORMAT,
                .operation = QUEST_REQUIREMENT_OPERATION_EQUAL,
                .value = BATTLE_FORMAT_DOUBLES,
            }
        }
    },
};
static u16 const sTriggerParams_DOUBLE_TROUBLE_37_0[] = 
{
};
static struct RogueQuestTrigger const sTriggers_DOUBLE_TROUBLE_37[] = 
{
    {
        .callback = QuestCondition_Always,
        .passState = QUEST_STATUS_SUCCESS,
        .failState = QUEST_STATUS_PENDING,
        .flags = 0 | QUEST_TRIGGER_ENTER_HALL_OF_FAME,
        .params = sTriggerParams_DOUBLE_TROUBLE_37_0,
        .paramCount = ARRAY_COUNT(sTriggerParams_DOUBLE_TROUBLE_37_0),
    },
};

#if !defined(ROGUE_EXPANSION)
static u8 const sTitle_TASTE_THE_RAINBOW_38[] = _("Taste the Rainbow");
extern const u8 gQuestDescText_TASTE_THE_RAINBOW_38[];

static struct RogueQuestReward const sRewards_TASTE_THE_RAINBOW_38[] = 
{
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_MONEY,
        .perType = {
            .money = {
                .amount = QUEST_REWARD_LARGE_MONEY,
            }
        }
    },
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_SHOP_ITEM,
        .perType = {
            .shopItem = {
                .item = ITEM_LUM_BERRY,
            }
        }
    },
    {
        .visiblity = QUEST_REWARD_VISIBLITY_INVISIBLE,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_ITEM,
        .perType = {
            .item = {
                .item = ITEM_LUM_BERRY,
                .count = 1,
            }
        }
    },
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_ITEM,
        .perType = {
            .item = {
                .item = ITEM_BUILDING_SUPPLIES,
                .count = QUEST_REWARD_LARGE_BUILD_AMOUNT,
            }
        }
    },
};
static struct RogueQuestRequirement const sRequirements_TASTE_THE_RAINBOW_38[] = 
{
    {
        .type = QUEST_REQUIREMENT_TYPE_CONFIG_TOGGLE,
        .perType = {
            .configToggle = {
                .toggle = CONFIG_TOGGLE_TRAINER_KANTO,
                .state = TRUE,
            }
        }
    },
    {
        .type = QUEST_REQUIREMENT_TYPE_CONFIG_TOGGLE,
        .perType = {
            .configToggle = {
                .toggle = CONFIG_TOGGLE_TRAINER_JOHTO,
                .state = TRUE,
            }
        }
    },
    {
        .type = QUEST_REQUIREMENT_TYPE_CONFIG_TOGGLE,
        .perType = {
            .configToggle = {
                .toggle = CONFIG_TOGGLE_TRAINER_HOENN,
                .state = TRUE,
            }
        }
    },
};
static u16 const sTriggerParams_TASTE_THE_RAINBOW_38_0[] = 
{
    CONFIG_RANGE_GAME_MODE_NUM,
    ROGUE_GAME_MODE_RAINBOW,
    ROGUE_GAME_MODE_RAINBOW_GAUNTLET,
};
static u16 const sTriggerParams_TASTE_THE_RAINBOW_38_1[] = 
{
};
static struct RogueQuestTrigger const sTriggers_TASTE_THE_RAINBOW_38[] = 
{
    {
        .callback = QuestCondition_IsConfigRangeEqualToAny,
        .passState = QUEST_STATUS_PENDING,
        .failState = QUEST_STATUS_FAIL,
        .flags = 0 | QUEST_TRIGGER_RUN_START,
        .params = sTriggerParams_TASTE_THE_RAINBOW_38_0,
        .paramCount = ARRAY_COUNT(sTriggerParams_TASTE_THE_RAINBOW_38_0),
    },
    {
        .callback = QuestCondition_Always,
        .passState = QUEST_STATUS_SUCCESS,
        .failState = QUEST_STATUS_PENDING,
        .flags = 0 | QUEST_TRIGGER_ENTER_HALL_OF_FAME,
        .params = sTriggerParams_TASTE_THE_RAINBOW_38_1,
        .paramCount = ARRAY_COUNT(sTriggerParams_TASTE_THE_RAINBOW_38_1),
    },
};
#endif

#if defined(ROGUE_EXPANSION)
static u8 const sTitle_TASTE_THE_RAINBOW_39[] = _("Taste the Rainbow");
extern const u8 gQuestDescText_TASTE_THE_RAINBOW_39[];

static struct RogueQuestReward const sRewards_TASTE_THE_RAINBOW_39[] = 
{
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_MONEY,
        .perType = {
            .money = {
                .amount = QUEST_REWARD_LARGE_MONEY,
            }
        }
    },
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_SHOP_ITEM,
        .perType = {
            .shopItem = {
                .item = ITEM_LUM_BERRY,
            }
        }
    },
    {
        .visiblity = QUEST_REWARD_VISIBLITY_INVISIBLE,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_ITEM,
        .perType = {
            .item = {
                .item = ITEM_LUM_BERRY,
                .count = 1,
            }
        }
    },
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_ITEM,
        .perType = {
            .item = {
                .item = ITEM_BUILDING_SUPPLIES,
                .count = QUEST_REWARD_LARGE_BUILD_AMOUNT,
            }
        }
    },
};
static struct RogueQuestRequirement const sRequirements_TASTE_THE_RAINBOW_39[] = 
{
    {
        .type = QUEST_REQUIREMENT_TYPE_CONFIG_TOGGLE,
        .perType = {
            .configToggle = {
                .toggle = CONFIG_TOGGLE_TRAINER_KANTO,
                .state = TRUE,
            }
        }
    },
    {
        .type = QUEST_REQUIREMENT_TYPE_CONFIG_TOGGLE,
        .perType = {
            .configToggle = {
                .toggle = CONFIG_TOGGLE_TRAINER_JOHTO,
                .state = TRUE,
            }
        }
    },
    {
        .type = QUEST_REQUIREMENT_TYPE_CONFIG_TOGGLE,
        .perType = {
            .configToggle = {
                .toggle = CONFIG_TOGGLE_TRAINER_HOENN,
                .state = TRUE,
            }
        }
    },
    {
        .type = QUEST_REQUIREMENT_TYPE_CONFIG_TOGGLE,
        .perType = {
            .configToggle = {
                .toggle = CONFIG_TOGGLE_TRAINER_SINNOH,
                .state = TRUE,
            }
        }
    },
    {
        .type = QUEST_REQUIREMENT_TYPE_CONFIG_TOGGLE,
        .perType = {
            .configToggle = {
                .toggle = CONFIG_TOGGLE_TRAINER_UNOVA,
                .state = TRUE,
            }
        }
    },
    {
        .type = QUEST_REQUIREMENT_TYPE_CONFIG_TOGGLE,
        .perType = {
            .configToggle = {
                .toggle = CONFIG_TOGGLE_TRAINER_KALOS,
                .state = TRUE,
            }
        }
    },
    {
        .type = QUEST_REQUIREMENT_TYPE_CONFIG_TOGGLE,
        .perType = {
            .configToggle = {
                .toggle = CONFIG_TOGGLE_TRAINER_ALOLA,
                .state = TRUE,
            }
        }
    },
    {
        .type = QUEST_REQUIREMENT_TYPE_CONFIG_TOGGLE,
        .perType = {
            .configToggle = {
                .toggle = CONFIG_TOGGLE_TRAINER_GALAR,
                .state = TRUE,
            }
        }
    },
    {
        .type = QUEST_REQUIREMENT_TYPE_CONFIG_TOGGLE,
        .perType = {
            .configToggle = {
                .toggle = CONFIG_TOGGLE_TRAINER_PALDEA,
                .state = TRUE,
            }
        }
    },
};
static u16 const sTriggerParams_TASTE_THE_RAINBOW_39_0[] = 
{
    CONFIG_RANGE_GAME_MODE_NUM,
    ROGUE_GAME_MODE_RAINBOW,
    ROGUE_GAME_MODE_RAINBOW_GAUNTLET,
};
static u16 const sTriggerParams_TASTE_THE_RAINBOW_39_1[] = 
{
};
static struct RogueQuestTrigger const sTriggers_TASTE_THE_RAINBOW_39[] = 
{
    {
        .callback = QuestCondition_IsConfigRangeEqualToAny,
        .passState = QUEST_STATUS_PENDING,
        .failState = QUEST_STATUS_FAIL,
        .flags = 0 | QUEST_TRIGGER_RUN_START,
        .params = sTriggerParams_TASTE_THE_RAINBOW_39_0,
        .paramCount = ARRAY_COUNT(sTriggerParams_TASTE_THE_RAINBOW_39_0),
    },
    {
        .callback = QuestCondition_Always,
        .passState = QUEST_STATUS_SUCCESS,
        .failState = QUEST_STATUS_PENDING,
        .flags = 0 | QUEST_TRIGGER_ENTER_HALL_OF_FAME,
        .params = sTriggerParams_TASTE_THE_RAINBOW_39_1,
        .paramCount = ARRAY_COUNT(sTriggerParams_TASTE_THE_RAINBOW_39_1),
    },
};
#endif

static u8 const sTitle_LONG_HAUL_40[] = _("Long Haul");
extern const u8 gQuestDescText_LONG_HAUL_40[];

static struct RogueQuestReward const sRewards_LONG_HAUL_40[] = 
{
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_MONEY,
        .perType = {
            .money = {
                .amount = QUEST_REWARD_LARGE_MONEY,
            }
        }
    },
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_ITEM,
        .perType = {
            .item = {
                .item = ITEM_BUILDING_SUPPLIES,
                .count = QUEST_REWARD_LARGE_BUILD_AMOUNT,
            }
        }
    },
};
static u16 const sTriggerParams_LONG_HAUL_40_0[] = 
{
    CONFIG_RANGE_GAME_MODE_NUM,
    ROGUE_GAME_MODE_GAUNTLET,
    ROGUE_GAME_MODE_RAINBOW_GAUNTLET,
};
static u16 const sTriggerParams_LONG_HAUL_40_1[] = 
{
};
static struct RogueQuestTrigger const sTriggers_LONG_HAUL_40[] = 
{
    {
        .callback = QuestCondition_IsConfigRangeEqualToAny,
        .passState = QUEST_STATUS_PENDING,
        .failState = QUEST_STATUS_FAIL,
        .flags = 0 | QUEST_TRIGGER_RUN_START,
        .params = sTriggerParams_LONG_HAUL_40_0,
        .paramCount = ARRAY_COUNT(sTriggerParams_LONG_HAUL_40_0),
    },
    {
        .callback = QuestCondition_Always,
        .passState = QUEST_STATUS_SUCCESS,
        .failState = QUEST_STATUS_PENDING,
        .flags = 0 | QUEST_TRIGGER_ENTER_HALL_OF_FAME,
        .params = sTriggerParams_LONG_HAUL_40_1,
        .paramCount = ARRAY_COUNT(sTriggerParams_LONG_HAUL_40_1),
    },
};

#if defined(ROGUE_EXPANSION)
static u8 const sTitle_BATTLE_GIMMICK_41[] = _("Battle Gimmick");
extern const u8 gQuestDescText_BATTLE_GIMMICK_41[];

static struct RogueQuestReward const sRewards_BATTLE_GIMMICK_41[] = 
{
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_MONEY,
        .perType = {
            .money = {
                .amount = QUEST_REWARD_LARGE_MONEY,
            }
        }
    },
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_ITEM,
        .perType = {
            .item = {
                .item = ITEM_BUILDING_SUPPLIES,
                .count = QUEST_REWARD_LARGE_BUILD_AMOUNT,
            }
        }
    },
};
static u16 const sTriggerParams_BATTLE_GIMMICK_41_0[] = 
{
    ITEM_MEGA_RING,
    ITEM_Z_POWER_RING,
    ITEM_DYNAMAX_BAND,
    ITEM_TERA_ORB,
};
static struct RogueQuestTrigger const sTriggers_BATTLE_GIMMICK_41[] = 
{
    {
        .callback = QuestCondition_BagContainsItemsOR,
        .passState = QUEST_STATUS_SUCCESS,
        .failState = QUEST_STATUS_PENDING,
        .flags = 0 | QUEST_TRIGGER_ENTER_HALL_OF_FAME,
        .params = sTriggerParams_BATTLE_GIMMICK_41_0,
        .paramCount = ARRAY_COUNT(sTriggerParams_BATTLE_GIMMICK_41_0),
    },
};
#endif

static u8 const sTitle_REGIONAL_STYLE_42[] = _("Regional Style");
extern const u8 gQuestDescText_REGIONAL_STYLE_42[];

static u8 const sCustomPopupTitle_REGIONAL_STYLE_42_2[] = _("Labs");
static u8 const sCustomPopupSubtitle_REGIONAL_STYLE_42_2[] = _("{COLOR LIGHT_BLUE}{SHADOW BLUE}Path Uncovered…");

static struct CustomPopup const sCustomPopup_REGIONAL_STYLE_42_2 = 
{
    .titleStr = sCustomPopupTitle_REGIONAL_STYLE_42_2,
    .subtitleStr = sCustomPopupSubtitle_REGIONAL_STYLE_42_2,
    .itemIcon = ITEM_TOWN_MAP,
    .soundEffect = 0,
    .fanfare = MUS_RG_OBTAIN_KEY_ITEM,
};

static struct RogueQuestReward const sRewards_REGIONAL_STYLE_42[] = 
{
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_MONEY,
        .perType = {
            .money = {
                .amount = QUEST_REWARD_SMALL_MONEY,
            }
        }
    },
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_ITEM,
        .perType = {
            .item = {
                .item = ITEM_BUILDING_SUPPLIES,
                .count = QUEST_REWARD_LARGE_BUILD_AMOUNT,
            }
        }
    },
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = &sCustomPopup_REGIONAL_STYLE_42_2,
        .type = QUEST_REWARD_HUB_UPGRADE,
        .perType = {
            .hubUpgrade = {
                .upgradeId = HUB_UPGRADE_LAB_UNIQUE_MON_LAB,
            }
        }
    },
};
static u16 const sTriggerParams_REGIONAL_STYLE_42_0[] = 
{
    QUEST_ID_KANTO_STYLE,
    QUEST_ID_JOHTO_STYLE,
    QUEST_ID_HOENN_STYLE,
    #ifdef ROGUE_EXPANSION
    QUEST_ID_SINNOH_STYLE,
    QUEST_ID_UNOVA_STYLE,
    QUEST_ID_KALOS_STYLE,
    QUEST_ID_ALOLA_STYLE,
    QUEST_ID_GALAR_STYLE,
    QUEST_ID_PALDEA_STYLE,
    #endif
    QUEST_ID_ORRE_STYLE,
};
static struct RogueQuestTrigger const sTriggers_REGIONAL_STYLE_42[] = 
{
    {
        .callback = QuestCondition_HasCompletedQuestOR,
        .passState = QUEST_STATUS_SUCCESS,
        .failState = QUEST_STATUS_PENDING,
        .flags = 0 | QUEST_TRIGGER_MISC_UPDATE,
        .params = sTriggerParams_REGIONAL_STYLE_42_0,
        .paramCount = ARRAY_COUNT(sTriggerParams_REGIONAL_STYLE_42_0),
    },
};

static u8 const sTitle_KANTO_STYLE_43[] = _("Kanto Style");
extern const u8 gQuestDescText_KANTO_STYLE_43[];

static struct RogueQuestReward const sRewards_KANTO_STYLE_43[] = 
{
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_MONEY,
        .perType = {
            .money = {
                .amount = QUEST_REWARD_MEDIUM_MONEY,
            }
        }
    },
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_POKEMON,
        .perType = {
            .pokemon = {
                .species = SPECIES_FARFETCHD,
                .isShiny = FALSE,
                .customMonId = CUSTOM_MON_EXOTIC_FARFETCHD,
                .nickname = NULL,
            }
        }
    },
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_HARD,
        .customPopup = NULL,
        .type = QUEST_REWARD_POKEMON,
        .perType = {
            .pokemon = {
                .species = SPECIES_DRATINI,
                .isShiny = TRUE,
                .customMonId = CUSTOM_MON_NONE,
                .nickname = NULL,
            }
        }
    },
};
static u16 const sTriggerParams_KANTO_STYLE_43_0[] = 
{
};
static u16 const sTriggerParams_KANTO_STYLE_43_1[] = 
{
    POKEDEX_REGION_KANTO,
};
static u16 const sTriggerParams_KANTO_STYLE_43_2[] = 
{
    CONFIG_TOGGLE_TRAINER_KANTO,
};
static u16 const sTriggerParams_KANTO_STYLE_43_3[] = 
{
};
static struct RogueQuestTrigger const sTriggers_KANTO_STYLE_43[] = 
{
    {
        .callback = QuestCondition_IsStandardRunActive,
        .passState = QUEST_STATUS_PENDING,
        .failState = QUEST_STATUS_FAIL,
        .flags = 0 | QUEST_TRIGGER_RUN_START,
        .params = sTriggerParams_KANTO_STYLE_43_0,
        .paramCount = ARRAY_COUNT(sTriggerParams_KANTO_STYLE_43_0),
    },
    {
        .callback = QuestCondition_IsPokedexRegion,
        .passState = QUEST_STATUS_PENDING,
        .failState = QUEST_STATUS_FAIL,
        .flags = 0 | QUEST_TRIGGER_RUN_START,
        .params = sTriggerParams_KANTO_STYLE_43_1,
        .paramCount = ARRAY_COUNT(sTriggerParams_KANTO_STYLE_43_1),
    },
    {
        .callback = QuestCondition_AreOnlyTheseTrainersActive,
        .passState = QUEST_STATUS_PENDING,
        .failState = QUEST_STATUS_FAIL,
        .flags = 0 | QUEST_TRIGGER_RUN_START,
        .params = sTriggerParams_KANTO_STYLE_43_2,
        .paramCount = ARRAY_COUNT(sTriggerParams_KANTO_STYLE_43_2),
    },
    {
        .callback = QuestCondition_Always,
        .passState = QUEST_STATUS_SUCCESS,
        .failState = QUEST_STATUS_PENDING,
        .flags = 0 | QUEST_TRIGGER_ENTER_HALL_OF_FAME,
        .params = sTriggerParams_KANTO_STYLE_43_3,
        .paramCount = ARRAY_COUNT(sTriggerParams_KANTO_STYLE_43_3),
    },
};

static u8 const sTitle_JOHTO_STYLE_44[] = _("Johto Style");
extern const u8 gQuestDescText_JOHTO_STYLE_44[];

static struct RogueQuestReward const sRewards_JOHTO_STYLE_44[] = 
{
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_MONEY,
        .perType = {
            .money = {
                .amount = QUEST_REWARD_MEDIUM_MONEY,
            }
        }
    },
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_POKEMON,
        .perType = {
            .pokemon = {
                .species = SPECIES_SPINARAK,
                .isShiny = FALSE,
                .customMonId = CUSTOM_MON_EXOTIC_SPINARAK,
                .nickname = NULL,
            }
        }
    },
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_HARD,
        .customPopup = NULL,
        .type = QUEST_REWARD_POKEMON,
        .perType = {
            .pokemon = {
                .species = SPECIES_SNEASEL,
                .isShiny = TRUE,
                .customMonId = CUSTOM_MON_NONE,
                .nickname = NULL,
            }
        }
    },
};
static u16 const sTriggerParams_JOHTO_STYLE_44_0[] = 
{
};
static u16 const sTriggerParams_JOHTO_STYLE_44_1[] = 
{
    POKEDEX_REGION_JOHTO,
};
static u16 const sTriggerParams_JOHTO_STYLE_44_2[] = 
{
    CONFIG_TOGGLE_TRAINER_JOHTO,
};
static u16 const sTriggerParams_JOHTO_STYLE_44_3[] = 
{
};
static struct RogueQuestTrigger const sTriggers_JOHTO_STYLE_44[] = 
{
    {
        .callback = QuestCondition_IsStandardRunActive,
        .passState = QUEST_STATUS_PENDING,
        .failState = QUEST_STATUS_FAIL,
        .flags = 0 | QUEST_TRIGGER_RUN_START,
        .params = sTriggerParams_JOHTO_STYLE_44_0,
        .paramCount = ARRAY_COUNT(sTriggerParams_JOHTO_STYLE_44_0),
    },
    {
        .callback = QuestCondition_IsPokedexRegion,
        .passState = QUEST_STATUS_PENDING,
        .failState = QUEST_STATUS_FAIL,
        .flags = 0 | QUEST_TRIGGER_RUN_START,
        .params = sTriggerParams_JOHTO_STYLE_44_1,
        .paramCount = ARRAY_COUNT(sTriggerParams_JOHTO_STYLE_44_1),
    },
    {
        .callback = QuestCondition_AreOnlyTheseTrainersActive,
        .passState = QUEST_STATUS_PENDING,
        .failState = QUEST_STATUS_FAIL,
        .flags = 0 | QUEST_TRIGGER_RUN_START,
        .params = sTriggerParams_JOHTO_STYLE_44_2,
        .paramCount = ARRAY_COUNT(sTriggerParams_JOHTO_STYLE_44_2),
    },
    {
        .callback = QuestCondition_Always,
        .passState = QUEST_STATUS_SUCCESS,
        .failState = QUEST_STATUS_PENDING,
        .flags = 0 | QUEST_TRIGGER_ENTER_HALL_OF_FAME,
        .params = sTriggerParams_JOHTO_STYLE_44_3,
        .paramCount = ARRAY_COUNT(sTriggerParams_JOHTO_STYLE_44_3),
    },
};

static u8 const sTitle_HOENN_STYLE_45[] = _("Hoenn Style");
extern const u8 gQuestDescText_HOENN_STYLE_45[];

static struct RogueQuestReward const sRewards_HOENN_STYLE_45[] = 
{
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_MONEY,
        .perType = {
            .money = {
                .amount = QUEST_REWARD_MEDIUM_MONEY,
            }
        }
    },
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_POKEMON,
        .perType = {
            .pokemon = {
                .species = SPECIES_CASTFORM,
                .isShiny = FALSE,
                .customMonId = CUSTOM_MON_EXOTIC_CASTFORM,
                .nickname = NULL,
            }
        }
    },
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_HARD,
        .customPopup = NULL,
        .type = QUEST_REWARD_POKEMON,
        .perType = {
            .pokemon = {
                .species = SPECIES_BELDUM,
                .isShiny = TRUE,
                .customMonId = CUSTOM_MON_NONE,
                .nickname = NULL,
            }
        }
    },
};
static u16 const sTriggerParams_HOENN_STYLE_45_0[] = 
{
};
static u16 const sTriggerParams_HOENN_STYLE_45_1[] = 
{
    POKEDEX_REGION_HOENN,
};
static u16 const sTriggerParams_HOENN_STYLE_45_2[] = 
{
    CONFIG_TOGGLE_TRAINER_HOENN,
};
static u16 const sTriggerParams_HOENN_STYLE_45_3[] = 
{
};
static struct RogueQuestTrigger const sTriggers_HOENN_STYLE_45[] = 
{
    {
        .callback = QuestCondition_IsStandardRunActive,
        .passState = QUEST_STATUS_PENDING,
        .failState = QUEST_STATUS_FAIL,
        .flags = 0 | QUEST_TRIGGER_RUN_START,
        .params = sTriggerParams_HOENN_STYLE_45_0,
        .paramCount = ARRAY_COUNT(sTriggerParams_HOENN_STYLE_45_0),
    },
    {
        .callback = QuestCondition_IsPokedexRegion,
        .passState = QUEST_STATUS_PENDING,
        .failState = QUEST_STATUS_FAIL,
        .flags = 0 | QUEST_TRIGGER_RUN_START,
        .params = sTriggerParams_HOENN_STYLE_45_1,
        .paramCount = ARRAY_COUNT(sTriggerParams_HOENN_STYLE_45_1),
    },
    {
        .callback = QuestCondition_AreOnlyTheseTrainersActive,
        .passState = QUEST_STATUS_PENDING,
        .failState = QUEST_STATUS_FAIL,
        .flags = 0 | QUEST_TRIGGER_RUN_START,
        .params = sTriggerParams_HOENN_STYLE_45_2,
        .paramCount = ARRAY_COUNT(sTriggerParams_HOENN_STYLE_45_2),
    },
    {
        .callback = QuestCondition_Always,
        .passState = QUEST_STATUS_SUCCESS,
        .failState = QUEST_STATUS_PENDING,
        .flags = 0 | QUEST_TRIGGER_ENTER_HALL_OF_FAME,
        .params = sTriggerParams_HOENN_STYLE_45_3,
        .paramCount = ARRAY_COUNT(sTriggerParams_HOENN_STYLE_45_3),
    },
};

#if defined(ROGUE_EXPANSION)
static u8 const sTitle_SINNOH_STYLE_46[] = _("Sinnoh Style");
extern const u8 gQuestDescText_SINNOH_STYLE_46[];

static struct RogueQuestReward const sRewards_SINNOH_STYLE_46[] = 
{
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_MONEY,
        .perType = {
            .money = {
                .amount = QUEST_REWARD_MEDIUM_MONEY,
            }
        }
    },
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_POKEMON,
        .perType = {
            .pokemon = {
                .species = SPECIES_CARNIVINE,
                .isShiny = FALSE,
                .customMonId = CUSTOM_MON_EXOTIC_CARNIVINE,
                .nickname = NULL,
            }
        }
    },
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_HARD,
        .customPopup = NULL,
        .type = QUEST_REWARD_POKEMON,
        .perType = {
            .pokemon = {
                .species = SPECIES_SHINX,
                .isShiny = TRUE,
                .customMonId = CUSTOM_MON_NONE,
                .nickname = NULL,
            }
        }
    },
};
static u16 const sTriggerParams_SINNOH_STYLE_46_0[] = 
{
};
static u16 const sTriggerParams_SINNOH_STYLE_46_1[] = 
{
    POKEDEX_REGION_SINNOH,
};
static u16 const sTriggerParams_SINNOH_STYLE_46_2[] = 
{
    CONFIG_TOGGLE_TRAINER_SINNOH,
};
static u16 const sTriggerParams_SINNOH_STYLE_46_3[] = 
{
};
static struct RogueQuestTrigger const sTriggers_SINNOH_STYLE_46[] = 
{
    {
        .callback = QuestCondition_IsStandardRunActive,
        .passState = QUEST_STATUS_PENDING,
        .failState = QUEST_STATUS_FAIL,
        .flags = 0 | QUEST_TRIGGER_RUN_START,
        .params = sTriggerParams_SINNOH_STYLE_46_0,
        .paramCount = ARRAY_COUNT(sTriggerParams_SINNOH_STYLE_46_0),
    },
    {
        .callback = QuestCondition_IsPokedexRegion,
        .passState = QUEST_STATUS_PENDING,
        .failState = QUEST_STATUS_FAIL,
        .flags = 0 | QUEST_TRIGGER_RUN_START,
        .params = sTriggerParams_SINNOH_STYLE_46_1,
        .paramCount = ARRAY_COUNT(sTriggerParams_SINNOH_STYLE_46_1),
    },
    {
        .callback = QuestCondition_AreOnlyTheseTrainersActive,
        .passState = QUEST_STATUS_PENDING,
        .failState = QUEST_STATUS_FAIL,
        .flags = 0 | QUEST_TRIGGER_RUN_START,
        .params = sTriggerParams_SINNOH_STYLE_46_2,
        .paramCount = ARRAY_COUNT(sTriggerParams_SINNOH_STYLE_46_2),
    },
    {
        .callback = QuestCondition_Always,
        .passState = QUEST_STATUS_SUCCESS,
        .failState = QUEST_STATUS_PENDING,
        .flags = 0 | QUEST_TRIGGER_ENTER_HALL_OF_FAME,
        .params = sTriggerParams_SINNOH_STYLE_46_3,
        .paramCount = ARRAY_COUNT(sTriggerParams_SINNOH_STYLE_46_3),
    },
};
#endif

#if defined(ROGUE_EXPANSION)
static u8 const sTitle_UNOVA_STYLE_47[] = _("Unova Style");
extern const u8 gQuestDescText_UNOVA_STYLE_47[];

static struct RogueQuestReward const sRewards_UNOVA_STYLE_47[] = 
{
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_MONEY,
        .perType = {
            .money = {
                .amount = QUEST_REWARD_MEDIUM_MONEY,
            }
        }
    },
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_POKEMON,
        .perType = {
            .pokemon = {
                .species = SPECIES_KLINK,
                .isShiny = FALSE,
                .customMonId = CUSTOM_MON_EXOTIC_KLINK,
                .nickname = NULL,
            }
        }
    },
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_HARD,
        .customPopup = NULL,
        .type = QUEST_REWARD_POKEMON,
        .perType = {
            .pokemon = {
                .species = SPECIES_LITWICK,
                .isShiny = TRUE,
                .customMonId = CUSTOM_MON_NONE,
                .nickname = NULL,
            }
        }
    },
};
static u16 const sTriggerParams_UNOVA_STYLE_47_0[] = 
{
};
static u16 const sTriggerParams_UNOVA_STYLE_47_1[] = 
{
    POKEDEX_REGION_UNOVA,
};
static u16 const sTriggerParams_UNOVA_STYLE_47_2[] = 
{
    CONFIG_TOGGLE_TRAINER_UNOVA,
};
static u16 const sTriggerParams_UNOVA_STYLE_47_3[] = 
{
};
static struct RogueQuestTrigger const sTriggers_UNOVA_STYLE_47[] = 
{
    {
        .callback = QuestCondition_IsStandardRunActive,
        .passState = QUEST_STATUS_PENDING,
        .failState = QUEST_STATUS_FAIL,
        .flags = 0 | QUEST_TRIGGER_RUN_START,
        .params = sTriggerParams_UNOVA_STYLE_47_0,
        .paramCount = ARRAY_COUNT(sTriggerParams_UNOVA_STYLE_47_0),
    },
    {
        .callback = QuestCondition_IsPokedexRegion,
        .passState = QUEST_STATUS_PENDING,
        .failState = QUEST_STATUS_FAIL,
        .flags = 0 | QUEST_TRIGGER_RUN_START,
        .params = sTriggerParams_UNOVA_STYLE_47_1,
        .paramCount = ARRAY_COUNT(sTriggerParams_UNOVA_STYLE_47_1),
    },
    {
        .callback = QuestCondition_AreOnlyTheseTrainersActive,
        .passState = QUEST_STATUS_PENDING,
        .failState = QUEST_STATUS_FAIL,
        .flags = 0 | QUEST_TRIGGER_RUN_START,
        .params = sTriggerParams_UNOVA_STYLE_47_2,
        .paramCount = ARRAY_COUNT(sTriggerParams_UNOVA_STYLE_47_2),
    },
    {
        .callback = QuestCondition_Always,
        .passState = QUEST_STATUS_SUCCESS,
        .failState = QUEST_STATUS_PENDING,
        .flags = 0 | QUEST_TRIGGER_ENTER_HALL_OF_FAME,
        .params = sTriggerParams_UNOVA_STYLE_47_3,
        .paramCount = ARRAY_COUNT(sTriggerParams_UNOVA_STYLE_47_3),
    },
};
#endif

#if defined(ROGUE_EXPANSION)
static u8 const sTitle_KALOS_STYLE_48[] = _("Kalos Style");
extern const u8 gQuestDescText_KALOS_STYLE_48[];

static struct RogueQuestReward const sRewards_KALOS_STYLE_48[] = 
{
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_MONEY,
        .perType = {
            .money = {
                .amount = QUEST_REWARD_MEDIUM_MONEY,
            }
        }
    },
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_POKEMON,
        .perType = {
            .pokemon = {
                .species = SPECIES_LITLEO,
                .isShiny = FALSE,
                .customMonId = CUSTOM_MON_EXOTIC_LITLEO,
                .nickname = NULL,
            }
        }
    },
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_HARD,
        .customPopup = NULL,
        .type = QUEST_REWARD_POKEMON,
        .perType = {
            .pokemon = {
                .species = SPECIES_HONEDGE,
                .isShiny = TRUE,
                .customMonId = CUSTOM_MON_NONE,
                .nickname = NULL,
            }
        }
    },
};
static u16 const sTriggerParams_KALOS_STYLE_48_0[] = 
{
};
static u16 const sTriggerParams_KALOS_STYLE_48_1[] = 
{
    POKEDEX_REGION_KALOS,
};
static u16 const sTriggerParams_KALOS_STYLE_48_2[] = 
{
    CONFIG_TOGGLE_TRAINER_KALOS,
};
static u16 const sTriggerParams_KALOS_STYLE_48_3[] = 
{
};
static struct RogueQuestTrigger const sTriggers_KALOS_STYLE_48[] = 
{
    {
        .callback = QuestCondition_IsStandardRunActive,
        .passState = QUEST_STATUS_PENDING,
        .failState = QUEST_STATUS_FAIL,
        .flags = 0 | QUEST_TRIGGER_RUN_START,
        .params = sTriggerParams_KALOS_STYLE_48_0,
        .paramCount = ARRAY_COUNT(sTriggerParams_KALOS_STYLE_48_0),
    },
    {
        .callback = QuestCondition_IsPokedexRegion,
        .passState = QUEST_STATUS_PENDING,
        .failState = QUEST_STATUS_FAIL,
        .flags = 0 | QUEST_TRIGGER_RUN_START,
        .params = sTriggerParams_KALOS_STYLE_48_1,
        .paramCount = ARRAY_COUNT(sTriggerParams_KALOS_STYLE_48_1),
    },
    {
        .callback = QuestCondition_AreOnlyTheseTrainersActive,
        .passState = QUEST_STATUS_PENDING,
        .failState = QUEST_STATUS_FAIL,
        .flags = 0 | QUEST_TRIGGER_RUN_START,
        .params = sTriggerParams_KALOS_STYLE_48_2,
        .paramCount = ARRAY_COUNT(sTriggerParams_KALOS_STYLE_48_2),
    },
    {
        .callback = QuestCondition_Always,
        .passState = QUEST_STATUS_SUCCESS,
        .failState = QUEST_STATUS_PENDING,
        .flags = 0 | QUEST_TRIGGER_ENTER_HALL_OF_FAME,
        .params = sTriggerParams_KALOS_STYLE_48_3,
        .paramCount = ARRAY_COUNT(sTriggerParams_KALOS_STYLE_48_3),
    },
};
#endif

#if defined(ROGUE_EXPANSION)
static u8 const sTitle_ALOLA_STYLE_49[] = _("Alola Style");
extern const u8 gQuestDescText_ALOLA_STYLE_49[];

static struct RogueQuestReward const sRewards_ALOLA_STYLE_49[] = 
{
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_MONEY,
        .perType = {
            .money = {
                .amount = QUEST_REWARD_MEDIUM_MONEY,
            }
        }
    },
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_POKEMON,
        .perType = {
            .pokemon = {
                .species = SPECIES_DRAMPA,
                .isShiny = FALSE,
                .customMonId = CUSTOM_MON_EXOTIC_DRAMPA,
                .nickname = NULL,
            }
        }
    },
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_HARD,
        .customPopup = NULL,
        .type = QUEST_REWARD_POKEMON,
        .perType = {
            .pokemon = {
                .species = SPECIES_SANDYGAST,
                .isShiny = TRUE,
                .customMonId = CUSTOM_MON_NONE,
                .nickname = NULL,
            }
        }
    },
};
static u16 const sTriggerParams_ALOLA_STYLE_49_0[] = 
{
};
static u16 const sTriggerParams_ALOLA_STYLE_49_1[] = 
{
    POKEDEX_REGION_ALOLA,
};
static u16 const sTriggerParams_ALOLA_STYLE_49_2[] = 
{
    CONFIG_TOGGLE_TRAINER_ALOLA,
};
static u16 const sTriggerParams_ALOLA_STYLE_49_3[] = 
{
};
static struct RogueQuestTrigger const sTriggers_ALOLA_STYLE_49[] = 
{
    {
        .callback = QuestCondition_IsStandardRunActive,
        .passState = QUEST_STATUS_PENDING,
        .failState = QUEST_STATUS_FAIL,
        .flags = 0 | QUEST_TRIGGER_RUN_START,
        .params = sTriggerParams_ALOLA_STYLE_49_0,
        .paramCount = ARRAY_COUNT(sTriggerParams_ALOLA_STYLE_49_0),
    },
    {
        .callback = QuestCondition_IsPokedexRegion,
        .passState = QUEST_STATUS_PENDING,
        .failState = QUEST_STATUS_FAIL,
        .flags = 0 | QUEST_TRIGGER_RUN_START,
        .params = sTriggerParams_ALOLA_STYLE_49_1,
        .paramCount = ARRAY_COUNT(sTriggerParams_ALOLA_STYLE_49_1),
    },
    {
        .callback = QuestCondition_AreOnlyTheseTrainersActive,
        .passState = QUEST_STATUS_PENDING,
        .failState = QUEST_STATUS_FAIL,
        .flags = 0 | QUEST_TRIGGER_RUN_START,
        .params = sTriggerParams_ALOLA_STYLE_49_2,
        .paramCount = ARRAY_COUNT(sTriggerParams_ALOLA_STYLE_49_2),
    },
    {
        .callback = QuestCondition_Always,
        .passState = QUEST_STATUS_SUCCESS,
        .failState = QUEST_STATUS_PENDING,
        .flags = 0 | QUEST_TRIGGER_ENTER_HALL_OF_FAME,
        .params = sTriggerParams_ALOLA_STYLE_49_3,
        .paramCount = ARRAY_COUNT(sTriggerParams_ALOLA_STYLE_49_3),
    },
};
#endif

#if defined(ROGUE_EXPANSION)
static u8 const sTitle_GALAR_STYLE_50[] = _("Galar Style");
extern const u8 gQuestDescText_GALAR_STYLE_50[];

static struct RogueQuestReward const sRewards_GALAR_STYLE_50[] = 
{
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_MONEY,
        .perType = {
            .money = {
                .amount = QUEST_REWARD_MEDIUM_MONEY,
            }
        }
    },
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_POKEMON,
        .perType = {
            .pokemon = {
                .species = SPECIES_CLOBBOPUS,
                .isShiny = FALSE,
                .customMonId = CUSTOM_MON_EXOTIC_CLOBBOPUS,
                .nickname = NULL,
            }
        }
    },
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_HARD,
        .customPopup = NULL,
        .type = QUEST_REWARD_POKEMON,
        .perType = {
            .pokemon = {
                .species = SPECIES_ROOKIDEE,
                .isShiny = TRUE,
                .customMonId = CUSTOM_MON_NONE,
                .nickname = NULL,
            }
        }
    },
};
static u16 const sTriggerParams_GALAR_STYLE_50_0[] = 
{
};
static u16 const sTriggerParams_GALAR_STYLE_50_1[] = 
{
    POKEDEX_REGION_GALAR,
};
static u16 const sTriggerParams_GALAR_STYLE_50_2[] = 
{
    CONFIG_TOGGLE_TRAINER_GALAR,
};
static u16 const sTriggerParams_GALAR_STYLE_50_3[] = 
{
};
static struct RogueQuestTrigger const sTriggers_GALAR_STYLE_50[] = 
{
    {
        .callback = QuestCondition_IsStandardRunActive,
        .passState = QUEST_STATUS_PENDING,
        .failState = QUEST_STATUS_FAIL,
        .flags = 0 | QUEST_TRIGGER_RUN_START,
        .params = sTriggerParams_GALAR_STYLE_50_0,
        .paramCount = ARRAY_COUNT(sTriggerParams_GALAR_STYLE_50_0),
    },
    {
        .callback = QuestCondition_IsPokedexRegion,
        .passState = QUEST_STATUS_PENDING,
        .failState = QUEST_STATUS_FAIL,
        .flags = 0 | QUEST_TRIGGER_RUN_START,
        .params = sTriggerParams_GALAR_STYLE_50_1,
        .paramCount = ARRAY_COUNT(sTriggerParams_GALAR_STYLE_50_1),
    },
    {
        .callback = QuestCondition_AreOnlyTheseTrainersActive,
        .passState = QUEST_STATUS_PENDING,
        .failState = QUEST_STATUS_FAIL,
        .flags = 0 | QUEST_TRIGGER_RUN_START,
        .params = sTriggerParams_GALAR_STYLE_50_2,
        .paramCount = ARRAY_COUNT(sTriggerParams_GALAR_STYLE_50_2),
    },
    {
        .callback = QuestCondition_Always,
        .passState = QUEST_STATUS_SUCCESS,
        .failState = QUEST_STATUS_PENDING,
        .flags = 0 | QUEST_TRIGGER_ENTER_HALL_OF_FAME,
        .params = sTriggerParams_GALAR_STYLE_50_3,
        .paramCount = ARRAY_COUNT(sTriggerParams_GALAR_STYLE_50_3),
    },
};
#endif

#if defined(ROGUE_EXPANSION)
static u8 const sTitle_PALDEA_STYLE_51[] = _("Paldea Style");
extern const u8 gQuestDescText_PALDEA_STYLE_51[];

static struct RogueQuestReward const sRewards_PALDEA_STYLE_51[] = 
{
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_MONEY,
        .perType = {
            .money = {
                .amount = QUEST_REWARD_MEDIUM_MONEY,
            }
        }
    },
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_POKEMON,
        .perType = {
            .pokemon = {
                .species = SPECIES_CAPSAKID,
                .isShiny = FALSE,
                .customMonId = CUSTOM_MON_EXOTIC_CAPSAKID,
                .nickname = NULL,
            }
        }
    },
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_HARD,
        .customPopup = NULL,
        .type = QUEST_REWARD_POKEMON,
        .perType = {
            .pokemon = {
                .species = SPECIES_VAROOM,
                .isShiny = TRUE,
                .customMonId = CUSTOM_MON_NONE,
                .nickname = NULL,
            }
        }
    },
};
static u16 const sTriggerParams_PALDEA_STYLE_51_0[] = 
{
};
static u16 const sTriggerParams_PALDEA_STYLE_51_1[] = 
{
    POKEDEX_REGION_PALDEA,
};
static u16 const sTriggerParams_PALDEA_STYLE_51_2[] = 
{
    CONFIG_TOGGLE_TRAINER_PALDEA,
};
static u16 const sTriggerParams_PALDEA_STYLE_51_3[] = 
{
};
static struct RogueQuestTrigger const sTriggers_PALDEA_STYLE_51[] = 
{
    {
        .callback = QuestCondition_IsStandardRunActive,
        .passState = QUEST_STATUS_PENDING,
        .failState = QUEST_STATUS_FAIL,
        .flags = 0 | QUEST_TRIGGER_RUN_START,
        .params = sTriggerParams_PALDEA_STYLE_51_0,
        .paramCount = ARRAY_COUNT(sTriggerParams_PALDEA_STYLE_51_0),
    },
    {
        .callback = QuestCondition_IsPokedexRegion,
        .passState = QUEST_STATUS_PENDING,
        .failState = QUEST_STATUS_FAIL,
        .flags = 0 | QUEST_TRIGGER_RUN_START,
        .params = sTriggerParams_PALDEA_STYLE_51_1,
        .paramCount = ARRAY_COUNT(sTriggerParams_PALDEA_STYLE_51_1),
    },
    {
        .callback = QuestCondition_AreOnlyTheseTrainersActive,
        .passState = QUEST_STATUS_PENDING,
        .failState = QUEST_STATUS_FAIL,
        .flags = 0 | QUEST_TRIGGER_RUN_START,
        .params = sTriggerParams_PALDEA_STYLE_51_2,
        .paramCount = ARRAY_COUNT(sTriggerParams_PALDEA_STYLE_51_2),
    },
    {
        .callback = QuestCondition_Always,
        .passState = QUEST_STATUS_SUCCESS,
        .failState = QUEST_STATUS_PENDING,
        .flags = 0 | QUEST_TRIGGER_ENTER_HALL_OF_FAME,
        .params = sTriggerParams_PALDEA_STYLE_51_3,
        .paramCount = ARRAY_COUNT(sTriggerParams_PALDEA_STYLE_51_3),
    },
};
#endif

static u8 const sTitle_ORRE_STYLE_52[] = _("Orre Style");
extern const u8 gQuestDescText_ORRE_STYLE_52[];

static struct RogueQuestReward const sRewards_ORRE_STYLE_52[] = 
{
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_MONEY,
        .perType = {
            .money = {
                .amount = QUEST_REWARD_MEDIUM_MONEY,
            }
        }
    },
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_POKEMON,
        .perType = {
            .pokemon = {
                .species = SPECIES_LOTAD,
                .isShiny = FALSE,
                .customMonId = CUSTOM_MON_EXOTIC_LOTAD,
                .nickname = NULL,
            }
        }
    },
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_HARD,
        .customPopup = NULL,
        .type = QUEST_REWARD_POKEMON,
        .perType = {
            .pokemon = {
                .species = SPECIES_UMBREON,
                .isShiny = TRUE,
                .customMonId = CUSTOM_MON_NONE,
                .nickname = NULL,
            }
        }
    },
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_HARD,
        .customPopup = NULL,
        .type = QUEST_REWARD_POKEMON,
        .perType = {
            .pokemon = {
                .species = SPECIES_ESPEON,
                .isShiny = TRUE,
                .customMonId = CUSTOM_MON_NONE,
                .nickname = NULL,
            }
        }
    },
};
static struct RogueQuestRequirement const sRequirements_ORRE_STYLE_52[] = 
{
    {
        .type = QUEST_REQUIREMENT_TYPE_CONFIG_RANGE,
        .perType = {
            .configRange = {
                .range = CONFIG_RANGE_BATTLE_FORMAT,
                .operation = QUEST_REQUIREMENT_OPERATION_EQUAL,
                .value = BATTLE_FORMAT_DOUBLES,
            }
        }
    },
    {
        .type = QUEST_REQUIREMENT_TYPE_ITEM,
        .perType = {
            .item = {
                .itemId = ITEM_SNAG_CURSE,
                .operation = QUEST_REQUIREMENT_OPERATION_GREATER_THAN_EQUAL,
                .count = 1,
            }
        }
    },
};
static u16 const sTriggerParams_ORRE_STYLE_52_0[] = 
{
    SPECIES_UMBREON,
    SPECIES_ESPEON,
};
static struct RogueQuestTrigger const sTriggers_ORRE_STYLE_52[] = 
{
    {
        .callback = QuestCondition_PartyContainsAllSpecies,
        .passState = QUEST_STATUS_SUCCESS,
        .failState = QUEST_STATUS_FAIL,
        .flags = 0 | QUEST_TRIGGER_ENTER_HALL_OF_FAME,
        .params = sTriggerParams_ORRE_STYLE_52_0,
        .paramCount = ARRAY_COUNT(sTriggerParams_ORRE_STYLE_52_0),
    },
};

static u8 const sTitle_TYPE_MASTER_53[] = _("Type Master");
extern const u8 gQuestDescText_TYPE_MASTER_53[];

static struct RogueQuestReward const sRewards_TYPE_MASTER_53[] = 
{
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_MONEY,
        .perType = {
            .money = {
                .amount = QUEST_REWARD_MEDIUM_MONEY,
            }
        }
    },
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_ITEM,
        .perType = {
            .item = {
                .item = ITEM_BUILDING_SUPPLIES,
                .count = QUEST_REWARD_LARGE_BUILD_AMOUNT,
            }
        }
    },
};
static u16 const sTriggerParams_TYPE_MASTER_53_0[] = 
{
    QUEST_ID_NORMAL_MASTER,
    QUEST_ID_FIGHTING_MASTER,
    QUEST_ID_FLYING_MASTER,
    QUEST_ID_POISON_MASTER,
    QUEST_ID_GROUND_MASTER,
    QUEST_ID_ROCK_MASTER,
    QUEST_ID_BUG_MASTER,
    QUEST_ID_GHOST_MASTER,
    QUEST_ID_STEEL_MASTER,
    QUEST_ID_FIRE_MASTER,
    QUEST_ID_WATER_MASTER,
    QUEST_ID_GRASS_MASTER,
    QUEST_ID_ELECTRIC_MASTER,
    QUEST_ID_PSYCHIC_MASTER,
    QUEST_ID_ICE_MASTER,
    QUEST_ID_DRAGON_MASTER,
    QUEST_ID_DARK_MASTER,
    #ifdef ROGUE_EXPANSION
    QUEST_ID_FAIRY_MASTER,
    #endif
};
static struct RogueQuestTrigger const sTriggers_TYPE_MASTER_53[] = 
{
    {
        .callback = QuestCondition_HasCompletedQuestOR,
        .passState = QUEST_STATUS_SUCCESS,
        .failState = QUEST_STATUS_PENDING,
        .flags = 0 | QUEST_TRIGGER_MISC_UPDATE,
        .params = sTriggerParams_TYPE_MASTER_53_0,
        .paramCount = ARRAY_COUNT(sTriggerParams_TYPE_MASTER_53_0),
    },
};

static u8 const sTitle_NORMAL_MASTER_54[] = _("Normal Master");
extern const u8 gQuestDescText_NORMAL_MASTER_54[];

static struct RogueQuestReward const sRewards_NORMAL_MASTER_54[] = 
{
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_MONEY,
        .perType = {
            .money = {
                .amount = QUEST_REWARD_LARGE_MONEY,
            }
        }
    },
#if !defined(ROGUE_EXPANSION)
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_SHOP_ITEM,
        .perType = {
            .shopItem = {
                .item = ITEM_SILK_SCARF,
            }
        }
    },
#endif
#if defined(ROGUE_EXPANSION)
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_SHOP_ITEM,
        .perType = {
            .shopItem = {
                .item = ITEM_NORMALIUM_Z,
            }
        }
    },
#endif
#if defined(ROGUE_EXPANSION)
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_SHOP_ITEM,
        .perType = {
            .shopItem = {
                .item = ITEM_NORMAL_TERA_SHARD,
            }
        }
    },
#endif
#if defined(ROGUE_EXPANSION)
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_SHOP_ITEM,
        .perType = {
            .shopItem = {
                .item = ITEM_CHILAN_BERRY,
            }
        }
    },
#endif
};
static u16 const sTriggerParams_NORMAL_MASTER_54_0[] = 
{
    TYPE_NORMAL,
};
static u16 const sTriggerParams_NORMAL_MASTER_54_1[] = 
{
};
static struct RogueQuestTrigger const sTriggers_NORMAL_MASTER_54[] = 
{
    {
        .callback = QuestCondition_PartyOnlyContainsType,
        .passState = QUEST_STATUS_PENDING,
        .failState = QUEST_STATUS_FAIL,
        .flags = 0 | QUEST_TRIGGER_TRAINER_BATTLE_START,
        .params = sTriggerParams_NORMAL_MASTER_54_0,
        .paramCount = ARRAY_COUNT(sTriggerParams_NORMAL_MASTER_54_0),
    },
    {
        .callback = QuestCondition_Always,
        .passState = QUEST_STATUS_SUCCESS,
        .failState = QUEST_STATUS_PENDING,
        .flags = 0 | QUEST_TRIGGER_ENTER_HALL_OF_FAME,
        .params = sTriggerParams_NORMAL_MASTER_54_1,
        .paramCount = ARRAY_COUNT(sTriggerParams_NORMAL_MASTER_54_1),
    },
};

static u8 const sTitle_FIGHTING_MASTER_55[] = _("Fighting Master");
extern const u8 gQuestDescText_FIGHTING_MASTER_55[];

static struct RogueQuestReward const sRewards_FIGHTING_MASTER_55[] = 
{
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_MONEY,
        .perType = {
            .money = {
                .amount = QUEST_REWARD_LARGE_MONEY,
            }
        }
    },
#if !defined(ROGUE_EXPANSION)
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_SHOP_ITEM,
        .perType = {
            .shopItem = {
                .item = ITEM_BLACK_BELT,
            }
        }
    },
#endif
#if defined(ROGUE_EXPANSION)
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_SHOP_ITEM,
        .perType = {
            .shopItem = {
                .item = ITEM_FIGHTINIUM_Z,
            }
        }
    },
#endif
#if defined(ROGUE_EXPANSION)
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_SHOP_ITEM,
        .perType = {
            .shopItem = {
                .item = ITEM_FIGHTING_TERA_SHARD,
            }
        }
    },
#endif
#if defined(ROGUE_EXPANSION)
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_SHOP_ITEM,
        .perType = {
            .shopItem = {
                .item = ITEM_CHOPLE_BERRY,
            }
        }
    },
#endif
};
static u16 const sTriggerParams_FIGHTING_MASTER_55_0[] = 
{
    TYPE_FIGHTING,
};
static u16 const sTriggerParams_FIGHTING_MASTER_55_1[] = 
{
};
static struct RogueQuestTrigger const sTriggers_FIGHTING_MASTER_55[] = 
{
    {
        .callback = QuestCondition_PartyOnlyContainsType,
        .passState = QUEST_STATUS_PENDING,
        .failState = QUEST_STATUS_FAIL,
        .flags = 0 | QUEST_TRIGGER_TRAINER_BATTLE_START,
        .params = sTriggerParams_FIGHTING_MASTER_55_0,
        .paramCount = ARRAY_COUNT(sTriggerParams_FIGHTING_MASTER_55_0),
    },
    {
        .callback = QuestCondition_Always,
        .passState = QUEST_STATUS_SUCCESS,
        .failState = QUEST_STATUS_PENDING,
        .flags = 0 | QUEST_TRIGGER_ENTER_HALL_OF_FAME,
        .params = sTriggerParams_FIGHTING_MASTER_55_1,
        .paramCount = ARRAY_COUNT(sTriggerParams_FIGHTING_MASTER_55_1),
    },
};

static u8 const sTitle_FLYING_MASTER_56[] = _("Flying Master");
extern const u8 gQuestDescText_FLYING_MASTER_56[];

static struct RogueQuestReward const sRewards_FLYING_MASTER_56[] = 
{
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_MONEY,
        .perType = {
            .money = {
                .amount = QUEST_REWARD_LARGE_MONEY,
            }
        }
    },
#if !defined(ROGUE_EXPANSION)
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_SHOP_ITEM,
        .perType = {
            .shopItem = {
                .item = ITEM_SHARP_BEAK,
            }
        }
    },
#endif
#if defined(ROGUE_EXPANSION)
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_SHOP_ITEM,
        .perType = {
            .shopItem = {
                .item = ITEM_FLYINIUM_Z,
            }
        }
    },
#endif
#if defined(ROGUE_EXPANSION)
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_SHOP_ITEM,
        .perType = {
            .shopItem = {
                .item = ITEM_FLYING_TERA_SHARD,
            }
        }
    },
#endif
#if defined(ROGUE_EXPANSION)
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_SHOP_ITEM,
        .perType = {
            .shopItem = {
                .item = ITEM_COBA_BERRY,
            }
        }
    },
#endif
};
static u16 const sTriggerParams_FLYING_MASTER_56_0[] = 
{
    TYPE_FLYING,
};
static u16 const sTriggerParams_FLYING_MASTER_56_1[] = 
{
};
static struct RogueQuestTrigger const sTriggers_FLYING_MASTER_56[] = 
{
    {
        .callback = QuestCondition_PartyOnlyContainsType,
        .passState = QUEST_STATUS_PENDING,
        .failState = QUEST_STATUS_FAIL,
        .flags = 0 | QUEST_TRIGGER_TRAINER_BATTLE_START,
        .params = sTriggerParams_FLYING_MASTER_56_0,
        .paramCount = ARRAY_COUNT(sTriggerParams_FLYING_MASTER_56_0),
    },
    {
        .callback = QuestCondition_Always,
        .passState = QUEST_STATUS_SUCCESS,
        .failState = QUEST_STATUS_PENDING,
        .flags = 0 | QUEST_TRIGGER_ENTER_HALL_OF_FAME,
        .params = sTriggerParams_FLYING_MASTER_56_1,
        .paramCount = ARRAY_COUNT(sTriggerParams_FLYING_MASTER_56_1),
    },
};

static u8 const sTitle_POISON_MASTER_57[] = _("Poison Master");
extern const u8 gQuestDescText_POISON_MASTER_57[];

static struct RogueQuestReward const sRewards_POISON_MASTER_57[] = 
{
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_MONEY,
        .perType = {
            .money = {
                .amount = QUEST_REWARD_LARGE_MONEY,
            }
        }
    },
#if !defined(ROGUE_EXPANSION)
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_SHOP_ITEM,
        .perType = {
            .shopItem = {
                .item = ITEM_POISON_BARB,
            }
        }
    },
#endif
#if defined(ROGUE_EXPANSION)
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_SHOP_ITEM,
        .perType = {
            .shopItem = {
                .item = ITEM_POISONIUM_Z,
            }
        }
    },
#endif
#if defined(ROGUE_EXPANSION)
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_SHOP_ITEM,
        .perType = {
            .shopItem = {
                .item = ITEM_POISON_TERA_SHARD,
            }
        }
    },
#endif
#if defined(ROGUE_EXPANSION)
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_SHOP_ITEM,
        .perType = {
            .shopItem = {
                .item = ITEM_KEBIA_BERRY,
            }
        }
    },
#endif
};
static u16 const sTriggerParams_POISON_MASTER_57_0[] = 
{
    TYPE_POISON,
};
static u16 const sTriggerParams_POISON_MASTER_57_1[] = 
{
};
static struct RogueQuestTrigger const sTriggers_POISON_MASTER_57[] = 
{
    {
        .callback = QuestCondition_PartyOnlyContainsType,
        .passState = QUEST_STATUS_PENDING,
        .failState = QUEST_STATUS_FAIL,
        .flags = 0 | QUEST_TRIGGER_TRAINER_BATTLE_START,
        .params = sTriggerParams_POISON_MASTER_57_0,
        .paramCount = ARRAY_COUNT(sTriggerParams_POISON_MASTER_57_0),
    },
    {
        .callback = QuestCondition_Always,
        .passState = QUEST_STATUS_SUCCESS,
        .failState = QUEST_STATUS_PENDING,
        .flags = 0 | QUEST_TRIGGER_ENTER_HALL_OF_FAME,
        .params = sTriggerParams_POISON_MASTER_57_1,
        .paramCount = ARRAY_COUNT(sTriggerParams_POISON_MASTER_57_1),
    },
};

static u8 const sTitle_GROUND_MASTER_58[] = _("Ground Master");
extern const u8 gQuestDescText_GROUND_MASTER_58[];

static struct RogueQuestReward const sRewards_GROUND_MASTER_58[] = 
{
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_MONEY,
        .perType = {
            .money = {
                .amount = QUEST_REWARD_LARGE_MONEY,
            }
        }
    },
#if !defined(ROGUE_EXPANSION)
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_SHOP_ITEM,
        .perType = {
            .shopItem = {
                .item = ITEM_SOFT_SAND,
            }
        }
    },
#endif
#if defined(ROGUE_EXPANSION)
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_SHOP_ITEM,
        .perType = {
            .shopItem = {
                .item = ITEM_GROUNDIUM_Z,
            }
        }
    },
#endif
#if defined(ROGUE_EXPANSION)
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_SHOP_ITEM,
        .perType = {
            .shopItem = {
                .item = ITEM_GROUND_TERA_SHARD,
            }
        }
    },
#endif
#if defined(ROGUE_EXPANSION)
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_SHOP_ITEM,
        .perType = {
            .shopItem = {
                .item = ITEM_SHUCA_BERRY,
            }
        }
    },
#endif
};
static u16 const sTriggerParams_GROUND_MASTER_58_0[] = 
{
    TYPE_GROUND,
};
static u16 const sTriggerParams_GROUND_MASTER_58_1[] = 
{
};
static struct RogueQuestTrigger const sTriggers_GROUND_MASTER_58[] = 
{
    {
        .callback = QuestCondition_PartyOnlyContainsType,
        .passState = QUEST_STATUS_PENDING,
        .failState = QUEST_STATUS_FAIL,
        .flags = 0 | QUEST_TRIGGER_TRAINER_BATTLE_START,
        .params = sTriggerParams_GROUND_MASTER_58_0,
        .paramCount = ARRAY_COUNT(sTriggerParams_GROUND_MASTER_58_0),
    },
    {
        .callback = QuestCondition_Always,
        .passState = QUEST_STATUS_SUCCESS,
        .failState = QUEST_STATUS_PENDING,
        .flags = 0 | QUEST_TRIGGER_ENTER_HALL_OF_FAME,
        .params = sTriggerParams_GROUND_MASTER_58_1,
        .paramCount = ARRAY_COUNT(sTriggerParams_GROUND_MASTER_58_1),
    },
};

static u8 const sTitle_ROCK_MASTER_59[] = _("Rock Master");
extern const u8 gQuestDescText_ROCK_MASTER_59[];

static struct RogueQuestReward const sRewards_ROCK_MASTER_59[] = 
{
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_MONEY,
        .perType = {
            .money = {
                .amount = QUEST_REWARD_LARGE_MONEY,
            }
        }
    },
#if !defined(ROGUE_EXPANSION)
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_SHOP_ITEM,
        .perType = {
            .shopItem = {
                .item = ITEM_HARD_STONE,
            }
        }
    },
#endif
#if defined(ROGUE_EXPANSION)
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_SHOP_ITEM,
        .perType = {
            .shopItem = {
                .item = ITEM_ROCKIUM_Z,
            }
        }
    },
#endif
#if defined(ROGUE_EXPANSION)
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_SHOP_ITEM,
        .perType = {
            .shopItem = {
                .item = ITEM_ROCK_TERA_SHARD,
            }
        }
    },
#endif
#if defined(ROGUE_EXPANSION)
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_SHOP_ITEM,
        .perType = {
            .shopItem = {
                .item = ITEM_CHARTI_BERRY,
            }
        }
    },
#endif
};
static u16 const sTriggerParams_ROCK_MASTER_59_0[] = 
{
    TYPE_ROCK,
};
static u16 const sTriggerParams_ROCK_MASTER_59_1[] = 
{
};
static struct RogueQuestTrigger const sTriggers_ROCK_MASTER_59[] = 
{
    {
        .callback = QuestCondition_PartyOnlyContainsType,
        .passState = QUEST_STATUS_PENDING,
        .failState = QUEST_STATUS_FAIL,
        .flags = 0 | QUEST_TRIGGER_TRAINER_BATTLE_START,
        .params = sTriggerParams_ROCK_MASTER_59_0,
        .paramCount = ARRAY_COUNT(sTriggerParams_ROCK_MASTER_59_0),
    },
    {
        .callback = QuestCondition_Always,
        .passState = QUEST_STATUS_SUCCESS,
        .failState = QUEST_STATUS_PENDING,
        .flags = 0 | QUEST_TRIGGER_ENTER_HALL_OF_FAME,
        .params = sTriggerParams_ROCK_MASTER_59_1,
        .paramCount = ARRAY_COUNT(sTriggerParams_ROCK_MASTER_59_1),
    },
};

static u8 const sTitle_BUG_MASTER_60[] = _("Bug Master");
extern const u8 gQuestDescText_BUG_MASTER_60[];

static struct RogueQuestReward const sRewards_BUG_MASTER_60[] = 
{
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_MONEY,
        .perType = {
            .money = {
                .amount = QUEST_REWARD_LARGE_MONEY,
            }
        }
    },
#if !defined(ROGUE_EXPANSION)
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_SHOP_ITEM,
        .perType = {
            .shopItem = {
                .item = ITEM_SILVER_POWDER,
            }
        }
    },
#endif
#if defined(ROGUE_EXPANSION)
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_SHOP_ITEM,
        .perType = {
            .shopItem = {
                .item = ITEM_BUGINIUM_Z,
            }
        }
    },
#endif
#if defined(ROGUE_EXPANSION)
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_SHOP_ITEM,
        .perType = {
            .shopItem = {
                .item = ITEM_BUG_TERA_SHARD,
            }
        }
    },
#endif
#if defined(ROGUE_EXPANSION)
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_SHOP_ITEM,
        .perType = {
            .shopItem = {
                .item = ITEM_TANGA_BERRY,
            }
        }
    },
#endif
};
static u16 const sTriggerParams_BUG_MASTER_60_0[] = 
{
    TYPE_BUG,
};
static u16 const sTriggerParams_BUG_MASTER_60_1[] = 
{
};
static struct RogueQuestTrigger const sTriggers_BUG_MASTER_60[] = 
{
    {
        .callback = QuestCondition_PartyOnlyContainsType,
        .passState = QUEST_STATUS_PENDING,
        .failState = QUEST_STATUS_FAIL,
        .flags = 0 | QUEST_TRIGGER_TRAINER_BATTLE_START,
        .params = sTriggerParams_BUG_MASTER_60_0,
        .paramCount = ARRAY_COUNT(sTriggerParams_BUG_MASTER_60_0),
    },
    {
        .callback = QuestCondition_Always,
        .passState = QUEST_STATUS_SUCCESS,
        .failState = QUEST_STATUS_PENDING,
        .flags = 0 | QUEST_TRIGGER_ENTER_HALL_OF_FAME,
        .params = sTriggerParams_BUG_MASTER_60_1,
        .paramCount = ARRAY_COUNT(sTriggerParams_BUG_MASTER_60_1),
    },
};

static u8 const sTitle_GHOST_MASTER_61[] = _("Ghost Master");
extern const u8 gQuestDescText_GHOST_MASTER_61[];

static struct RogueQuestReward const sRewards_GHOST_MASTER_61[] = 
{
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_MONEY,
        .perType = {
            .money = {
                .amount = QUEST_REWARD_LARGE_MONEY,
            }
        }
    },
#if !defined(ROGUE_EXPANSION)
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_SHOP_ITEM,
        .perType = {
            .shopItem = {
                .item = ITEM_SPELL_TAG,
            }
        }
    },
#endif
#if defined(ROGUE_EXPANSION)
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_SHOP_ITEM,
        .perType = {
            .shopItem = {
                .item = ITEM_GHOSTIUM_Z,
            }
        }
    },
#endif
#if defined(ROGUE_EXPANSION)
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_SHOP_ITEM,
        .perType = {
            .shopItem = {
                .item = ITEM_GHOST_TERA_SHARD,
            }
        }
    },
#endif
#if defined(ROGUE_EXPANSION)
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_SHOP_ITEM,
        .perType = {
            .shopItem = {
                .item = ITEM_KASIB_BERRY,
            }
        }
    },
#endif
};
static u16 const sTriggerParams_GHOST_MASTER_61_0[] = 
{
    TYPE_GHOST,
};
static u16 const sTriggerParams_GHOST_MASTER_61_1[] = 
{
};
static struct RogueQuestTrigger const sTriggers_GHOST_MASTER_61[] = 
{
    {
        .callback = QuestCondition_PartyOnlyContainsType,
        .passState = QUEST_STATUS_PENDING,
        .failState = QUEST_STATUS_FAIL,
        .flags = 0 | QUEST_TRIGGER_TRAINER_BATTLE_START,
        .params = sTriggerParams_GHOST_MASTER_61_0,
        .paramCount = ARRAY_COUNT(sTriggerParams_GHOST_MASTER_61_0),
    },
    {
        .callback = QuestCondition_Always,
        .passState = QUEST_STATUS_SUCCESS,
        .failState = QUEST_STATUS_PENDING,
        .flags = 0 | QUEST_TRIGGER_ENTER_HALL_OF_FAME,
        .params = sTriggerParams_GHOST_MASTER_61_1,
        .paramCount = ARRAY_COUNT(sTriggerParams_GHOST_MASTER_61_1),
    },
};

static u8 const sTitle_STEEL_MASTER_62[] = _("Steel Master");
extern const u8 gQuestDescText_STEEL_MASTER_62[];

static struct RogueQuestReward const sRewards_STEEL_MASTER_62[] = 
{
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_MONEY,
        .perType = {
            .money = {
                .amount = QUEST_REWARD_LARGE_MONEY,
            }
        }
    },
#if !defined(ROGUE_EXPANSION)
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_SHOP_ITEM,
        .perType = {
            .shopItem = {
                .item = ITEM_METAL_COAT,
            }
        }
    },
#endif
#if defined(ROGUE_EXPANSION)
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_SHOP_ITEM,
        .perType = {
            .shopItem = {
                .item = ITEM_STEELIUM_Z,
            }
        }
    },
#endif
#if defined(ROGUE_EXPANSION)
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_SHOP_ITEM,
        .perType = {
            .shopItem = {
                .item = ITEM_STEEL_TERA_SHARD,
            }
        }
    },
#endif
#if defined(ROGUE_EXPANSION)
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_SHOP_ITEM,
        .perType = {
            .shopItem = {
                .item = ITEM_BABIRI_BERRY,
            }
        }
    },
#endif
};
static u16 const sTriggerParams_STEEL_MASTER_62_0[] = 
{
    TYPE_STEEL,
};
static u16 const sTriggerParams_STEEL_MASTER_62_1[] = 
{
};
static struct RogueQuestTrigger const sTriggers_STEEL_MASTER_62[] = 
{
    {
        .callback = QuestCondition_PartyOnlyContainsType,
        .passState = QUEST_STATUS_PENDING,
        .failState = QUEST_STATUS_FAIL,
        .flags = 0 | QUEST_TRIGGER_TRAINER_BATTLE_START,
        .params = sTriggerParams_STEEL_MASTER_62_0,
        .paramCount = ARRAY_COUNT(sTriggerParams_STEEL_MASTER_62_0),
    },
    {
        .callback = QuestCondition_Always,
        .passState = QUEST_STATUS_SUCCESS,
        .failState = QUEST_STATUS_PENDING,
        .flags = 0 | QUEST_TRIGGER_ENTER_HALL_OF_FAME,
        .params = sTriggerParams_STEEL_MASTER_62_1,
        .paramCount = ARRAY_COUNT(sTriggerParams_STEEL_MASTER_62_1),
    },
};

static u8 const sTitle_FIRE_MASTER_63[] = _("Fire Master");
extern const u8 gQuestDescText_FIRE_MASTER_63[];

static struct RogueQuestReward const sRewards_FIRE_MASTER_63[] = 
{
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_MONEY,
        .perType = {
            .money = {
                .amount = QUEST_REWARD_LARGE_MONEY,
            }
        }
    },
#if !defined(ROGUE_EXPANSION)
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_SHOP_ITEM,
        .perType = {
            .shopItem = {
                .item = ITEM_CHARCOAL,
            }
        }
    },
#endif
#if defined(ROGUE_EXPANSION)
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_SHOP_ITEM,
        .perType = {
            .shopItem = {
                .item = ITEM_FIRIUM_Z,
            }
        }
    },
#endif
#if defined(ROGUE_EXPANSION)
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_SHOP_ITEM,
        .perType = {
            .shopItem = {
                .item = ITEM_FIRE_TERA_SHARD,
            }
        }
    },
#endif
#if defined(ROGUE_EXPANSION)
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_SHOP_ITEM,
        .perType = {
            .shopItem = {
                .item = ITEM_OCCA_BERRY,
            }
        }
    },
#endif
};
static u16 const sTriggerParams_FIRE_MASTER_63_0[] = 
{
    TYPE_FIRE,
};
static u16 const sTriggerParams_FIRE_MASTER_63_1[] = 
{
};
static struct RogueQuestTrigger const sTriggers_FIRE_MASTER_63[] = 
{
    {
        .callback = QuestCondition_PartyOnlyContainsType,
        .passState = QUEST_STATUS_PENDING,
        .failState = QUEST_STATUS_FAIL,
        .flags = 0 | QUEST_TRIGGER_TRAINER_BATTLE_START,
        .params = sTriggerParams_FIRE_MASTER_63_0,
        .paramCount = ARRAY_COUNT(sTriggerParams_FIRE_MASTER_63_0),
    },
    {
        .callback = QuestCondition_Always,
        .passState = QUEST_STATUS_SUCCESS,
        .failState = QUEST_STATUS_PENDING,
        .flags = 0 | QUEST_TRIGGER_ENTER_HALL_OF_FAME,
        .params = sTriggerParams_FIRE_MASTER_63_1,
        .paramCount = ARRAY_COUNT(sTriggerParams_FIRE_MASTER_63_1),
    },
};

static u8 const sTitle_WATER_MASTER_64[] = _("Water Master");
extern const u8 gQuestDescText_WATER_MASTER_64[];

static struct RogueQuestReward const sRewards_WATER_MASTER_64[] = 
{
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_MONEY,
        .perType = {
            .money = {
                .amount = QUEST_REWARD_LARGE_MONEY,
            }
        }
    },
#if !defined(ROGUE_EXPANSION)
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_SHOP_ITEM,
        .perType = {
            .shopItem = {
                .item = ITEM_MYSTIC_WATER,
            }
        }
    },
#endif
#if defined(ROGUE_EXPANSION)
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_SHOP_ITEM,
        .perType = {
            .shopItem = {
                .item = ITEM_WATERIUM_Z,
            }
        }
    },
#endif
#if defined(ROGUE_EXPANSION)
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_SHOP_ITEM,
        .perType = {
            .shopItem = {
                .item = ITEM_WATER_TERA_SHARD,
            }
        }
    },
#endif
#if defined(ROGUE_EXPANSION)
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_SHOP_ITEM,
        .perType = {
            .shopItem = {
                .item = ITEM_PASSHO_BERRY,
            }
        }
    },
#endif
};
static u16 const sTriggerParams_WATER_MASTER_64_0[] = 
{
    TYPE_WATER,
};
static u16 const sTriggerParams_WATER_MASTER_64_1[] = 
{
};
static struct RogueQuestTrigger const sTriggers_WATER_MASTER_64[] = 
{
    {
        .callback = QuestCondition_PartyOnlyContainsType,
        .passState = QUEST_STATUS_PENDING,
        .failState = QUEST_STATUS_FAIL,
        .flags = 0 | QUEST_TRIGGER_TRAINER_BATTLE_START,
        .params = sTriggerParams_WATER_MASTER_64_0,
        .paramCount = ARRAY_COUNT(sTriggerParams_WATER_MASTER_64_0),
    },
    {
        .callback = QuestCondition_Always,
        .passState = QUEST_STATUS_SUCCESS,
        .failState = QUEST_STATUS_PENDING,
        .flags = 0 | QUEST_TRIGGER_ENTER_HALL_OF_FAME,
        .params = sTriggerParams_WATER_MASTER_64_1,
        .paramCount = ARRAY_COUNT(sTriggerParams_WATER_MASTER_64_1),
    },
};

static u8 const sTitle_GRASS_MASTER_65[] = _("Grass Master");
extern const u8 gQuestDescText_GRASS_MASTER_65[];

static struct RogueQuestReward const sRewards_GRASS_MASTER_65[] = 
{
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_MONEY,
        .perType = {
            .money = {
                .amount = QUEST_REWARD_LARGE_MONEY,
            }
        }
    },
#if !defined(ROGUE_EXPANSION)
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_SHOP_ITEM,
        .perType = {
            .shopItem = {
                .item = ITEM_MIRACLE_SEED,
            }
        }
    },
#endif
#if defined(ROGUE_EXPANSION)
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_SHOP_ITEM,
        .perType = {
            .shopItem = {
                .item = ITEM_GRASSIUM_Z,
            }
        }
    },
#endif
#if defined(ROGUE_EXPANSION)
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_SHOP_ITEM,
        .perType = {
            .shopItem = {
                .item = ITEM_GRASS_TERA_SHARD,
            }
        }
    },
#endif
#if defined(ROGUE_EXPANSION)
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_SHOP_ITEM,
        .perType = {
            .shopItem = {
                .item = ITEM_RINDO_BERRY,
            }
        }
    },
#endif
};
static u16 const sTriggerParams_GRASS_MASTER_65_0[] = 
{
    TYPE_GRASS,
};
static u16 const sTriggerParams_GRASS_MASTER_65_1[] = 
{
};
static struct RogueQuestTrigger const sTriggers_GRASS_MASTER_65[] = 
{
    {
        .callback = QuestCondition_PartyOnlyContainsType,
        .passState = QUEST_STATUS_PENDING,
        .failState = QUEST_STATUS_FAIL,
        .flags = 0 | QUEST_TRIGGER_TRAINER_BATTLE_START,
        .params = sTriggerParams_GRASS_MASTER_65_0,
        .paramCount = ARRAY_COUNT(sTriggerParams_GRASS_MASTER_65_0),
    },
    {
        .callback = QuestCondition_Always,
        .passState = QUEST_STATUS_SUCCESS,
        .failState = QUEST_STATUS_PENDING,
        .flags = 0 | QUEST_TRIGGER_ENTER_HALL_OF_FAME,
        .params = sTriggerParams_GRASS_MASTER_65_1,
        .paramCount = ARRAY_COUNT(sTriggerParams_GRASS_MASTER_65_1),
    },
};

static u8 const sTitle_ELECTRIC_MASTER_66[] = _("Electric Master");
extern const u8 gQuestDescText_ELECTRIC_MASTER_66[];

static struct RogueQuestReward const sRewards_ELECTRIC_MASTER_66[] = 
{
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_MONEY,
        .perType = {
            .money = {
                .amount = QUEST_REWARD_LARGE_MONEY,
            }
        }
    },
#if !defined(ROGUE_EXPANSION)
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_SHOP_ITEM,
        .perType = {
            .shopItem = {
                .item = ITEM_MAGNET,
            }
        }
    },
#endif
#if defined(ROGUE_EXPANSION)
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_SHOP_ITEM,
        .perType = {
            .shopItem = {
                .item = ITEM_ELECTRIUM_Z,
            }
        }
    },
#endif
#if defined(ROGUE_EXPANSION)
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_SHOP_ITEM,
        .perType = {
            .shopItem = {
                .item = ITEM_ELECTRIC_TERA_SHARD,
            }
        }
    },
#endif
#if defined(ROGUE_EXPANSION)
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_SHOP_ITEM,
        .perType = {
            .shopItem = {
                .item = ITEM_WACAN_BERRY,
            }
        }
    },
#endif
};
static u16 const sTriggerParams_ELECTRIC_MASTER_66_0[] = 
{
    TYPE_ELECTRIC,
};
static u16 const sTriggerParams_ELECTRIC_MASTER_66_1[] = 
{
};
static struct RogueQuestTrigger const sTriggers_ELECTRIC_MASTER_66[] = 
{
    {
        .callback = QuestCondition_PartyOnlyContainsType,
        .passState = QUEST_STATUS_PENDING,
        .failState = QUEST_STATUS_FAIL,
        .flags = 0 | QUEST_TRIGGER_TRAINER_BATTLE_START,
        .params = sTriggerParams_ELECTRIC_MASTER_66_0,
        .paramCount = ARRAY_COUNT(sTriggerParams_ELECTRIC_MASTER_66_0),
    },
    {
        .callback = QuestCondition_Always,
        .passState = QUEST_STATUS_SUCCESS,
        .failState = QUEST_STATUS_PENDING,
        .flags = 0 | QUEST_TRIGGER_ENTER_HALL_OF_FAME,
        .params = sTriggerParams_ELECTRIC_MASTER_66_1,
        .paramCount = ARRAY_COUNT(sTriggerParams_ELECTRIC_MASTER_66_1),
    },
};

static u8 const sTitle_PSYCHIC_MASTER_67[] = _("Psychic Master");
extern const u8 gQuestDescText_PSYCHIC_MASTER_67[];

static struct RogueQuestReward const sRewards_PSYCHIC_MASTER_67[] = 
{
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_MONEY,
        .perType = {
            .money = {
                .amount = QUEST_REWARD_LARGE_MONEY,
            }
        }
    },
#if !defined(ROGUE_EXPANSION)
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_SHOP_ITEM,
        .perType = {
            .shopItem = {
                .item = ITEM_TWISTED_SPOON,
            }
        }
    },
#endif
#if defined(ROGUE_EXPANSION)
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_SHOP_ITEM,
        .perType = {
            .shopItem = {
                .item = ITEM_PSYCHIUM_Z,
            }
        }
    },
#endif
#if defined(ROGUE_EXPANSION)
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_SHOP_ITEM,
        .perType = {
            .shopItem = {
                .item = ITEM_PSYCHIC_TERA_SHARD,
            }
        }
    },
#endif
#if defined(ROGUE_EXPANSION)
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_SHOP_ITEM,
        .perType = {
            .shopItem = {
                .item = ITEM_PAYAPA_BERRY,
            }
        }
    },
#endif
};
static u16 const sTriggerParams_PSYCHIC_MASTER_67_0[] = 
{
    TYPE_PSYCHIC,
};
static u16 const sTriggerParams_PSYCHIC_MASTER_67_1[] = 
{
};
static struct RogueQuestTrigger const sTriggers_PSYCHIC_MASTER_67[] = 
{
    {
        .callback = QuestCondition_PartyOnlyContainsType,
        .passState = QUEST_STATUS_PENDING,
        .failState = QUEST_STATUS_FAIL,
        .flags = 0 | QUEST_TRIGGER_TRAINER_BATTLE_START,
        .params = sTriggerParams_PSYCHIC_MASTER_67_0,
        .paramCount = ARRAY_COUNT(sTriggerParams_PSYCHIC_MASTER_67_0),
    },
    {
        .callback = QuestCondition_Always,
        .passState = QUEST_STATUS_SUCCESS,
        .failState = QUEST_STATUS_PENDING,
        .flags = 0 | QUEST_TRIGGER_ENTER_HALL_OF_FAME,
        .params = sTriggerParams_PSYCHIC_MASTER_67_1,
        .paramCount = ARRAY_COUNT(sTriggerParams_PSYCHIC_MASTER_67_1),
    },
};

static u8 const sTitle_ICE_MASTER_68[] = _("Ice Master");
extern const u8 gQuestDescText_ICE_MASTER_68[];

static struct RogueQuestReward const sRewards_ICE_MASTER_68[] = 
{
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_MONEY,
        .perType = {
            .money = {
                .amount = QUEST_REWARD_LARGE_MONEY,
            }
        }
    },
#if !defined(ROGUE_EXPANSION)
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_SHOP_ITEM,
        .perType = {
            .shopItem = {
                .item = ITEM_NEVER_MELT_ICE,
            }
        }
    },
#endif
#if defined(ROGUE_EXPANSION)
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_SHOP_ITEM,
        .perType = {
            .shopItem = {
                .item = ITEM_ICIUM_Z,
            }
        }
    },
#endif
#if defined(ROGUE_EXPANSION)
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_SHOP_ITEM,
        .perType = {
            .shopItem = {
                .item = ITEM_ICE_TERA_SHARD,
            }
        }
    },
#endif
#if defined(ROGUE_EXPANSION)
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_SHOP_ITEM,
        .perType = {
            .shopItem = {
                .item = ITEM_YACHE_BERRY,
            }
        }
    },
#endif
};
static u16 const sTriggerParams_ICE_MASTER_68_0[] = 
{
    TYPE_ICE,
};
static u16 const sTriggerParams_ICE_MASTER_68_1[] = 
{
};
static struct RogueQuestTrigger const sTriggers_ICE_MASTER_68[] = 
{
    {
        .callback = QuestCondition_PartyOnlyContainsType,
        .passState = QUEST_STATUS_PENDING,
        .failState = QUEST_STATUS_FAIL,
        .flags = 0 | QUEST_TRIGGER_TRAINER_BATTLE_START,
        .params = sTriggerParams_ICE_MASTER_68_0,
        .paramCount = ARRAY_COUNT(sTriggerParams_ICE_MASTER_68_0),
    },
    {
        .callback = QuestCondition_Always,
        .passState = QUEST_STATUS_SUCCESS,
        .failState = QUEST_STATUS_PENDING,
        .flags = 0 | QUEST_TRIGGER_ENTER_HALL_OF_FAME,
        .params = sTriggerParams_ICE_MASTER_68_1,
        .paramCount = ARRAY_COUNT(sTriggerParams_ICE_MASTER_68_1),
    },
};

static u8 const sTitle_DRAGON_MASTER_69[] = _("Dragon Master");
extern const u8 gQuestDescText_DRAGON_MASTER_69[];

static struct RogueQuestReward const sRewards_DRAGON_MASTER_69[] = 
{
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_MONEY,
        .perType = {
            .money = {
                .amount = QUEST_REWARD_LARGE_MONEY,
            }
        }
    },
#if !defined(ROGUE_EXPANSION)
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_SHOP_ITEM,
        .perType = {
            .shopItem = {
                .item = ITEM_DRAGON_FANG,
            }
        }
    },
#endif
#if defined(ROGUE_EXPANSION)
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_SHOP_ITEM,
        .perType = {
            .shopItem = {
                .item = ITEM_DRAGONIUM_Z,
            }
        }
    },
#endif
#if defined(ROGUE_EXPANSION)
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_SHOP_ITEM,
        .perType = {
            .shopItem = {
                .item = ITEM_DRAGON_TERA_SHARD,
            }
        }
    },
#endif
#if defined(ROGUE_EXPANSION)
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_SHOP_ITEM,
        .perType = {
            .shopItem = {
                .item = ITEM_HABAN_BERRY,
            }
        }
    },
#endif
};
static u16 const sTriggerParams_DRAGON_MASTER_69_0[] = 
{
    TYPE_DRAGON,
};
static u16 const sTriggerParams_DRAGON_MASTER_69_1[] = 
{
};
static struct RogueQuestTrigger const sTriggers_DRAGON_MASTER_69[] = 
{
    {
        .callback = QuestCondition_PartyOnlyContainsType,
        .passState = QUEST_STATUS_PENDING,
        .failState = QUEST_STATUS_FAIL,
        .flags = 0 | QUEST_TRIGGER_TRAINER_BATTLE_START,
        .params = sTriggerParams_DRAGON_MASTER_69_0,
        .paramCount = ARRAY_COUNT(sTriggerParams_DRAGON_MASTER_69_0),
    },
    {
        .callback = QuestCondition_Always,
        .passState = QUEST_STATUS_SUCCESS,
        .failState = QUEST_STATUS_PENDING,
        .flags = 0 | QUEST_TRIGGER_ENTER_HALL_OF_FAME,
        .params = sTriggerParams_DRAGON_MASTER_69_1,
        .paramCount = ARRAY_COUNT(sTriggerParams_DRAGON_MASTER_69_1),
    },
};

static u8 const sTitle_DARK_MASTER_70[] = _("Dark Master");
extern const u8 gQuestDescText_DARK_MASTER_70[];

static struct RogueQuestReward const sRewards_DARK_MASTER_70[] = 
{
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_MONEY,
        .perType = {
            .money = {
                .amount = QUEST_REWARD_LARGE_MONEY,
            }
        }
    },
#if !defined(ROGUE_EXPANSION)
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_SHOP_ITEM,
        .perType = {
            .shopItem = {
                .item = ITEM_BLACK_GLASSES,
            }
        }
    },
#endif
#if defined(ROGUE_EXPANSION)
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_SHOP_ITEM,
        .perType = {
            .shopItem = {
                .item = ITEM_DARKINIUM_Z,
            }
        }
    },
#endif
#if defined(ROGUE_EXPANSION)
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_SHOP_ITEM,
        .perType = {
            .shopItem = {
                .item = ITEM_DARK_TERA_SHARD,
            }
        }
    },
#endif
#if defined(ROGUE_EXPANSION)
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_SHOP_ITEM,
        .perType = {
            .shopItem = {
                .item = ITEM_COLBUR_BERRY,
            }
        }
    },
#endif
};
static u16 const sTriggerParams_DARK_MASTER_70_0[] = 
{
    TYPE_DARK,
};
static u16 const sTriggerParams_DARK_MASTER_70_1[] = 
{
};
static struct RogueQuestTrigger const sTriggers_DARK_MASTER_70[] = 
{
    {
        .callback = QuestCondition_PartyOnlyContainsType,
        .passState = QUEST_STATUS_PENDING,
        .failState = QUEST_STATUS_FAIL,
        .flags = 0 | QUEST_TRIGGER_TRAINER_BATTLE_START,
        .params = sTriggerParams_DARK_MASTER_70_0,
        .paramCount = ARRAY_COUNT(sTriggerParams_DARK_MASTER_70_0),
    },
    {
        .callback = QuestCondition_Always,
        .passState = QUEST_STATUS_SUCCESS,
        .failState = QUEST_STATUS_PENDING,
        .flags = 0 | QUEST_TRIGGER_ENTER_HALL_OF_FAME,
        .params = sTriggerParams_DARK_MASTER_70_1,
        .paramCount = ARRAY_COUNT(sTriggerParams_DARK_MASTER_70_1),
    },
};

#if defined(ROGUE_EXPANSION)
static u8 const sTitle_FAIRY_MASTER_71[] = _("Fairy Master");
extern const u8 gQuestDescText_FAIRY_MASTER_71[];

static struct RogueQuestReward const sRewards_FAIRY_MASTER_71[] = 
{
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_MONEY,
        .perType = {
            .money = {
                .amount = QUEST_REWARD_LARGE_MONEY,
            }
        }
    },
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_SHOP_ITEM,
        .perType = {
            .shopItem = {
                .item = ITEM_FAIRIUM_Z,
            }
        }
    },
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_SHOP_ITEM,
        .perType = {
            .shopItem = {
                .item = ITEM_FAIRY_TERA_SHARD,
            }
        }
    },
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_SHOP_ITEM,
        .perType = {
            .shopItem = {
                .item = ITEM_ROSELI_BERRY,
            }
        }
    },
};
static u16 const sTriggerParams_FAIRY_MASTER_71_0[] = 
{
    TYPE_FAIRY,
};
static u16 const sTriggerParams_FAIRY_MASTER_71_1[] = 
{
};
static struct RogueQuestTrigger const sTriggers_FAIRY_MASTER_71[] = 
{
    {
        .callback = QuestCondition_PartyOnlyContainsType,
        .passState = QUEST_STATUS_PENDING,
        .failState = QUEST_STATUS_FAIL,
        .flags = 0 | QUEST_TRIGGER_TRAINER_BATTLE_START,
        .params = sTriggerParams_FAIRY_MASTER_71_0,
        .paramCount = ARRAY_COUNT(sTriggerParams_FAIRY_MASTER_71_0),
    },
    {
        .callback = QuestCondition_Always,
        .passState = QUEST_STATUS_SUCCESS,
        .failState = QUEST_STATUS_PENDING,
        .flags = 0 | QUEST_TRIGGER_ENTER_HALL_OF_FAME,
        .params = sTriggerParams_FAIRY_MASTER_71_1,
        .paramCount = ARRAY_COUNT(sTriggerParams_FAIRY_MASTER_71_1),
    },
};
#endif

#if defined(ROGUE_EXPANSION)
static u8 const sTitle_MEGA_EVOLUTION_72[] = _("Mega Evolution");
extern const u8 gQuestDescText_MEGA_EVOLUTION_72[];

static struct RogueQuestReward const sRewards_MEGA_EVOLUTION_72[] = 
{
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_MONEY,
        .perType = {
            .money = {
                .amount = QUEST_REWARD_MEDIUM_MONEY,
            }
        }
    },
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_HARD,
        .customPopup = NULL,
        .type = QUEST_REWARD_POKEMON,
        .perType = {
            .pokemon = {
                .species = SPECIES_LUCARIO,
                .isShiny = TRUE,
                .customMonId = CUSTOM_MON_NONE,
                .nickname = NULL,
            }
        }
    },
};
static struct RogueQuestRequirement const sRequirements_MEGA_EVOLUTION_72[] = 
{
    {
        .type = QUEST_REQUIREMENT_TYPE_ITEM,
        .perType = {
            .item = {
                .itemId = ITEM_MEGA_RING,
                .operation = QUEST_REQUIREMENT_OPERATION_GREATER_THAN_EQUAL,
                .count = 1,
            }
        }
    },
};
static u16 const sTriggerParams_MEGA_EVOLUTION_72_0[] = 
{
};
static struct RogueQuestTrigger const sTriggers_MEGA_EVOLUTION_72[] = 
{
    {
        .callback = QuestCondition_Always,
        .passState = QUEST_STATUS_SUCCESS,
        .failState = QUEST_STATUS_PENDING,
        .flags = 0 | QUEST_TRIGGER_ENTER_HALL_OF_FAME,
        .params = sTriggerParams_MEGA_EVOLUTION_72_0,
        .paramCount = ARRAY_COUNT(sTriggerParams_MEGA_EVOLUTION_72_0),
    },
};
#endif

#if defined(ROGUE_EXPANSION)
static u8 const sTitle_Z_MOVES_73[] = _("Z-Moves");
extern const u8 gQuestDescText_Z_MOVES_73[];

static struct RogueQuestReward const sRewards_Z_MOVES_73[] = 
{
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_MONEY,
        .perType = {
            .money = {
                .amount = QUEST_REWARD_MEDIUM_MONEY,
            }
        }
    },
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_HARD,
        .customPopup = NULL,
        .type = QUEST_REWARD_POKEMON,
        .perType = {
            .pokemon = {
                .species = SPECIES_MIMIKYU,
                .isShiny = TRUE,
                .customMonId = CUSTOM_MON_NONE,
                .nickname = NULL,
            }
        }
    },
};
static struct RogueQuestRequirement const sRequirements_Z_MOVES_73[] = 
{
    {
        .type = QUEST_REQUIREMENT_TYPE_ITEM,
        .perType = {
            .item = {
                .itemId = ITEM_Z_POWER_RING,
                .operation = QUEST_REQUIREMENT_OPERATION_GREATER_THAN_EQUAL,
                .count = 1,
            }
        }
    },
};
static u16 const sTriggerParams_Z_MOVES_73_0[] = 
{
};
static struct RogueQuestTrigger const sTriggers_Z_MOVES_73[] = 
{
    {
        .callback = QuestCondition_Always,
        .passState = QUEST_STATUS_SUCCESS,
        .failState = QUEST_STATUS_PENDING,
        .flags = 0 | QUEST_TRIGGER_ENTER_HALL_OF_FAME,
        .params = sTriggerParams_Z_MOVES_73_0,
        .paramCount = ARRAY_COUNT(sTriggerParams_Z_MOVES_73_0),
    },
};
#endif

#if defined(ROGUE_EXPANSION)
static u8 const sTitle_DYNAMAX_74[] = _("Dynamax");
extern const u8 gQuestDescText_DYNAMAX_74[];

static struct RogueQuestReward const sRewards_DYNAMAX_74[] = 
{
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_MONEY,
        .perType = {
            .money = {
                .amount = QUEST_REWARD_MEDIUM_MONEY,
            }
        }
    },
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_HARD,
        .customPopup = NULL,
        .type = QUEST_REWARD_POKEMON,
        .perType = {
            .pokemon = {
                .species = SPECIES_ELDEGOSS,
                .isShiny = TRUE,
                .customMonId = CUSTOM_MON_NONE,
                .nickname = NULL,
            }
        }
    },
};
static struct RogueQuestRequirement const sRequirements_DYNAMAX_74[] = 
{
    {
        .type = QUEST_REQUIREMENT_TYPE_ITEM,
        .perType = {
            .item = {
                .itemId = ITEM_DYNAMAX_BAND,
                .operation = QUEST_REQUIREMENT_OPERATION_GREATER_THAN_EQUAL,
                .count = 1,
            }
        }
    },
};
static u16 const sTriggerParams_DYNAMAX_74_0[] = 
{
};
static struct RogueQuestTrigger const sTriggers_DYNAMAX_74[] = 
{
    {
        .callback = QuestCondition_Always,
        .passState = QUEST_STATUS_SUCCESS,
        .failState = QUEST_STATUS_PENDING,
        .flags = 0 | QUEST_TRIGGER_ENTER_HALL_OF_FAME,
        .params = sTriggerParams_DYNAMAX_74_0,
        .paramCount = ARRAY_COUNT(sTriggerParams_DYNAMAX_74_0),
    },
};
#endif

#if defined(ROGUE_EXPANSION)
static u8 const sTitle_TERASTALLIZATION_75[] = _("Terastallization");
extern const u8 gQuestDescText_TERASTALLIZATION_75[];

static struct RogueQuestReward const sRewards_TERASTALLIZATION_75[] = 
{
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_MONEY,
        .perType = {
            .money = {
                .amount = QUEST_REWARD_MEDIUM_MONEY,
            }
        }
    },
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_HARD,
        .customPopup = NULL,
        .type = QUEST_REWARD_POKEMON,
        .perType = {
            .pokemon = {
                .species = SPECIES_CYCLIZAR,
                .isShiny = TRUE,
                .customMonId = CUSTOM_MON_NONE,
                .nickname = NULL,
            }
        }
    },
};
static struct RogueQuestRequirement const sRequirements_TERASTALLIZATION_75[] = 
{
    {
        .type = QUEST_REQUIREMENT_TYPE_ITEM,
        .perType = {
            .item = {
                .itemId = ITEM_TERA_ORB,
                .operation = QUEST_REQUIREMENT_OPERATION_GREATER_THAN_EQUAL,
                .count = 1,
            }
        }
    },
};
static u16 const sTriggerParams_TERASTALLIZATION_75_0[] = 
{
};
static struct RogueQuestTrigger const sTriggers_TERASTALLIZATION_75[] = 
{
    {
        .callback = QuestCondition_Always,
        .passState = QUEST_STATUS_SUCCESS,
        .failState = QUEST_STATUS_PENDING,
        .flags = 0 | QUEST_TRIGGER_ENTER_HALL_OF_FAME,
        .params = sTriggerParams_TERASTALLIZATION_75_0,
        .paramCount = ARRAY_COUNT(sTriggerParams_TERASTALLIZATION_75_0),
    },
};
#endif

#if defined(ROGUE_EXPANSION)
static u8 const sTitle_GIMMICK_OVERFLOW_76[] = _("Gimmick Overflow");
extern const u8 gQuestDescText_GIMMICK_OVERFLOW_76[];

static struct RogueQuestReward const sRewards_GIMMICK_OVERFLOW_76[] = 
{
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_MONEY,
        .perType = {
            .money = {
                .amount = QUEST_REWARD_MEDIUM_MONEY,
            }
        }
    },
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_HARD,
        .customPopup = NULL,
        .type = QUEST_REWARD_POKEMON,
        .perType = {
            .pokemon = {
                .species = SPECIES_CHARIZARD,
                .isShiny = TRUE,
                .customMonId = CUSTOM_MON_NONE,
                .nickname = NULL,
            }
        }
    },
};
static struct RogueQuestRequirement const sRequirements_GIMMICK_OVERFLOW_76[] = 
{
    {
        .type = QUEST_REQUIREMENT_TYPE_ITEM,
        .perType = {
            .item = {
                .itemId = ITEM_MEGA_RING,
                .operation = QUEST_REQUIREMENT_OPERATION_GREATER_THAN_EQUAL,
                .count = 1,
            }
        }
    },
    {
        .type = QUEST_REQUIREMENT_TYPE_ITEM,
        .perType = {
            .item = {
                .itemId = ITEM_Z_POWER_RING,
                .operation = QUEST_REQUIREMENT_OPERATION_GREATER_THAN_EQUAL,
                .count = 1,
            }
        }
    },
    {
        .type = QUEST_REQUIREMENT_TYPE_ITEM,
        .perType = {
            .item = {
                .itemId = ITEM_DYNAMAX_BAND,
                .operation = QUEST_REQUIREMENT_OPERATION_GREATER_THAN_EQUAL,
                .count = 1,
            }
        }
    },
    {
        .type = QUEST_REQUIREMENT_TYPE_ITEM,
        .perType = {
            .item = {
                .itemId = ITEM_TERA_ORB,
                .operation = QUEST_REQUIREMENT_OPERATION_GREATER_THAN_EQUAL,
                .count = 1,
            }
        }
    },
    {
        .type = QUEST_REQUIREMENT_TYPE_ITEM,
        .perType = {
            .item = {
                .itemId = ITEM_HEALING_FLASK,
                .operation = QUEST_REQUIREMENT_OPERATION_GREATER_THAN_EQUAL,
                .count = 1,
            }
        }
    },
};
static u16 const sTriggerParams_GIMMICK_OVERFLOW_76_0[] = 
{
};
static struct RogueQuestTrigger const sTriggers_GIMMICK_OVERFLOW_76[] = 
{
    {
        .callback = QuestCondition_Always,
        .passState = QUEST_STATUS_SUCCESS,
        .failState = QUEST_STATUS_PENDING,
        .flags = 0 | QUEST_TRIGGER_ENTER_HALL_OF_FAME,
        .params = sTriggerParams_GIMMICK_OVERFLOW_76_0,
        .paramCount = ARRAY_COUNT(sTriggerParams_GIMMICK_OVERFLOW_76_0),
    },
};
#endif

static u8 const sTitle_TRUE_TACTICS_77[] = _("True Tactics");
extern const u8 gQuestDescText_TRUE_TACTICS_77[];

static struct RogueQuestReward const sRewards_TRUE_TACTICS_77[] = 
{
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_MONEY,
        .perType = {
            .money = {
                .amount = QUEST_REWARD_LARGE_MONEY,
            }
        }
    },
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_HARD,
        .customPopup = NULL,
        .type = QUEST_REWARD_POKEMON,
        .perType = {
            .pokemon = {
                .species = SPECIES_SHEDINJA,
                .isShiny = TRUE,
                .customMonId = CUSTOM_MON_NONE,
                .nickname = NULL,
            }
        }
    },
};
static u16 const sTriggerParams_TRUE_TACTICS_77_0[] = 
{
};
static u16 const sTriggerParams_TRUE_TACTICS_77_1[] = 
{
};
static struct RogueQuestTrigger const sTriggers_TRUE_TACTICS_77[] = 
{
    {
        .callback = QuestCondition_Always,
        .passState = QUEST_STATUS_FAIL,
        .failState = QUEST_STATUS_PENDING,
        .flags = 0 | QUEST_TRIGGER_MON_FAINTED,
        .params = sTriggerParams_TRUE_TACTICS_77_0,
        .paramCount = ARRAY_COUNT(sTriggerParams_TRUE_TACTICS_77_0),
    },
    {
        .callback = QuestCondition_Always,
        .passState = QUEST_STATUS_SUCCESS,
        .failState = QUEST_STATUS_PENDING,
        .flags = 0 | QUEST_TRIGGER_ENTER_HALL_OF_FAME,
        .params = sTriggerParams_TRUE_TACTICS_77_1,
        .paramCount = ARRAY_COUNT(sTriggerParams_TRUE_TACTICS_77_1),
    },
};

static u8 const sTitle_CHAOS_NOVICE_78[] = _("Chaos Novice");
extern const u8 gQuestDescText_CHAOS_NOVICE_78[];

static struct RogueQuestReward const sRewards_CHAOS_NOVICE_78[] = 
{
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_MONEY,
        .perType = {
            .money = {
                .amount = QUEST_REWARD_MEDIUM_MONEY,
            }
        }
    },
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_QUEST_UNLOCK,
        .perType = {
            .questUnlock = {
                .questId = QUEST_ID_CHAOS_MASTER,
            }
        }
    },
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_HARD,
        .customPopup = NULL,
        .type = QUEST_REWARD_POKEMON,
        .perType = {
            .pokemon = {
                .species = SPECIES_CHIMECHO,
                .isShiny = TRUE,
                .customMonId = CUSTOM_MON_NONE,
                .nickname = NULL,
            }
        }
    },
};
static struct RogueQuestRequirement const sRequirements_CHAOS_NOVICE_78[] = 
{
    {
        .type = QUEST_REQUIREMENT_TYPE_FLAG,
        .perType = {
            .flag = {
                .flag = FLAG_ROGUE_HAS_RANDOM_STARTER,
                .state = TRUE,
            }
        }
    },
};
static u16 const sTriggerParams_CHAOS_NOVICE_78_0[] = 
{
    ADVPATH_ROOM_RESTSTOP,
};
static u16 const sTriggerParams_CHAOS_NOVICE_78_1[] = 
{
};
static u16 const sTriggerParams_CHAOS_NOVICE_78_2[] = 
{
};
static u16 const sTriggerParams_CHAOS_NOVICE_78_3[] = 
{
};
static u16 const sTriggerParams_CHAOS_NOVICE_78_4[] = 
{
};
static struct RogueQuestTrigger const sTriggers_CHAOS_NOVICE_78[] = 
{
    {
        .callback = QuestCondition_InAdventureEncounterType,
        .passState = QUEST_STATUS_PENDING,
        .failState = QUEST_STATUS_BREAK,
        .flags = 0 | QUEST_TRIGGER_EXIT_ENCOUNTER,
        .params = sTriggerParams_CHAOS_NOVICE_78_0,
        .paramCount = ARRAY_COUNT(sTriggerParams_CHAOS_NOVICE_78_0),
    },
    {
        .callback = QuestCondition_RandomanWasActive,
        .passState = QUEST_STATUS_PENDING,
        .failState = QUEST_STATUS_BREAK,
        .flags = 0 | QUEST_TRIGGER_EXIT_ENCOUNTER,
        .params = sTriggerParams_CHAOS_NOVICE_78_1,
        .paramCount = ARRAY_COUNT(sTriggerParams_CHAOS_NOVICE_78_1),
    },
    {
        .callback = QuestCondition_RandomanWasUsed,
        .passState = QUEST_STATUS_PENDING,
        .failState = QUEST_STATUS_FAIL,
        .flags = 0 | QUEST_TRIGGER_EXIT_ENCOUNTER,
        .params = sTriggerParams_CHAOS_NOVICE_78_2,
        .paramCount = ARRAY_COUNT(sTriggerParams_CHAOS_NOVICE_78_2),
    },
    {
        .callback = QuestCondition_LastRandomanWasFullParty,
        .passState = QUEST_STATUS_PENDING,
        .failState = QUEST_STATUS_FAIL,
        .flags = 0 | QUEST_TRIGGER_EXIT_ENCOUNTER,
        .params = sTriggerParams_CHAOS_NOVICE_78_3,
        .paramCount = ARRAY_COUNT(sTriggerParams_CHAOS_NOVICE_78_3),
    },
    {
        .callback = QuestCondition_Always,
        .passState = QUEST_STATUS_SUCCESS,
        .failState = QUEST_STATUS_PENDING,
        .flags = 0 | QUEST_TRIGGER_ENTER_HALL_OF_FAME,
        .params = sTriggerParams_CHAOS_NOVICE_78_4,
        .paramCount = ARRAY_COUNT(sTriggerParams_CHAOS_NOVICE_78_4),
    },
};

static u8 const sTitle_CHAOS_MASTER_79[] = _("Chaos Master");
extern const u8 gQuestDescText_CHAOS_MASTER_79[];

static struct RogueQuestReward const sRewards_CHAOS_MASTER_79[] = 
{
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_MONEY,
        .perType = {
            .money = {
                .amount = QUEST_REWARD_LARGE_MONEY,
            }
        }
    },
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_HARD,
        .customPopup = NULL,
        .type = QUEST_REWARD_POKEMON,
        .perType = {
            .pokemon = {
                .species = SPECIES_ABSOL,
                .isShiny = TRUE,
                .customMonId = CUSTOM_MON_NONE,
                .nickname = NULL,
            }
        }
    },
};
static struct RogueQuestRequirement const sRequirements_CHAOS_MASTER_79[] = 
{
    {
        .type = QUEST_REQUIREMENT_TYPE_ITEM,
        .perType = {
            .item = {
                .itemId = ITEM_RANDOMAN_ROUTE_SPAWN_CURSE,
                .operation = QUEST_REQUIREMENT_OPERATION_GREATER_THAN_EQUAL,
                .count = 1,
            }
        }
    },
    {
        .type = QUEST_REQUIREMENT_TYPE_ITEM,
        .perType = {
            .item = {
                .itemId = ITEM_RANDOMAN_ALWAYS_SPAWN_CURSE,
                .operation = QUEST_REQUIREMENT_OPERATION_GREATER_THAN_EQUAL,
                .count = 1,
            }
        }
    },
};
static u16 const sTriggerParams_CHAOS_MASTER_79_0[] = 
{
};
static struct RogueQuestTrigger const sTriggers_CHAOS_MASTER_79[] = 
{
    {
        .callback = QuestCondition_Always,
        .passState = QUEST_STATUS_SUCCESS,
        .failState = QUEST_STATUS_PENDING,
        .flags = 0 | QUEST_TRIGGER_ENTER_HALL_OF_FAME,
        .params = sTriggerParams_CHAOS_MASTER_79_0,
        .paramCount = ARRAY_COUNT(sTriggerParams_CHAOS_MASTER_79_0),
    },
};

static u8 const sTitle_ROGUELOCKE_80[] = _("Roguelocke");
extern const u8 gQuestDescText_ROGUELOCKE_80[];

static struct RogueQuestReward const sRewards_ROGUELOCKE_80[] = 
{
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_MONEY,
        .perType = {
            .money = {
                .amount = QUEST_REWARD_MEDIUM_MONEY,
            }
        }
    },
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_HARD,
        .customPopup = NULL,
        .type = QUEST_REWARD_POKEMON,
        .perType = {
            .pokemon = {
                .species = SPECIES_CLEFAIRY,
                .isShiny = TRUE,
                .customMonId = CUSTOM_MON_NONE,
                .nickname = NULL,
            }
        }
    },
};
static struct RogueQuestRequirement const sRequirements_ROGUELOCKE_80[] = 
{
    {
        .type = QUEST_REQUIREMENT_TYPE_FLAG,
        .perType = {
            .flag = {
                .flag = FLAG_ROGUE_HAS_RANDOM_STARTER,
                .state = TRUE,
            }
        }
    },
    {
        .type = QUEST_REQUIREMENT_TYPE_ITEM,
        .perType = {
            .item = {
                .itemId = ITEM_BATTLE_ITEM_CURSE,
                .operation = QUEST_REQUIREMENT_OPERATION_GREATER_THAN_EQUAL,
                .count = 1,
            }
        }
    },
    {
        .type = QUEST_REQUIREMENT_TYPE_ITEM,
        .perType = {
            .item = {
                .itemId = ITEM_SPECIES_CLAUSE_CURSE,
                .operation = QUEST_REQUIREMENT_OPERATION_GREATER_THAN_EQUAL,
                .count = 1,
            }
        }
    },
    {
        .type = QUEST_REQUIREMENT_TYPE_ITEM,
        .perType = {
            .item = {
                .itemId = ITEM_WILD_ENCOUNTER_CURSE,
                .operation = QUEST_REQUIREMENT_OPERATION_GREATER_THAN_EQUAL,
                .count = 10,
            }
        }
    },
};
static u16 const sTriggerParams_ROGUELOCKE_80_0[] = 
{
};
static struct RogueQuestTrigger const sTriggers_ROGUELOCKE_80[] = 
{
    {
        .callback = QuestCondition_Always,
        .passState = QUEST_STATUS_SUCCESS,
        .failState = QUEST_STATUS_PENDING,
        .flags = 0 | QUEST_TRIGGER_ENTER_HALL_OF_FAME,
        .params = sTriggerParams_ROGUELOCKE_80_0,
        .paramCount = ARRAY_COUNT(sTriggerParams_ROGUELOCKE_80_0),
    },
};

static u8 const sTitle_CANT_PICKEMARKQMARK_81[] = _("Can't Pick!?");
extern const u8 gQuestDescText_CANT_PICKEMARKQMARK_81[];

static struct RogueQuestReward const sRewards_CANT_PICKEMARKQMARK_81[] = 
{
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_MONEY,
        .perType = {
            .money = {
                .amount = QUEST_REWARD_SMALL_MONEY,
            }
        }
    },
#if !defined(ROGUE_EXPANSION)
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_POKEMON,
        .perType = {
            .pokemon = {
                .species = SPECIES_PIKACHU,
                .isShiny = FALSE,
                .customMonId = CUSTOM_MON_EXOTIC_PIKACHU,
                .nickname = NULL,
            }
        }
    },
#endif
#if defined(ROGUE_EXPANSION)
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_POKEMON,
        .perType = {
            .pokemon = {
                .species = SPECIES_PIKACHU_ORIGINAL_CAP,
                .isShiny = FALSE,
                .customMonId = CUSTOM_MON_EXOTIC_PIKACHU_ORIGINAL_CAP,
                .nickname = NULL,
            }
        }
    },
#endif
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_HARD,
        .customPopup = NULL,
        .type = QUEST_REWARD_POKEMON,
        .perType = {
            .pokemon = {
                .species = SPECIES_PIKACHU,
                .isShiny = TRUE,
                .customMonId = CUSTOM_MON_NONE,
                .nickname = NULL,
            }
        }
    },
};
static u16 const sTriggerParams_CANT_PICKEMARKQMARK_81_0[] = 
{
};
static u16 const sTriggerParams_CANT_PICKEMARKQMARK_81_1[] = 
{
};
static struct RogueQuestTrigger const sTriggers_CANT_PICKEMARKQMARK_81[] = 
{
    {
        .callback = QuestCondition_PartyContainsOnlyStarters,
        .passState = QUEST_STATUS_PENDING,
        .failState = QUEST_STATUS_FAIL,
        .flags = 0 | QUEST_TRIGGER_TRAINER_BATTLE_START,
        .params = sTriggerParams_CANT_PICKEMARKQMARK_81_0,
        .paramCount = ARRAY_COUNT(sTriggerParams_CANT_PICKEMARKQMARK_81_0),
    },
    {
        .callback = QuestCondition_Always,
        .passState = QUEST_STATUS_SUCCESS,
        .failState = QUEST_STATUS_PENDING,
        .flags = 0 | QUEST_TRIGGER_ENTER_HALL_OF_FAME,
        .params = sTriggerParams_CANT_PICKEMARKQMARK_81_1,
        .paramCount = ARRAY_COUNT(sTriggerParams_CANT_PICKEMARKQMARK_81_1),
    },
};

static u8 const sTitle_DIVERSITY_82[] = _("Diversity");
extern const u8 gQuestDescText_DIVERSITY_82[];

static struct RogueQuestReward const sRewards_DIVERSITY_82[] = 
{
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_MONEY,
        .perType = {
            .money = {
                .amount = QUEST_REWARD_SMALL_MONEY,
            }
        }
    },
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_HARD,
        .customPopup = NULL,
        .type = QUEST_REWARD_POKEMON,
        .perType = {
            .pokemon = {
                .species = SPECIES_KECLEON,
                .isShiny = TRUE,
                .customMonId = CUSTOM_MON_NONE,
                .nickname = NULL,
            }
        }
    },
};
static u16 const sTriggerParams_DIVERSITY_82_0[] = 
{
};
static u16 const sTriggerParams_DIVERSITY_82_1[] = 
{
};
static struct RogueQuestTrigger const sTriggers_DIVERSITY_82[] = 
{
    {
        .callback = QuestCondition_PartyContainsOnlyUniqueTypes,
        .passState = QUEST_STATUS_PENDING,
        .failState = QUEST_STATUS_FAIL,
        .flags = 0 | QUEST_TRIGGER_TRAINER_BATTLE_START,
        .params = sTriggerParams_DIVERSITY_82_0,
        .paramCount = ARRAY_COUNT(sTriggerParams_DIVERSITY_82_0),
    },
    {
        .callback = QuestCondition_Always,
        .passState = QUEST_STATUS_SUCCESS,
        .failState = QUEST_STATUS_PENDING,
        .flags = 0 | QUEST_TRIGGER_ENTER_HALL_OF_FAME,
        .params = sTriggerParams_DIVERSITY_82_1,
        .paramCount = ARRAY_COUNT(sTriggerParams_DIVERSITY_82_1),
    },
};

static u8 const sTitle_APOTHEOSIS_83[] = _("Apotheosis");
extern const u8 gQuestDescText_APOTHEOSIS_83[];

static struct RogueQuestReward const sRewards_APOTHEOSIS_83[] = 
{
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_MONEY,
        .perType = {
            .money = {
                .amount = QUEST_REWARD_MEDIUM_MONEY,
            }
        }
    },
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_HARD,
        .customPopup = NULL,
        .type = QUEST_REWARD_POKEMON,
        .perType = {
            .pokemon = {
                .species = SPECIES_ARCANINE,
                .isShiny = TRUE,
                .customMonId = CUSTOM_MON_NONE,
                .nickname = NULL,
            }
        }
    },
};
static u16 const sTriggerParams_APOTHEOSIS_83_0[] = 
{
};
static u16 const sTriggerParams_APOTHEOSIS_83_1[] = 
{
};
static struct RogueQuestTrigger const sTriggers_APOTHEOSIS_83[] = 
{
    {
        .callback = QuestCondition_PartyContainsOnlyLegendaries,
        .passState = QUEST_STATUS_PENDING,
        .failState = QUEST_STATUS_FAIL,
        .flags = 0 | QUEST_TRIGGER_TRAINER_BATTLE_START,
        .params = sTriggerParams_APOTHEOSIS_83_0,
        .paramCount = ARRAY_COUNT(sTriggerParams_APOTHEOSIS_83_0),
    },
    {
        .callback = QuestCondition_Always,
        .passState = QUEST_STATUS_SUCCESS,
        .failState = QUEST_STATUS_PENDING,
        .flags = 0 | QUEST_TRIGGER_ENTER_HALL_OF_FAME,
        .params = sTriggerParams_APOTHEOSIS_83_1,
        .paramCount = ARRAY_COUNT(sTriggerParams_APOTHEOSIS_83_1),
    },
};

static u8 const sTitle_AESTHETICS_84[] = _("Aesthetics");
extern const u8 gQuestDescText_AESTHETICS_84[];

static struct RogueQuestReward const sRewards_AESTHETICS_84[] = 
{
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_MONEY,
        .perType = {
            .money = {
                .amount = QUEST_REWARD_MEDIUM_MONEY,
            }
        }
    },
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_HARD,
        .customPopup = NULL,
        .type = QUEST_REWARD_POKEMON,
        .perType = {
            .pokemon = {
                .species = SPECIES_GYARADOS,
                .isShiny = TRUE,
                .customMonId = CUSTOM_MON_NONE,
                .nickname = NULL,
            }
        }
    },
};
static u16 const sTriggerParams_AESTHETICS_84_0[] = 
{
};
static u16 const sTriggerParams_AESTHETICS_84_1[] = 
{
};
static struct RogueQuestTrigger const sTriggers_AESTHETICS_84[] = 
{
    {
        .callback = QuestCondition_PartyContainsOnlyShinys,
        .passState = QUEST_STATUS_PENDING,
        .failState = QUEST_STATUS_FAIL,
        .flags = 0 | QUEST_TRIGGER_TRAINER_BATTLE_START,
        .params = sTriggerParams_AESTHETICS_84_0,
        .paramCount = ARRAY_COUNT(sTriggerParams_AESTHETICS_84_0),
    },
    {
        .callback = QuestCondition_Always,
        .passState = QUEST_STATUS_SUCCESS,
        .failState = QUEST_STATUS_PENDING,
        .flags = 0 | QUEST_TRIGGER_ENTER_HALL_OF_FAME,
        .params = sTriggerParams_AESTHETICS_84_1,
        .paramCount = ARRAY_COUNT(sTriggerParams_AESTHETICS_84_1),
    },
};

static u8 const sTitle_I_AM_SPEED_85[] = _("I am Speed");
extern const u8 gQuestDescText_I_AM_SPEED_85[];

static struct RogueQuestReward const sRewards_I_AM_SPEED_85[] = 
{
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_MONEY,
        .perType = {
            .money = {
                .amount = QUEST_REWARD_MEDIUM_MONEY,
            }
        }
    },
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_HARD,
        .customPopup = NULL,
        .type = QUEST_REWARD_POKEMON,
        .perType = {
            .pokemon = {
                .species = SPECIES_NINJASK,
                .isShiny = TRUE,
                .customMonId = CUSTOM_MON_NONE,
                .nickname = NULL,
            }
        }
    },
};
static u16 const sTriggerParams_I_AM_SPEED_85_0[] = 
{
    150,
};
static u16 const sTriggerParams_I_AM_SPEED_85_1[] = 
{
    150,
};
static struct RogueQuestTrigger const sTriggers_I_AM_SPEED_85[] = 
{
    {
        .callback = QuestCondition_RunTimerLessThanMins,
        .passState = QUEST_STATUS_SUCCESS,
        .failState = QUEST_STATUS_PENDING,
        .flags = 0 | QUEST_TRIGGER_ENTER_HALL_OF_FAME,
        .params = sTriggerParams_I_AM_SPEED_85_0,
        .paramCount = ARRAY_COUNT(sTriggerParams_I_AM_SPEED_85_0),
    },
    {
        .callback = QuestCondition_RunTimerLessThanMins,
        .passState = QUEST_STATUS_PENDING,
        .failState = QUEST_STATUS_FAIL,
        .flags = 0 | QUEST_TRIGGER_ANY_BATTLE_END,
        .params = sTriggerParams_I_AM_SPEED_85_1,
        .paramCount = ARRAY_COUNT(sTriggerParams_I_AM_SPEED_85_1),
    },
};

static u8 const sTitle_CURSED_BODY_86[] = _("Cursed Body");
extern const u8 gQuestDescText_CURSED_BODY_86[];

static struct RogueQuestReward const sRewards_CURSED_BODY_86[] = 
{
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_MONEY,
        .perType = {
            .money = {
                .amount = QUEST_REWARD_LARGE_MONEY,
            }
        }
    },
#if !defined(ROGUE_EXPANSION)
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_HARD,
        .customPopup = NULL,
        .type = QUEST_REWARD_POKEMON,
        .perType = {
            .pokemon = {
                .species = SPECIES_NINETALES,
                .isShiny = TRUE,
                .customMonId = CUSTOM_MON_NONE,
                .nickname = NULL,
            }
        }
    },
#endif
#if defined(ROGUE_EXPANSION)
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_HARD,
        .customPopup = NULL,
        .type = QUEST_REWARD_POKEMON,
        .perType = {
            .pokemon = {
                .species = SPECIES_NINETALES_ALOLAN,
                .isShiny = TRUE,
                .customMonId = CUSTOM_MON_NONE,
                .nickname = NULL,
            }
        }
    },
#endif
};
static struct RogueQuestRequirement const sRequirements_CURSED_BODY_86[] = 
{
    {
        .type = QUEST_REQUIREMENT_TYPE_ITEM,
        .perType = {
            .item = {
                .itemId = ITEM_SNOWBALL_CURSE,
                .operation = QUEST_REQUIREMENT_OPERATION_GREATER_THAN_EQUAL,
                .count = 1,
            }
        }
    },
};
static u16 const sTriggerParams_CURSED_BODY_86_0[] = 
{
};
static struct RogueQuestTrigger const sTriggers_CURSED_BODY_86[] = 
{
    {
        .callback = QuestCondition_Always,
        .passState = QUEST_STATUS_SUCCESS,
        .failState = QUEST_STATUS_PENDING,
        .flags = 0 | QUEST_TRIGGER_ENTER_HALL_OF_FAME,
        .params = sTriggerParams_CURSED_BODY_86_0,
        .paramCount = ARRAY_COUNT(sTriggerParams_CURSED_BODY_86_0),
    },
};

static u8 const sTitle_LIMITED_CAPTURE_87[] = _("Limited Capture");
extern const u8 gQuestDescText_LIMITED_CAPTURE_87[];

static struct RogueQuestReward const sRewards_LIMITED_CAPTURE_87[] = 
{
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_MONEY,
        .perType = {
            .money = {
                .amount = QUEST_REWARD_LARGE_MONEY,
            }
        }
    },
#if !defined(ROGUE_EXPANSION)
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_HARD,
        .customPopup = NULL,
        .type = QUEST_REWARD_POKEMON,
        .perType = {
            .pokemon = {
                .species = SPECIES_VOLTORB,
                .isShiny = TRUE,
                .customMonId = CUSTOM_MON_NONE,
                .nickname = NULL,
            }
        }
    },
#endif
#if defined(ROGUE_EXPANSION)
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_HARD,
        .customPopup = NULL,
        .type = QUEST_REWARD_POKEMON,
        .perType = {
            .pokemon = {
                .species = SPECIES_VOLTORB_HISUIAN,
                .isShiny = TRUE,
                .customMonId = CUSTOM_MON_NONE,
                .nickname = NULL,
            }
        }
    },
#endif
};
static u16 const sTriggerParams_LIMITED_CAPTURE_87_0[] = 
{
    VAR_ROGUE_TOTAL_RUN_CATCHES,
    5,
};
static u16 const sTriggerParams_LIMITED_CAPTURE_87_1[] = 
{
    VAR_ROGUE_TOTAL_RUN_CATCHES,
    5,
};
static struct RogueQuestTrigger const sTriggers_LIMITED_CAPTURE_87[] = 
{
    {
        .callback = QuestCondition_VarGetGreaterThan,
        .passState = QUEST_STATUS_FAIL,
        .failState = QUEST_STATUS_PENDING,
        .flags = 0 | QUEST_TRIGGER_ANY_MON_CAUGHT,
        .params = sTriggerParams_LIMITED_CAPTURE_87_0,
        .paramCount = ARRAY_COUNT(sTriggerParams_LIMITED_CAPTURE_87_0),
    },
    {
        .callback = QuestCondition_VarGetEqual,
        .passState = QUEST_STATUS_SUCCESS,
        .failState = QUEST_STATUS_PENDING,
        .flags = 0 | QUEST_TRIGGER_ENTER_HALL_OF_FAME,
        .params = sTriggerParams_LIMITED_CAPTURE_87_1,
        .paramCount = ARRAY_COUNT(sTriggerParams_LIMITED_CAPTURE_87_1),
    },
};

static u8 const sTitle_BST_CROWN_88[] = _("BST Crown");
extern const u8 gQuestDescText_BST_CROWN_88[];

static struct RogueQuestReward const sRewards_BST_CROWN_88[] = 
{
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_MONEY,
        .perType = {
            .money = {
                .amount = QUEST_REWARD_LARGE_MONEY,
            }
        }
    },
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_HARD,
        .customPopup = NULL,
        .type = QUEST_REWARD_POKEMON,
        .perType = {
            .pokemon = {
                .species = SPECIES_SUNKERN,
                .isShiny = TRUE,
                .customMonId = CUSTOM_MON_NONE,
                .nickname = NULL,
            }
        }
    },
};
static struct RogueQuestRequirement const sRequirements_BST_CROWN_88[] = 
{
    {
        .type = QUEST_REQUIREMENT_TYPE_ITEM,
        .perType = {
            .item = {
                .itemId = ITEM_WILD_EGG_SPECIES_CURSE,
                .operation = QUEST_REQUIREMENT_OPERATION_GREATER_THAN_EQUAL,
                .count = 1,
            }
        }
    },
};
static u16 const sTriggerParams_BST_CROWN_88_0[] = 
{
    351,
};
static u16 const sTriggerParams_BST_CROWN_88_1[] = 
{
    351,
};
static u16 const sTriggerParams_BST_CROWN_88_2[] = 
{
};
static struct RogueQuestTrigger const sTriggers_BST_CROWN_88[] = 
{
    {
        .callback = QuestCondition_PartyMaxBSTLessThan,
        .passState = QUEST_STATUS_PENDING,
        .failState = QUEST_STATUS_FAIL,
        .flags = 0 | QUEST_TRIGGER_TRAINER_BATTLE_START,
        .params = sTriggerParams_BST_CROWN_88_0,
        .paramCount = ARRAY_COUNT(sTriggerParams_BST_CROWN_88_0),
    },
    {
        .callback = QuestCondition_PartyMaxBSTLessThan,
        .passState = QUEST_STATUS_PENDING,
        .failState = QUEST_STATUS_FAIL,
        .flags = 0 | QUEST_TRIGGER_TRAINER_BATTLE_END_TURN,
        .params = sTriggerParams_BST_CROWN_88_1,
        .paramCount = ARRAY_COUNT(sTriggerParams_BST_CROWN_88_1),
    },
    {
        .callback = QuestCondition_Always,
        .passState = QUEST_STATUS_SUCCESS,
        .failState = QUEST_STATUS_PENDING,
        .flags = 0 | QUEST_TRIGGER_ENTER_HALL_OF_FAME,
        .params = sTriggerParams_BST_CROWN_88_2,
        .paramCount = ARRAY_COUNT(sTriggerParams_BST_CROWN_88_2),
    },
};

static u8 const sTitle_PRO_BUILDING_89[] = _("Pro-Building");
extern const u8 gQuestDescText_PRO_BUILDING_89[];

static struct RogueQuestReward const sRewards_PRO_BUILDING_89[] = 
{
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_MONEY,
        .perType = {
            .money = {
                .amount = QUEST_REWARD_MEDIUM_MONEY,
            }
        }
    },
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_HARD,
        .customPopup = NULL,
        .type = QUEST_REWARD_POKEMON,
        .perType = {
            .pokemon = {
                .species = SPECIES_SMEARGLE,
                .isShiny = TRUE,
                .customMonId = CUSTOM_MON_NONE,
                .nickname = NULL,
            }
        }
    },
};
static struct RogueQuestRequirement const sRequirements_PRO_BUILDING_89[] = 
{
    {
        .type = QUEST_REQUIREMENT_TYPE_ITEM,
        .perType = {
            .item = {
                .itemId = ITEM_AUTO_MOVE_CURSE,
                .operation = QUEST_REQUIREMENT_OPERATION_GREATER_THAN_EQUAL,
                .count = 1,
            }
        }
    },
};
static u16 const sTriggerParams_PRO_BUILDING_89_0[] = 
{
};
static struct RogueQuestTrigger const sTriggers_PRO_BUILDING_89[] = 
{
    {
        .callback = QuestCondition_Always,
        .passState = QUEST_STATUS_SUCCESS,
        .failState = QUEST_STATUS_PENDING,
        .flags = 0 | QUEST_TRIGGER_ENTER_HALL_OF_FAME,
        .params = sTriggerParams_PRO_BUILDING_89_0,
        .paramCount = ARRAY_COUNT(sTriggerParams_PRO_BUILDING_89_0),
    },
};

static u8 const sTitle_INSANE_MODE_90[] = _("Insane Mode");
extern const u8 gQuestDescText_INSANE_MODE_90[];

static struct RogueQuestReward const sRewards_INSANE_MODE_90[] = 
{
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_MONEY,
        .perType = {
            .money = {
                .amount = QUEST_REWARD_LARGE_MONEY,
            }
        }
    },
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_HARD,
        .customPopup = NULL,
        .type = QUEST_REWARD_POKEMON,
        .perType = {
            .pokemon = {
                .species = SPECIES_BANETTE,
                .isShiny = TRUE,
                .customMonId = CUSTOM_MON_NONE,
                .nickname = NULL,
            }
        }
    },
};
static struct RogueQuestRequirement const sRequirements_INSANE_MODE_90[] = 
{
    {
        .type = QUEST_REQUIREMENT_TYPE_FLAG,
        .perType = {
            .flag = {
                .flag = FLAG_ROGUE_HAS_RANDOM_STARTER,
                .state = TRUE,
            }
        }
    },
    {
        .type = QUEST_REQUIREMENT_TYPE_CONFIG_RANGE,
        .perType = {
            .configRange = {
                .range = CONFIG_RANGE_BATTLE_FORMAT,
                .operation = QUEST_REQUIREMENT_OPERATION_EQUAL,
                .value = BATTLE_FORMAT_MIXED,
            }
        }
    },
    {
        .type = QUEST_REQUIREMENT_TYPE_CONFIG_TOGGLE,
        .perType = {
            .configToggle = {
                .toggle = CONFIG_TOGGLE_BAG_WIPE,
                .state = TRUE,
            }
        }
    },
    {
        .type = QUEST_REQUIREMENT_TYPE_ITEM,
        .perType = {
            .item = {
                .itemId = ITEM_BATTLE_ITEM_CURSE,
                .operation = QUEST_REQUIREMENT_OPERATION_GREATER_THAN_EQUAL,
                .count = 1,
            }
        }
    },
    {
        .type = QUEST_REQUIREMENT_TYPE_ITEM,
        .perType = {
            .item = {
                .itemId = ITEM_SPECIES_CLAUSE_CURSE,
                .operation = QUEST_REQUIREMENT_OPERATION_GREATER_THAN_EQUAL,
                .count = 1,
            }
        }
    },
    {
        .type = QUEST_REQUIREMENT_TYPE_ITEM,
        .perType = {
            .item = {
                .itemId = ITEM_UNAWARE_CURSE,
                .operation = QUEST_REQUIREMENT_OPERATION_GREATER_THAN_EQUAL,
                .count = 1,
            }
        }
    },
};
static u16 const sTriggerParams_INSANE_MODE_90_0[] = 
{
};
static u16 const sTriggerParams_INSANE_MODE_90_1[] = 
{
};
static struct RogueQuestTrigger const sTriggers_INSANE_MODE_90[] = 
{
    {
        .callback = QuestCondition_PartyContainsLegendary,
        .passState = QUEST_STATUS_FAIL,
        .failState = QUEST_STATUS_PENDING,
        .flags = 0 | QUEST_TRIGGER_TRAINER_BATTLE_START,
        .params = sTriggerParams_INSANE_MODE_90_0,
        .paramCount = ARRAY_COUNT(sTriggerParams_INSANE_MODE_90_0),
    },
    {
        .callback = QuestCondition_Always,
        .passState = QUEST_STATUS_SUCCESS,
        .failState = QUEST_STATUS_PENDING,
        .flags = 0 | QUEST_TRIGGER_ENTER_HALL_OF_FAME,
        .params = sTriggerParams_INSANE_MODE_90_1,
        .paramCount = ARRAY_COUNT(sTriggerParams_INSANE_MODE_90_1),
    },
};

static u8 const sTitle_IRON_MONO_91[] = _("Iron Mono");
extern const u8 gQuestDescText_IRON_MONO_91[];

static struct RogueQuestReward const sRewards_IRON_MONO_91[] = 
{
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_MONEY,
        .perType = {
            .money = {
                .amount = QUEST_REWARD_MEDIUM_MONEY,
            }
        }
    },
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_QUEST_UNLOCK,
        .perType = {
            .questUnlock = {
                .questId = QUEST_ID_IRON_KAIZO,
            }
        }
    },
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_HARD,
        .customPopup = NULL,
        .type = QUEST_REWARD_POKEMON,
        .perType = {
            .pokemon = {
                .species = SPECIES_CHANSEY,
                .isShiny = TRUE,
                .customMonId = CUSTOM_MON_NONE,
                .nickname = NULL,
            }
        }
    },
};
static struct RogueQuestRequirement const sRequirements_IRON_MONO_91[] = 
{
    {
        .type = QUEST_REQUIREMENT_TYPE_ITEM,
        .perType = {
            .item = {
                .itemId = ITEM_PARTY_CURSE,
                .operation = QUEST_REQUIREMENT_OPERATION_GREATER_THAN_EQUAL,
                .count = 5,
            }
        }
    },
};
static u16 const sTriggerParams_IRON_MONO_91_0[] = 
{
};
static struct RogueQuestTrigger const sTriggers_IRON_MONO_91[] = 
{
    {
        .callback = QuestCondition_Always,
        .passState = QUEST_STATUS_SUCCESS,
        .failState = QUEST_STATUS_PENDING,
        .flags = 0 | QUEST_TRIGGER_ENTER_HALL_OF_FAME,
        .params = sTriggerParams_IRON_MONO_91_0,
        .paramCount = ARRAY_COUNT(sTriggerParams_IRON_MONO_91_0),
    },
};

static u8 const sTitle_IRON_KAIZO_92[] = _("Iron Kaizo");
extern const u8 gQuestDescText_IRON_KAIZO_92[];

static struct RogueQuestReward const sRewards_IRON_KAIZO_92[] = 
{
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_MONEY,
        .perType = {
            .money = {
                .amount = QUEST_REWARD_LARGE_MONEY,
            }
        }
    },
#if !defined(ROGUE_EXPANSION)
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_HARD,
        .customPopup = NULL,
        .type = QUEST_REWARD_POKEMON,
        .perType = {
            .pokemon = {
                .species = SPECIES_TOGEPI,
                .isShiny = TRUE,
                .customMonId = CUSTOM_MON_NONE,
                .nickname = NULL,
            }
        }
    },
#endif
#if defined(ROGUE_EXPANSION)
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_HARD,
        .customPopup = NULL,
        .type = QUEST_REWARD_POKEMON,
        .perType = {
            .pokemon = {
                .species = SPECIES_KINGAMBIT,
                .isShiny = TRUE,
                .customMonId = CUSTOM_MON_NONE,
                .nickname = NULL,
            }
        }
    },
#endif
};
static struct RogueQuestRequirement const sRequirements_IRON_KAIZO_92[] = 
{
    {
        .type = QUEST_REQUIREMENT_TYPE_FLAG,
        .perType = {
            .flag = {
                .flag = FLAG_ROGUE_HAS_RANDOM_STARTER,
                .state = TRUE,
            }
        }
    },
    {
        .type = QUEST_REQUIREMENT_TYPE_CONFIG_TOGGLE,
        .perType = {
            .configToggle = {
                .toggle = CONFIG_TOGGLE_BAG_WIPE,
                .state = TRUE,
            }
        }
    },
    {
        .type = QUEST_REQUIREMENT_TYPE_ITEM,
        .perType = {
            .item = {
                .itemId = ITEM_BATTLE_ITEM_CURSE,
                .operation = QUEST_REQUIREMENT_OPERATION_GREATER_THAN_EQUAL,
                .count = 1,
            }
        }
    },
    {
        .type = QUEST_REQUIREMENT_TYPE_ITEM,
        .perType = {
            .item = {
                .itemId = ITEM_PARTY_CURSE,
                .operation = QUEST_REQUIREMENT_OPERATION_GREATER_THAN_EQUAL,
                .count = 5,
            }
        }
    },
    {
        .type = QUEST_REQUIREMENT_TYPE_ITEM,
        .perType = {
            .item = {
                .itemId = ITEM_SHOP_PRICE_CURSE,
                .operation = QUEST_REQUIREMENT_OPERATION_GREATER_THAN_EQUAL,
                .count = 99,
            }
        }
    },
};
static u16 const sTriggerParams_IRON_KAIZO_92_0[] = 
{
};
static struct RogueQuestTrigger const sTriggers_IRON_KAIZO_92[] = 
{
    {
        .callback = QuestCondition_Always,
        .passState = QUEST_STATUS_SUCCESS,
        .failState = QUEST_STATUS_PENDING,
        .flags = 0 | QUEST_TRIGGER_ENTER_HALL_OF_FAME,
        .params = sTriggerParams_IRON_KAIZO_92_0,
        .paramCount = ARRAY_COUNT(sTriggerParams_IRON_KAIZO_92_0),
    },
};

static u8 const sTitle_ROCKET_TRIUMPH_93[] = _("Rocket Triumph");
extern const u8 gQuestDescText_ROCKET_TRIUMPH_93[];

static u8 const sCustomPopupTitle_ROCKET_TRIUMPH_93_1[] = _("Rocket Grunt");
static u8 const sCustomPopupSubtitle_ROCKET_TRIUMPH_93_1[] = _("{COLOR LIGHT_BLUE}{SHADOW BLUE}Outfit Unlocked");

static struct CustomPopup const sCustomPopup_ROCKET_TRIUMPH_93_1 = 
{
    .titleStr = sCustomPopupTitle_ROCKET_TRIUMPH_93_1,
    .subtitleStr = sCustomPopupSubtitle_ROCKET_TRIUMPH_93_1,
    .itemIcon = ITEM_GREEN_SCARF,
    .soundEffect = 0,
    .fanfare = MUS_RG_OBTAIN_KEY_ITEM,
};

static struct RogueQuestReward const sRewards_ROCKET_TRIUMPH_93[] = 
{
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_MONEY,
        .perType = {
            .money = {
                .amount = QUEST_REWARD_SMALL_MONEY,
            }
        }
    },
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = &sCustomPopup_ROCKET_TRIUMPH_93_1,
        .type = QUEST_REWARD_OUTFIT_UNLOCK,
        .perType = {
            .outfitUnlock = {
                .outfitUnlockId = OUTFIT_UNLOCK_TEAM_ROCKET,
            }
        }
    },
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_HARD,
        .customPopup = NULL,
        .type = QUEST_REWARD_POKEMON,
        .perType = {
            .pokemon = {
                .species = SPECIES_ZUBAT,
                .isShiny = TRUE,
                .customMonId = CUSTOM_MON_NONE,
                .nickname = NULL,
            }
        }
    },
};
static u16 const sTriggerParams_ROCKET_TRIUMPH_93_0[] = 
{
    ADVPATH_ROOM_TEAM_HIDEOUT,
};
static u16 const sTriggerParams_ROCKET_TRIUMPH_93_1[] = 
{
    TEAM_NUM_KANTO_ROCKET,
    TEAM_NUM_JOHTO_ROCKET,
};
static struct RogueQuestTrigger const sTriggers_ROCKET_TRIUMPH_93[] = 
{
    {
        .callback = QuestCondition_CurrentlyInRoomType,
        .passState = QUEST_STATUS_PENDING,
        .failState = QUEST_STATUS_BREAK,
        .flags = 0 | QUEST_TRIGGER_MAP_SPECIFIC_EVENT,
        .params = sTriggerParams_ROCKET_TRIUMPH_93_0,
        .paramCount = ARRAY_COUNT(sTriggerParams_ROCKET_TRIUMPH_93_0),
    },
    {
        .callback = QuestCondition_CurrentEvilTeamIs,
        .passState = QUEST_STATUS_SUCCESS,
        .failState = QUEST_STATUS_PENDING,
        .flags = 0 | QUEST_TRIGGER_MAP_SPECIFIC_EVENT,
        .params = sTriggerParams_ROCKET_TRIUMPH_93_1,
        .paramCount = ARRAY_COUNT(sTriggerParams_ROCKET_TRIUMPH_93_1),
    },
};

static u8 const sTitle_AQUA_TRIUMPH_94[] = _("Aqua Triumph");
extern const u8 gQuestDescText_AQUA_TRIUMPH_94[];

static u8 const sCustomPopupTitle_AQUA_TRIUMPH_94_1[] = _("Aqua Grunt");
static u8 const sCustomPopupSubtitle_AQUA_TRIUMPH_94_1[] = _("{COLOR LIGHT_BLUE}{SHADOW BLUE}Outfit Unlocked");

static struct CustomPopup const sCustomPopup_AQUA_TRIUMPH_94_1 = 
{
    .titleStr = sCustomPopupTitle_AQUA_TRIUMPH_94_1,
    .subtitleStr = sCustomPopupSubtitle_AQUA_TRIUMPH_94_1,
    .itemIcon = ITEM_GREEN_SCARF,
    .soundEffect = 0,
    .fanfare = MUS_RG_OBTAIN_KEY_ITEM,
};

static struct RogueQuestReward const sRewards_AQUA_TRIUMPH_94[] = 
{
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_MONEY,
        .perType = {
            .money = {
                .amount = QUEST_REWARD_SMALL_MONEY,
            }
        }
    },
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = &sCustomPopup_AQUA_TRIUMPH_94_1,
        .type = QUEST_REWARD_OUTFIT_UNLOCK,
        .perType = {
            .outfitUnlock = {
                .outfitUnlockId = OUTFIT_UNLOCK_TEAM_AQUA,
            }
        }
    },
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_HARD,
        .customPopup = NULL,
        .type = QUEST_REWARD_POKEMON,
        .perType = {
            .pokemon = {
                .species = SPECIES_CARVANHA,
                .isShiny = TRUE,
                .customMonId = CUSTOM_MON_NONE,
                .nickname = NULL,
            }
        }
    },
};
static u16 const sTriggerParams_AQUA_TRIUMPH_94_0[] = 
{
    ADVPATH_ROOM_TEAM_HIDEOUT,
};
static u16 const sTriggerParams_AQUA_TRIUMPH_94_1[] = 
{
    TEAM_NUM_AQUA,
};
static struct RogueQuestTrigger const sTriggers_AQUA_TRIUMPH_94[] = 
{
    {
        .callback = QuestCondition_CurrentlyInRoomType,
        .passState = QUEST_STATUS_PENDING,
        .failState = QUEST_STATUS_BREAK,
        .flags = 0 | QUEST_TRIGGER_MAP_SPECIFIC_EVENT,
        .params = sTriggerParams_AQUA_TRIUMPH_94_0,
        .paramCount = ARRAY_COUNT(sTriggerParams_AQUA_TRIUMPH_94_0),
    },
    {
        .callback = QuestCondition_CurrentEvilTeamIs,
        .passState = QUEST_STATUS_SUCCESS,
        .failState = QUEST_STATUS_PENDING,
        .flags = 0 | QUEST_TRIGGER_MAP_SPECIFIC_EVENT,
        .params = sTriggerParams_AQUA_TRIUMPH_94_1,
        .paramCount = ARRAY_COUNT(sTriggerParams_AQUA_TRIUMPH_94_1),
    },
};

static u8 const sTitle_MAGMA_TRIUMPH_95[] = _("Magma Triumph");
extern const u8 gQuestDescText_MAGMA_TRIUMPH_95[];

static u8 const sCustomPopupTitle_MAGMA_TRIUMPH_95_1[] = _("Magma Grunt");
static u8 const sCustomPopupSubtitle_MAGMA_TRIUMPH_95_1[] = _("{COLOR LIGHT_BLUE}{SHADOW BLUE}Outfit Unlocked");

static struct CustomPopup const sCustomPopup_MAGMA_TRIUMPH_95_1 = 
{
    .titleStr = sCustomPopupTitle_MAGMA_TRIUMPH_95_1,
    .subtitleStr = sCustomPopupSubtitle_MAGMA_TRIUMPH_95_1,
    .itemIcon = ITEM_GREEN_SCARF,
    .soundEffect = 0,
    .fanfare = MUS_RG_OBTAIN_KEY_ITEM,
};

static struct RogueQuestReward const sRewards_MAGMA_TRIUMPH_95[] = 
{
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_MONEY,
        .perType = {
            .money = {
                .amount = QUEST_REWARD_SMALL_MONEY,
            }
        }
    },
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = &sCustomPopup_MAGMA_TRIUMPH_95_1,
        .type = QUEST_REWARD_OUTFIT_UNLOCK,
        .perType = {
            .outfitUnlock = {
                .outfitUnlockId = OUTFIT_UNLOCK_TEAM_MAGMA,
            }
        }
    },
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_HARD,
        .customPopup = NULL,
        .type = QUEST_REWARD_POKEMON,
        .perType = {
            .pokemon = {
                .species = SPECIES_NUMEL,
                .isShiny = TRUE,
                .customMonId = CUSTOM_MON_NONE,
                .nickname = NULL,
            }
        }
    },
};
static u16 const sTriggerParams_MAGMA_TRIUMPH_95_0[] = 
{
    ADVPATH_ROOM_TEAM_HIDEOUT,
};
static u16 const sTriggerParams_MAGMA_TRIUMPH_95_1[] = 
{
    TEAM_NUM_MAGMA,
};
static struct RogueQuestTrigger const sTriggers_MAGMA_TRIUMPH_95[] = 
{
    {
        .callback = QuestCondition_CurrentlyInRoomType,
        .passState = QUEST_STATUS_PENDING,
        .failState = QUEST_STATUS_BREAK,
        .flags = 0 | QUEST_TRIGGER_MAP_SPECIFIC_EVENT,
        .params = sTriggerParams_MAGMA_TRIUMPH_95_0,
        .paramCount = ARRAY_COUNT(sTriggerParams_MAGMA_TRIUMPH_95_0),
    },
    {
        .callback = QuestCondition_CurrentEvilTeamIs,
        .passState = QUEST_STATUS_SUCCESS,
        .failState = QUEST_STATUS_PENDING,
        .flags = 0 | QUEST_TRIGGER_MAP_SPECIFIC_EVENT,
        .params = sTriggerParams_MAGMA_TRIUMPH_95_1,
        .paramCount = ARRAY_COUNT(sTriggerParams_MAGMA_TRIUMPH_95_1),
    },
};

#if defined(ROGUE_EXPANSION)
static u8 const sTitle_GALACTIC_TRIUMPH_96[] = _("Galactic Triumph");
extern const u8 gQuestDescText_GALACTIC_TRIUMPH_96[];

static u8 const sCustomPopupTitle_GALACTIC_TRIUMPH_96_1[] = _("Galactic Grunt");
static u8 const sCustomPopupSubtitle_GALACTIC_TRIUMPH_96_1[] = _("{COLOR LIGHT_BLUE}{SHADOW BLUE}Outfit Unlocked");

static struct CustomPopup const sCustomPopup_GALACTIC_TRIUMPH_96_1 = 
{
    .titleStr = sCustomPopupTitle_GALACTIC_TRIUMPH_96_1,
    .subtitleStr = sCustomPopupSubtitle_GALACTIC_TRIUMPH_96_1,
    .itemIcon = ITEM_GREEN_SCARF,
    .soundEffect = 0,
    .fanfare = MUS_RG_OBTAIN_KEY_ITEM,
};

static struct RogueQuestReward const sRewards_GALACTIC_TRIUMPH_96[] = 
{
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_MONEY,
        .perType = {
            .money = {
                .amount = QUEST_REWARD_SMALL_MONEY,
            }
        }
    },
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = &sCustomPopup_GALACTIC_TRIUMPH_96_1,
        .type = QUEST_REWARD_OUTFIT_UNLOCK,
        .perType = {
            .outfitUnlock = {
                .outfitUnlockId = OUTFIT_UNLOCK_TEAM_GALACTIC,
            }
        }
    },
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_HARD,
        .customPopup = NULL,
        .type = QUEST_REWARD_POKEMON,
        .perType = {
            .pokemon = {
                .species = SPECIES_STUNKY,
                .isShiny = TRUE,
                .customMonId = CUSTOM_MON_NONE,
                .nickname = NULL,
            }
        }
    },
};
static u16 const sTriggerParams_GALACTIC_TRIUMPH_96_0[] = 
{
    ADVPATH_ROOM_TEAM_HIDEOUT,
};
static u16 const sTriggerParams_GALACTIC_TRIUMPH_96_1[] = 
{
    TEAM_NUM_GALACTIC,
};
static struct RogueQuestTrigger const sTriggers_GALACTIC_TRIUMPH_96[] = 
{
    {
        .callback = QuestCondition_CurrentlyInRoomType,
        .passState = QUEST_STATUS_PENDING,
        .failState = QUEST_STATUS_BREAK,
        .flags = 0 | QUEST_TRIGGER_MAP_SPECIFIC_EVENT,
        .params = sTriggerParams_GALACTIC_TRIUMPH_96_0,
        .paramCount = ARRAY_COUNT(sTriggerParams_GALACTIC_TRIUMPH_96_0),
    },
    {
        .callback = QuestCondition_CurrentEvilTeamIs,
        .passState = QUEST_STATUS_SUCCESS,
        .failState = QUEST_STATUS_PENDING,
        .flags = 0 | QUEST_TRIGGER_MAP_SPECIFIC_EVENT,
        .params = sTriggerParams_GALACTIC_TRIUMPH_96_1,
        .paramCount = ARRAY_COUNT(sTriggerParams_GALACTIC_TRIUMPH_96_1),
    },
};
#endif

static u8 const sTitle_BULBASAUR_MASTERY_97[] = _("Bulbasaur Mastery");
extern const u8 gQuestDescText_BULBASAUR_MASTERY_97[];

#if defined(ROGUE_EXPANSION)
static u8 const sCustomPopupTitle_BULBASAUR_MASTERY_97_2[] = _("Gmax Form");
static u8 const sCustomPopupSubtitle_BULBASAUR_MASTERY_97_2[] = _("{COLOR LIGHT_BLUE}{SHADOW BLUE}Perma Unlocked!");

static struct CustomPopup const sCustomPopup_BULBASAUR_MASTERY_97_2 = 
{
    .titleStr = sCustomPopupTitle_BULBASAUR_MASTERY_97_2,
    .subtitleStr = sCustomPopupSubtitle_BULBASAUR_MASTERY_97_2,
    .speciesIcon = SPECIES_VENUSAUR_GIGANTAMAX,
    .soundEffect = 0,
    .fanfare = MUS_RG_OBTAIN_KEY_ITEM,
};
#endif

static struct RogueQuestReward const sRewards_BULBASAUR_MASTERY_97[] = 
{
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_MONEY,
        .perType = {
            .money = {
                .amount = QUEST_REWARD_SMALL_MONEY,
            }
        }
    },
#if defined(ROGUE_EXPANSION)
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_SHOP_ITEM,
        .perType = {
            .shopItem = {
                .item = ITEM_VENUSAURITE,
            }
        }
    },
#endif
#if defined(ROGUE_EXPANSION)
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = &sCustomPopup_BULBASAUR_MASTERY_97_2,
        .type = QUEST_REWARD_FLAG,
        .perType = {
            .flag = {
                .flagId = FLAG_ROGUE_STUB,
            }
        }
    },
#endif
};
static u16 const sTriggerParams_BULBASAUR_MASTERY_97_0[] = 
{
    SPECIES_BULBASAUR,
};
static struct RogueQuestTrigger const sTriggers_BULBASAUR_MASTERY_97[] = 
{
    {
        .callback = QuestCondition_SpeciesMasteryComplete,
        .passState = QUEST_STATUS_SUCCESS,
        .failState = QUEST_STATUS_FAIL,
        .flags = 0 | QUEST_TRIGGER_ENTER_HALL_OF_FAME,
        .params = sTriggerParams_BULBASAUR_MASTERY_97_0,
        .paramCount = ARRAY_COUNT(sTriggerParams_BULBASAUR_MASTERY_97_0),
    },
};

static u8 const sTitle_CHARMANDER_MASTERY_98[] = _("Charmander Mastery");
extern const u8 gQuestDescText_CHARMANDER_MASTERY_98[];

#if defined(ROGUE_EXPANSION)
static u8 const sCustomPopupTitle_CHARMANDER_MASTERY_98_3[] = _("Gmax Form");
static u8 const sCustomPopupSubtitle_CHARMANDER_MASTERY_98_3[] = _("{COLOR LIGHT_BLUE}{SHADOW BLUE}Perma Unlocked!");

static struct CustomPopup const sCustomPopup_CHARMANDER_MASTERY_98_3 = 
{
    .titleStr = sCustomPopupTitle_CHARMANDER_MASTERY_98_3,
    .subtitleStr = sCustomPopupSubtitle_CHARMANDER_MASTERY_98_3,
    .speciesIcon = SPECIES_CHARIZARD_GIGANTAMAX,
    .soundEffect = 0,
    .fanfare = MUS_RG_OBTAIN_KEY_ITEM,
};
#endif

static struct RogueQuestReward const sRewards_CHARMANDER_MASTERY_98[] = 
{
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_MONEY,
        .perType = {
            .money = {
                .amount = QUEST_REWARD_SMALL_MONEY,
            }
        }
    },
#if defined(ROGUE_EXPANSION)
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_SHOP_ITEM,
        .perType = {
            .shopItem = {
                .item = ITEM_CHARIZARDITE_X,
            }
        }
    },
#endif
#if defined(ROGUE_EXPANSION)
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_SHOP_ITEM,
        .perType = {
            .shopItem = {
                .item = ITEM_CHARIZARDITE_Y,
            }
        }
    },
#endif
#if defined(ROGUE_EXPANSION)
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = &sCustomPopup_CHARMANDER_MASTERY_98_3,
        .type = QUEST_REWARD_FLAG,
        .perType = {
            .flag = {
                .flagId = FLAG_ROGUE_STUB,
            }
        }
    },
#endif
};
static u16 const sTriggerParams_CHARMANDER_MASTERY_98_0[] = 
{
    SPECIES_CHARMANDER,
};
static struct RogueQuestTrigger const sTriggers_CHARMANDER_MASTERY_98[] = 
{
    {
        .callback = QuestCondition_SpeciesMasteryComplete,
        .passState = QUEST_STATUS_SUCCESS,
        .failState = QUEST_STATUS_FAIL,
        .flags = 0 | QUEST_TRIGGER_ENTER_HALL_OF_FAME,
        .params = sTriggerParams_CHARMANDER_MASTERY_98_0,
        .paramCount = ARRAY_COUNT(sTriggerParams_CHARMANDER_MASTERY_98_0),
    },
};

static u8 const sTitle_SQUIRTLE_MASTERY_99[] = _("Squirtle Mastery");
extern const u8 gQuestDescText_SQUIRTLE_MASTERY_99[];

#if defined(ROGUE_EXPANSION)
static u8 const sCustomPopupTitle_SQUIRTLE_MASTERY_99_2[] = _("Gmax Form");
static u8 const sCustomPopupSubtitle_SQUIRTLE_MASTERY_99_2[] = _("{COLOR LIGHT_BLUE}{SHADOW BLUE}Perma Unlocked!");

static struct CustomPopup const sCustomPopup_SQUIRTLE_MASTERY_99_2 = 
{
    .titleStr = sCustomPopupTitle_SQUIRTLE_MASTERY_99_2,
    .subtitleStr = sCustomPopupSubtitle_SQUIRTLE_MASTERY_99_2,
    .speciesIcon = SPECIES_BLASTOISE_GIGANTAMAX,
    .soundEffect = 0,
    .fanfare = MUS_RG_OBTAIN_KEY_ITEM,
};
#endif

static struct RogueQuestReward const sRewards_SQUIRTLE_MASTERY_99[] = 
{
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_MONEY,
        .perType = {
            .money = {
                .amount = QUEST_REWARD_SMALL_MONEY,
            }
        }
    },
#if defined(ROGUE_EXPANSION)
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_SHOP_ITEM,
        .perType = {
            .shopItem = {
                .item = ITEM_BLASTOISINITE,
            }
        }
    },
#endif
#if defined(ROGUE_EXPANSION)
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = &sCustomPopup_SQUIRTLE_MASTERY_99_2,
        .type = QUEST_REWARD_FLAG,
        .perType = {
            .flag = {
                .flagId = FLAG_ROGUE_STUB,
            }
        }
    },
#endif
};
static u16 const sTriggerParams_SQUIRTLE_MASTERY_99_0[] = 
{
    SPECIES_SQUIRTLE,
};
static struct RogueQuestTrigger const sTriggers_SQUIRTLE_MASTERY_99[] = 
{
    {
        .callback = QuestCondition_SpeciesMasteryComplete,
        .passState = QUEST_STATUS_SUCCESS,
        .failState = QUEST_STATUS_FAIL,
        .flags = 0 | QUEST_TRIGGER_ENTER_HALL_OF_FAME,
        .params = sTriggerParams_SQUIRTLE_MASTERY_99_0,
        .paramCount = ARRAY_COUNT(sTriggerParams_SQUIRTLE_MASTERY_99_0),
    },
};

static u8 const sTitle_CATERPIE_MASTERY_100[] = _("Caterpie Mastery");
extern const u8 gQuestDescText_CATERPIE_MASTERY_100[];

#if defined(ROGUE_EXPANSION)
static u8 const sCustomPopupTitle_CATERPIE_MASTERY_100_1[] = _("Gmax Form");
static u8 const sCustomPopupSubtitle_CATERPIE_MASTERY_100_1[] = _("{COLOR LIGHT_BLUE}{SHADOW BLUE}Perma Unlocked!");

static struct CustomPopup const sCustomPopup_CATERPIE_MASTERY_100_1 = 
{
    .titleStr = sCustomPopupTitle_CATERPIE_MASTERY_100_1,
    .subtitleStr = sCustomPopupSubtitle_CATERPIE_MASTERY_100_1,
    .speciesIcon = SPECIES_BUTTERFREE_GIGANTAMAX,
    .soundEffect = 0,
    .fanfare = MUS_RG_OBTAIN_KEY_ITEM,
};
#endif

static struct RogueQuestReward const sRewards_CATERPIE_MASTERY_100[] = 
{
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_MONEY,
        .perType = {
            .money = {
                .amount = QUEST_REWARD_SMALL_MONEY,
            }
        }
    },
#if defined(ROGUE_EXPANSION)
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = &sCustomPopup_CATERPIE_MASTERY_100_1,
        .type = QUEST_REWARD_FLAG,
        .perType = {
            .flag = {
                .flagId = FLAG_ROGUE_STUB,
            }
        }
    },
#endif
};
static u16 const sTriggerParams_CATERPIE_MASTERY_100_0[] = 
{
    SPECIES_CATERPIE,
};
static struct RogueQuestTrigger const sTriggers_CATERPIE_MASTERY_100[] = 
{
    {
        .callback = QuestCondition_SpeciesMasteryComplete,
        .passState = QUEST_STATUS_SUCCESS,
        .failState = QUEST_STATUS_FAIL,
        .flags = 0 | QUEST_TRIGGER_ENTER_HALL_OF_FAME,
        .params = sTriggerParams_CATERPIE_MASTERY_100_0,
        .paramCount = ARRAY_COUNT(sTriggerParams_CATERPIE_MASTERY_100_0),
    },
};

static u8 const sTitle_WEEDLE_MASTERY_101[] = _("Weedle Mastery");
extern const u8 gQuestDescText_WEEDLE_MASTERY_101[];

static struct RogueQuestReward const sRewards_WEEDLE_MASTERY_101[] = 
{
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_MONEY,
        .perType = {
            .money = {
                .amount = QUEST_REWARD_SMALL_MONEY,
            }
        }
    },
#if defined(ROGUE_EXPANSION)
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_SHOP_ITEM,
        .perType = {
            .shopItem = {
                .item = ITEM_BEEDRILLITE,
            }
        }
    },
#endif
};
static u16 const sTriggerParams_WEEDLE_MASTERY_101_0[] = 
{
    SPECIES_WEEDLE,
};
static struct RogueQuestTrigger const sTriggers_WEEDLE_MASTERY_101[] = 
{
    {
        .callback = QuestCondition_SpeciesMasteryComplete,
        .passState = QUEST_STATUS_SUCCESS,
        .failState = QUEST_STATUS_FAIL,
        .flags = 0 | QUEST_TRIGGER_ENTER_HALL_OF_FAME,
        .params = sTriggerParams_WEEDLE_MASTERY_101_0,
        .paramCount = ARRAY_COUNT(sTriggerParams_WEEDLE_MASTERY_101_0),
    },
};

static u8 const sTitle_PIDGEY_MASTERY_102[] = _("Pidgey Mastery");
extern const u8 gQuestDescText_PIDGEY_MASTERY_102[];

static struct RogueQuestReward const sRewards_PIDGEY_MASTERY_102[] = 
{
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_MONEY,
        .perType = {
            .money = {
                .amount = QUEST_REWARD_SMALL_MONEY,
            }
        }
    },
#if defined(ROGUE_EXPANSION)
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_SHOP_ITEM,
        .perType = {
            .shopItem = {
                .item = ITEM_PIDGEOTITE,
            }
        }
    },
#endif
};
static u16 const sTriggerParams_PIDGEY_MASTERY_102_0[] = 
{
    SPECIES_PIDGEY,
};
static struct RogueQuestTrigger const sTriggers_PIDGEY_MASTERY_102[] = 
{
    {
        .callback = QuestCondition_SpeciesMasteryComplete,
        .passState = QUEST_STATUS_SUCCESS,
        .failState = QUEST_STATUS_FAIL,
        .flags = 0 | QUEST_TRIGGER_ENTER_HALL_OF_FAME,
        .params = sTriggerParams_PIDGEY_MASTERY_102_0,
        .paramCount = ARRAY_COUNT(sTriggerParams_PIDGEY_MASTERY_102_0),
    },
};

static u8 const sTitle_PICHU_MASTERY_103[] = _("Pichu Mastery");
extern const u8 gQuestDescText_PICHU_MASTERY_103[];

#if defined(ROGUE_EXPANSION)
static u8 const sCustomPopupTitle_PICHU_MASTERY_103_3[] = _("Gmax Form");
static u8 const sCustomPopupSubtitle_PICHU_MASTERY_103_3[] = _("{COLOR LIGHT_BLUE}{SHADOW BLUE}Perma Unlocked!");

static struct CustomPopup const sCustomPopup_PICHU_MASTERY_103_3 = 
{
    .titleStr = sCustomPopupTitle_PICHU_MASTERY_103_3,
    .subtitleStr = sCustomPopupSubtitle_PICHU_MASTERY_103_3,
    .speciesIcon = SPECIES_PIKACHU_GIGANTAMAX,
    .soundEffect = 0,
    .fanfare = MUS_RG_OBTAIN_KEY_ITEM,
};
#endif

static struct RogueQuestReward const sRewards_PICHU_MASTERY_103[] = 
{
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_MONEY,
        .perType = {
            .money = {
                .amount = QUEST_REWARD_SMALL_MONEY,
            }
        }
    },
#if defined(ROGUE_EXPANSION)
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_SHOP_ITEM,
        .perType = {
            .shopItem = {
                .item = ITEM_PIKANIUM_Z,
            }
        }
    },
#endif
#if defined(ROGUE_EXPANSION)
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_SHOP_ITEM,
        .perType = {
            .shopItem = {
                .item = ITEM_ALORAICHIUM_Z,
            }
        }
    },
#endif
#if defined(ROGUE_EXPANSION)
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = &sCustomPopup_PICHU_MASTERY_103_3,
        .type = QUEST_REWARD_FLAG,
        .perType = {
            .flag = {
                .flagId = FLAG_ROGUE_STUB,
            }
        }
    },
#endif
};
static u16 const sTriggerParams_PICHU_MASTERY_103_0[] = 
{
    SPECIES_PICHU,
};
static struct RogueQuestTrigger const sTriggers_PICHU_MASTERY_103[] = 
{
    {
        .callback = QuestCondition_SpeciesMasteryComplete,
        .passState = QUEST_STATUS_SUCCESS,
        .failState = QUEST_STATUS_FAIL,
        .flags = 0 | QUEST_TRIGGER_ENTER_HALL_OF_FAME,
        .params = sTriggerParams_PICHU_MASTERY_103_0,
        .paramCount = ARRAY_COUNT(sTriggerParams_PICHU_MASTERY_103_0),
    },
};

static u8 const sTitle_MEOWTH_MASTERY_104[] = _("Meowth Mastery");
extern const u8 gQuestDescText_MEOWTH_MASTERY_104[];

#if defined(ROGUE_EXPANSION)
static u8 const sCustomPopupTitle_MEOWTH_MASTERY_104_1[] = _("Gmax Form");
static u8 const sCustomPopupSubtitle_MEOWTH_MASTERY_104_1[] = _("{COLOR LIGHT_BLUE}{SHADOW BLUE}Perma Unlocked!");

static struct CustomPopup const sCustomPopup_MEOWTH_MASTERY_104_1 = 
{
    .titleStr = sCustomPopupTitle_MEOWTH_MASTERY_104_1,
    .subtitleStr = sCustomPopupSubtitle_MEOWTH_MASTERY_104_1,
    .speciesIcon = SPECIES_MEOWTH_GIGANTAMAX,
    .soundEffect = 0,
    .fanfare = MUS_RG_OBTAIN_KEY_ITEM,
};
#endif

static struct RogueQuestReward const sRewards_MEOWTH_MASTERY_104[] = 
{
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_MONEY,
        .perType = {
            .money = {
                .amount = QUEST_REWARD_SMALL_MONEY,
            }
        }
    },
#if defined(ROGUE_EXPANSION)
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = &sCustomPopup_MEOWTH_MASTERY_104_1,
        .type = QUEST_REWARD_FLAG,
        .perType = {
            .flag = {
                .flagId = FLAG_ROGUE_STUB,
            }
        }
    },
#endif
};
static u16 const sTriggerParams_MEOWTH_MASTERY_104_0[] = 
{
    SPECIES_MEOWTH,
};
static struct RogueQuestTrigger const sTriggers_MEOWTH_MASTERY_104[] = 
{
    {
        .callback = QuestCondition_SpeciesMasteryComplete,
        .passState = QUEST_STATUS_SUCCESS,
        .failState = QUEST_STATUS_FAIL,
        .flags = 0 | QUEST_TRIGGER_ENTER_HALL_OF_FAME,
        .params = sTriggerParams_MEOWTH_MASTERY_104_0,
        .paramCount = ARRAY_COUNT(sTriggerParams_MEOWTH_MASTERY_104_0),
    },
};

static u8 const sTitle_ABRA_MASTERY_105[] = _("Abra Mastery");
extern const u8 gQuestDescText_ABRA_MASTERY_105[];

static struct RogueQuestReward const sRewards_ABRA_MASTERY_105[] = 
{
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_MONEY,
        .perType = {
            .money = {
                .amount = QUEST_REWARD_SMALL_MONEY,
            }
        }
    },
#if defined(ROGUE_EXPANSION)
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_SHOP_ITEM,
        .perType = {
            .shopItem = {
                .item = ITEM_ALAKAZITE,
            }
        }
    },
#endif
};
static u16 const sTriggerParams_ABRA_MASTERY_105_0[] = 
{
    SPECIES_ABRA,
};
static struct RogueQuestTrigger const sTriggers_ABRA_MASTERY_105[] = 
{
    {
        .callback = QuestCondition_SpeciesMasteryComplete,
        .passState = QUEST_STATUS_SUCCESS,
        .failState = QUEST_STATUS_FAIL,
        .flags = 0 | QUEST_TRIGGER_ENTER_HALL_OF_FAME,
        .params = sTriggerParams_ABRA_MASTERY_105_0,
        .paramCount = ARRAY_COUNT(sTriggerParams_ABRA_MASTERY_105_0),
    },
};

static u8 const sTitle_MACHOP_MASTERY_106[] = _("Machop Mastery");
extern const u8 gQuestDescText_MACHOP_MASTERY_106[];

#if defined(ROGUE_EXPANSION)
static u8 const sCustomPopupTitle_MACHOP_MASTERY_106_1[] = _("Gmax Form");
static u8 const sCustomPopupSubtitle_MACHOP_MASTERY_106_1[] = _("{COLOR LIGHT_BLUE}{SHADOW BLUE}Perma Unlocked!");

static struct CustomPopup const sCustomPopup_MACHOP_MASTERY_106_1 = 
{
    .titleStr = sCustomPopupTitle_MACHOP_MASTERY_106_1,
    .subtitleStr = sCustomPopupSubtitle_MACHOP_MASTERY_106_1,
    .speciesIcon = SPECIES_MACHAMP_GIGANTAMAX,
    .soundEffect = 0,
    .fanfare = MUS_RG_OBTAIN_KEY_ITEM,
};
#endif

static struct RogueQuestReward const sRewards_MACHOP_MASTERY_106[] = 
{
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_MONEY,
        .perType = {
            .money = {
                .amount = QUEST_REWARD_SMALL_MONEY,
            }
        }
    },
#if defined(ROGUE_EXPANSION)
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = &sCustomPopup_MACHOP_MASTERY_106_1,
        .type = QUEST_REWARD_FLAG,
        .perType = {
            .flag = {
                .flagId = FLAG_ROGUE_STUB,
            }
        }
    },
#endif
};
static u16 const sTriggerParams_MACHOP_MASTERY_106_0[] = 
{
    SPECIES_MACHOP,
};
static struct RogueQuestTrigger const sTriggers_MACHOP_MASTERY_106[] = 
{
    {
        .callback = QuestCondition_SpeciesMasteryComplete,
        .passState = QUEST_STATUS_SUCCESS,
        .failState = QUEST_STATUS_FAIL,
        .flags = 0 | QUEST_TRIGGER_ENTER_HALL_OF_FAME,
        .params = sTriggerParams_MACHOP_MASTERY_106_0,
        .paramCount = ARRAY_COUNT(sTriggerParams_MACHOP_MASTERY_106_0),
    },
};

static u8 const sTitle_SLOWPOKE_MASTERY_107[] = _("Slowpoke Mastery");
extern const u8 gQuestDescText_SLOWPOKE_MASTERY_107[];

static struct RogueQuestReward const sRewards_SLOWPOKE_MASTERY_107[] = 
{
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_MONEY,
        .perType = {
            .money = {
                .amount = QUEST_REWARD_SMALL_MONEY,
            }
        }
    },
#if defined(ROGUE_EXPANSION)
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_SHOP_ITEM,
        .perType = {
            .shopItem = {
                .item = ITEM_SLOWBRONITE,
            }
        }
    },
#endif
};
static u16 const sTriggerParams_SLOWPOKE_MASTERY_107_0[] = 
{
    SPECIES_SLOWPOKE,
};
static struct RogueQuestTrigger const sTriggers_SLOWPOKE_MASTERY_107[] = 
{
    {
        .callback = QuestCondition_SpeciesMasteryComplete,
        .passState = QUEST_STATUS_SUCCESS,
        .failState = QUEST_STATUS_FAIL,
        .flags = 0 | QUEST_TRIGGER_ENTER_HALL_OF_FAME,
        .params = sTriggerParams_SLOWPOKE_MASTERY_107_0,
        .paramCount = ARRAY_COUNT(sTriggerParams_SLOWPOKE_MASTERY_107_0),
    },
};

static u8 const sTitle_GASTLY_MASTERY_108[] = _("Gastly Mastery");
extern const u8 gQuestDescText_GASTLY_MASTERY_108[];

#if defined(ROGUE_EXPANSION)
static u8 const sCustomPopupTitle_GASTLY_MASTERY_108_2[] = _("Gmax Form");
static u8 const sCustomPopupSubtitle_GASTLY_MASTERY_108_2[] = _("{COLOR LIGHT_BLUE}{SHADOW BLUE}Perma Unlocked!");

static struct CustomPopup const sCustomPopup_GASTLY_MASTERY_108_2 = 
{
    .titleStr = sCustomPopupTitle_GASTLY_MASTERY_108_2,
    .subtitleStr = sCustomPopupSubtitle_GASTLY_MASTERY_108_2,
    .speciesIcon = SPECIES_GENGAR_GIGANTAMAX,
    .soundEffect = 0,
    .fanfare = MUS_RG_OBTAIN_KEY_ITEM,
};
#endif

static struct RogueQuestReward const sRewards_GASTLY_MASTERY_108[] = 
{
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_MONEY,
        .perType = {
            .money = {
                .amount = QUEST_REWARD_SMALL_MONEY,
            }
        }
    },
#if defined(ROGUE_EXPANSION)
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_SHOP_ITEM,
        .perType = {
            .shopItem = {
                .item = ITEM_GENGARITE,
            }
        }
    },
#endif
#if defined(ROGUE_EXPANSION)
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = &sCustomPopup_GASTLY_MASTERY_108_2,
        .type = QUEST_REWARD_FLAG,
        .perType = {
            .flag = {
                .flagId = FLAG_ROGUE_STUB,
            }
        }
    },
#endif
};
static u16 const sTriggerParams_GASTLY_MASTERY_108_0[] = 
{
    SPECIES_GASTLY,
};
static struct RogueQuestTrigger const sTriggers_GASTLY_MASTERY_108[] = 
{
    {
        .callback = QuestCondition_SpeciesMasteryComplete,
        .passState = QUEST_STATUS_SUCCESS,
        .failState = QUEST_STATUS_FAIL,
        .flags = 0 | QUEST_TRIGGER_ENTER_HALL_OF_FAME,
        .params = sTriggerParams_GASTLY_MASTERY_108_0,
        .paramCount = ARRAY_COUNT(sTriggerParams_GASTLY_MASTERY_108_0),
    },
};

static u8 const sTitle_ONIX_MASTERY_109[] = _("Onix Mastery");
extern const u8 gQuestDescText_ONIX_MASTERY_109[];

static struct RogueQuestReward const sRewards_ONIX_MASTERY_109[] = 
{
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_MONEY,
        .perType = {
            .money = {
                .amount = QUEST_REWARD_SMALL_MONEY,
            }
        }
    },
#if defined(ROGUE_EXPANSION)
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_SHOP_ITEM,
        .perType = {
            .shopItem = {
                .item = ITEM_STEELIXITE,
            }
        }
    },
#endif
};
static u16 const sTriggerParams_ONIX_MASTERY_109_0[] = 
{
    SPECIES_ONIX,
};
static struct RogueQuestTrigger const sTriggers_ONIX_MASTERY_109[] = 
{
    {
        .callback = QuestCondition_SpeciesMasteryComplete,
        .passState = QUEST_STATUS_SUCCESS,
        .failState = QUEST_STATUS_FAIL,
        .flags = 0 | QUEST_TRIGGER_ENTER_HALL_OF_FAME,
        .params = sTriggerParams_ONIX_MASTERY_109_0,
        .paramCount = ARRAY_COUNT(sTriggerParams_ONIX_MASTERY_109_0),
    },
};

static u8 const sTitle_KRABBY_MASTERY_110[] = _("Krabby Mastery");
extern const u8 gQuestDescText_KRABBY_MASTERY_110[];

#if defined(ROGUE_EXPANSION)
static u8 const sCustomPopupTitle_KRABBY_MASTERY_110_1[] = _("Gmax Form");
static u8 const sCustomPopupSubtitle_KRABBY_MASTERY_110_1[] = _("{COLOR LIGHT_BLUE}{SHADOW BLUE}Perma Unlocked!");

static struct CustomPopup const sCustomPopup_KRABBY_MASTERY_110_1 = 
{
    .titleStr = sCustomPopupTitle_KRABBY_MASTERY_110_1,
    .subtitleStr = sCustomPopupSubtitle_KRABBY_MASTERY_110_1,
    .speciesIcon = SPECIES_KINGLER_GIGANTAMAX,
    .soundEffect = 0,
    .fanfare = MUS_RG_OBTAIN_KEY_ITEM,
};
#endif

static struct RogueQuestReward const sRewards_KRABBY_MASTERY_110[] = 
{
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_MONEY,
        .perType = {
            .money = {
                .amount = QUEST_REWARD_SMALL_MONEY,
            }
        }
    },
#if defined(ROGUE_EXPANSION)
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = &sCustomPopup_KRABBY_MASTERY_110_1,
        .type = QUEST_REWARD_FLAG,
        .perType = {
            .flag = {
                .flagId = FLAG_ROGUE_STUB,
            }
        }
    },
#endif
};
static u16 const sTriggerParams_KRABBY_MASTERY_110_0[] = 
{
    SPECIES_KRABBY,
};
static struct RogueQuestTrigger const sTriggers_KRABBY_MASTERY_110[] = 
{
    {
        .callback = QuestCondition_SpeciesMasteryComplete,
        .passState = QUEST_STATUS_SUCCESS,
        .failState = QUEST_STATUS_FAIL,
        .flags = 0 | QUEST_TRIGGER_ENTER_HALL_OF_FAME,
        .params = sTriggerParams_KRABBY_MASTERY_110_0,
        .paramCount = ARRAY_COUNT(sTriggerParams_KRABBY_MASTERY_110_0),
    },
};

static u8 const sTitle_KANGASKHAN_MASTERY_111[] = _("Kangaskhan Mastery");
extern const u8 gQuestDescText_KANGASKHAN_MASTERY_111[];

static struct RogueQuestReward const sRewards_KANGASKHAN_MASTERY_111[] = 
{
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_MONEY,
        .perType = {
            .money = {
                .amount = QUEST_REWARD_SMALL_MONEY,
            }
        }
    },
#if defined(ROGUE_EXPANSION)
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_SHOP_ITEM,
        .perType = {
            .shopItem = {
                .item = ITEM_KANGASKHANITE,
            }
        }
    },
#endif
};
static u16 const sTriggerParams_KANGASKHAN_MASTERY_111_0[] = 
{
    SPECIES_KANGASKHAN,
};
static struct RogueQuestTrigger const sTriggers_KANGASKHAN_MASTERY_111[] = 
{
    {
        .callback = QuestCondition_SpeciesMasteryComplete,
        .passState = QUEST_STATUS_SUCCESS,
        .failState = QUEST_STATUS_FAIL,
        .flags = 0 | QUEST_TRIGGER_ENTER_HALL_OF_FAME,
        .params = sTriggerParams_KANGASKHAN_MASTERY_111_0,
        .paramCount = ARRAY_COUNT(sTriggerParams_KANGASKHAN_MASTERY_111_0),
    },
};

static u8 const sTitle_PINSIR_MASTERY_112[] = _("Pinsir Mastery");
extern const u8 gQuestDescText_PINSIR_MASTERY_112[];

static struct RogueQuestReward const sRewards_PINSIR_MASTERY_112[] = 
{
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_MONEY,
        .perType = {
            .money = {
                .amount = QUEST_REWARD_SMALL_MONEY,
            }
        }
    },
#if defined(ROGUE_EXPANSION)
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_SHOP_ITEM,
        .perType = {
            .shopItem = {
                .item = ITEM_PINSIRITE,
            }
        }
    },
#endif
};
static u16 const sTriggerParams_PINSIR_MASTERY_112_0[] = 
{
    SPECIES_PINSIR,
};
static struct RogueQuestTrigger const sTriggers_PINSIR_MASTERY_112[] = 
{
    {
        .callback = QuestCondition_SpeciesMasteryComplete,
        .passState = QUEST_STATUS_SUCCESS,
        .failState = QUEST_STATUS_FAIL,
        .flags = 0 | QUEST_TRIGGER_ENTER_HALL_OF_FAME,
        .params = sTriggerParams_PINSIR_MASTERY_112_0,
        .paramCount = ARRAY_COUNT(sTriggerParams_PINSIR_MASTERY_112_0),
    },
};

static u8 const sTitle_SCYTHER_MASTERY_113[] = _("Scyther Mastery");
extern const u8 gQuestDescText_SCYTHER_MASTERY_113[];

static struct RogueQuestReward const sRewards_SCYTHER_MASTERY_113[] = 
{
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_MONEY,
        .perType = {
            .money = {
                .amount = QUEST_REWARD_SMALL_MONEY,
            }
        }
    },
#if defined(ROGUE_EXPANSION)
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_SHOP_ITEM,
        .perType = {
            .shopItem = {
                .item = ITEM_SCIZORITE,
            }
        }
    },
#endif
};
static u16 const sTriggerParams_SCYTHER_MASTERY_113_0[] = 
{
    SPECIES_SCYTHER,
};
static struct RogueQuestTrigger const sTriggers_SCYTHER_MASTERY_113[] = 
{
    {
        .callback = QuestCondition_SpeciesMasteryComplete,
        .passState = QUEST_STATUS_SUCCESS,
        .failState = QUEST_STATUS_FAIL,
        .flags = 0 | QUEST_TRIGGER_ENTER_HALL_OF_FAME,
        .params = sTriggerParams_SCYTHER_MASTERY_113_0,
        .paramCount = ARRAY_COUNT(sTriggerParams_SCYTHER_MASTERY_113_0),
    },
};

static u8 const sTitle_MAGIKARP_MASTERY_114[] = _("Magikarp Mastery");
extern const u8 gQuestDescText_MAGIKARP_MASTERY_114[];

static struct RogueQuestReward const sRewards_MAGIKARP_MASTERY_114[] = 
{
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_MONEY,
        .perType = {
            .money = {
                .amount = QUEST_REWARD_SMALL_MONEY,
            }
        }
    },
#if defined(ROGUE_EXPANSION)
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_SHOP_ITEM,
        .perType = {
            .shopItem = {
                .item = ITEM_GYARADOSITE,
            }
        }
    },
#endif
};
static u16 const sTriggerParams_MAGIKARP_MASTERY_114_0[] = 
{
    SPECIES_MAGIKARP,
};
static struct RogueQuestTrigger const sTriggers_MAGIKARP_MASTERY_114[] = 
{
    {
        .callback = QuestCondition_SpeciesMasteryComplete,
        .passState = QUEST_STATUS_SUCCESS,
        .failState = QUEST_STATUS_FAIL,
        .flags = 0 | QUEST_TRIGGER_ENTER_HALL_OF_FAME,
        .params = sTriggerParams_MAGIKARP_MASTERY_114_0,
        .paramCount = ARRAY_COUNT(sTriggerParams_MAGIKARP_MASTERY_114_0),
    },
};

static u8 const sTitle_LAPRAS_MASTERY_115[] = _("Lapras Mastery");
extern const u8 gQuestDescText_LAPRAS_MASTERY_115[];

#if defined(ROGUE_EXPANSION)
static u8 const sCustomPopupTitle_LAPRAS_MASTERY_115_1[] = _("Gmax Form");
static u8 const sCustomPopupSubtitle_LAPRAS_MASTERY_115_1[] = _("{COLOR LIGHT_BLUE}{SHADOW BLUE}Perma Unlocked!");

static struct CustomPopup const sCustomPopup_LAPRAS_MASTERY_115_1 = 
{
    .titleStr = sCustomPopupTitle_LAPRAS_MASTERY_115_1,
    .subtitleStr = sCustomPopupSubtitle_LAPRAS_MASTERY_115_1,
    .speciesIcon = SPECIES_LAPRAS_GIGANTAMAX,
    .soundEffect = 0,
    .fanfare = MUS_RG_OBTAIN_KEY_ITEM,
};
#endif

static struct RogueQuestReward const sRewards_LAPRAS_MASTERY_115[] = 
{
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_MONEY,
        .perType = {
            .money = {
                .amount = QUEST_REWARD_SMALL_MONEY,
            }
        }
    },
#if defined(ROGUE_EXPANSION)
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = &sCustomPopup_LAPRAS_MASTERY_115_1,
        .type = QUEST_REWARD_FLAG,
        .perType = {
            .flag = {
                .flagId = FLAG_ROGUE_STUB,
            }
        }
    },
#endif
};
static u16 const sTriggerParams_LAPRAS_MASTERY_115_0[] = 
{
    SPECIES_LAPRAS,
};
static struct RogueQuestTrigger const sTriggers_LAPRAS_MASTERY_115[] = 
{
    {
        .callback = QuestCondition_SpeciesMasteryComplete,
        .passState = QUEST_STATUS_SUCCESS,
        .failState = QUEST_STATUS_FAIL,
        .flags = 0 | QUEST_TRIGGER_ENTER_HALL_OF_FAME,
        .params = sTriggerParams_LAPRAS_MASTERY_115_0,
        .paramCount = ARRAY_COUNT(sTriggerParams_LAPRAS_MASTERY_115_0),
    },
};

static u8 const sTitle_EEVEE_MASTERY_116[] = _("Eevee Mastery");
extern const u8 gQuestDescText_EEVEE_MASTERY_116[];

#if defined(ROGUE_EXPANSION)
static u8 const sCustomPopupTitle_EEVEE_MASTERY_116_2[] = _("Gmax Form");
static u8 const sCustomPopupSubtitle_EEVEE_MASTERY_116_2[] = _("{COLOR LIGHT_BLUE}{SHADOW BLUE}Perma Unlocked!");

static struct CustomPopup const sCustomPopup_EEVEE_MASTERY_116_2 = 
{
    .titleStr = sCustomPopupTitle_EEVEE_MASTERY_116_2,
    .subtitleStr = sCustomPopupSubtitle_EEVEE_MASTERY_116_2,
    .speciesIcon = SPECIES_EEVEE_GIGANTAMAX,
    .soundEffect = 0,
    .fanfare = MUS_RG_OBTAIN_KEY_ITEM,
};
#endif

static struct RogueQuestReward const sRewards_EEVEE_MASTERY_116[] = 
{
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_MONEY,
        .perType = {
            .money = {
                .amount = QUEST_REWARD_SMALL_MONEY,
            }
        }
    },
#if defined(ROGUE_EXPANSION)
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_SHOP_ITEM,
        .perType = {
            .shopItem = {
                .item = ITEM_EEVIUM_Z,
            }
        }
    },
#endif
#if defined(ROGUE_EXPANSION)
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = &sCustomPopup_EEVEE_MASTERY_116_2,
        .type = QUEST_REWARD_FLAG,
        .perType = {
            .flag = {
                .flagId = FLAG_ROGUE_STUB,
            }
        }
    },
#endif
};
static u16 const sTriggerParams_EEVEE_MASTERY_116_0[] = 
{
    SPECIES_EEVEE,
};
static struct RogueQuestTrigger const sTriggers_EEVEE_MASTERY_116[] = 
{
    {
        .callback = QuestCondition_SpeciesMasteryComplete,
        .passState = QUEST_STATUS_SUCCESS,
        .failState = QUEST_STATUS_FAIL,
        .flags = 0 | QUEST_TRIGGER_ENTER_HALL_OF_FAME,
        .params = sTriggerParams_EEVEE_MASTERY_116_0,
        .paramCount = ARRAY_COUNT(sTriggerParams_EEVEE_MASTERY_116_0),
    },
};

static u8 const sTitle_AERODACTYL_MASTERY_117[] = _("Aerodactyl Mastery");
extern const u8 gQuestDescText_AERODACTYL_MASTERY_117[];

static struct RogueQuestReward const sRewards_AERODACTYL_MASTERY_117[] = 
{
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_MONEY,
        .perType = {
            .money = {
                .amount = QUEST_REWARD_SMALL_MONEY,
            }
        }
    },
#if defined(ROGUE_EXPANSION)
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_SHOP_ITEM,
        .perType = {
            .shopItem = {
                .item = ITEM_AERODACTYLITE,
            }
        }
    },
#endif
};
static u16 const sTriggerParams_AERODACTYL_MASTERY_117_0[] = 
{
    SPECIES_AERODACTYL,
};
static struct RogueQuestTrigger const sTriggers_AERODACTYL_MASTERY_117[] = 
{
    {
        .callback = QuestCondition_SpeciesMasteryComplete,
        .passState = QUEST_STATUS_SUCCESS,
        .failState = QUEST_STATUS_FAIL,
        .flags = 0 | QUEST_TRIGGER_ENTER_HALL_OF_FAME,
        .params = sTriggerParams_AERODACTYL_MASTERY_117_0,
        .paramCount = ARRAY_COUNT(sTriggerParams_AERODACTYL_MASTERY_117_0),
    },
};

static u8 const sTitle_SNORLAX_MASTERY_118[] = _("Snorlax Mastery");
extern const u8 gQuestDescText_SNORLAX_MASTERY_118[];

#if defined(ROGUE_EXPANSION)
static u8 const sCustomPopupTitle_SNORLAX_MASTERY_118_2[] = _("Gmax Form");
static u8 const sCustomPopupSubtitle_SNORLAX_MASTERY_118_2[] = _("{COLOR LIGHT_BLUE}{SHADOW BLUE}Perma Unlocked!");

static struct CustomPopup const sCustomPopup_SNORLAX_MASTERY_118_2 = 
{
    .titleStr = sCustomPopupTitle_SNORLAX_MASTERY_118_2,
    .subtitleStr = sCustomPopupSubtitle_SNORLAX_MASTERY_118_2,
    .speciesIcon = SPECIES_SNORLAX_GIGANTAMAX,
    .soundEffect = 0,
    .fanfare = MUS_RG_OBTAIN_KEY_ITEM,
};
#endif

static struct RogueQuestReward const sRewards_SNORLAX_MASTERY_118[] = 
{
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_MONEY,
        .perType = {
            .money = {
                .amount = QUEST_REWARD_SMALL_MONEY,
            }
        }
    },
#if defined(ROGUE_EXPANSION)
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_SHOP_ITEM,
        .perType = {
            .shopItem = {
                .item = ITEM_SNORLIUM_Z,
            }
        }
    },
#endif
#if defined(ROGUE_EXPANSION)
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = &sCustomPopup_SNORLAX_MASTERY_118_2,
        .type = QUEST_REWARD_FLAG,
        .perType = {
            .flag = {
                .flagId = FLAG_ROGUE_STUB,
            }
        }
    },
#endif
};
static u16 const sTriggerParams_SNORLAX_MASTERY_118_0[] = 
{
    SPECIES_SNORLAX,
};
static struct RogueQuestTrigger const sTriggers_SNORLAX_MASTERY_118[] = 
{
    {
        .callback = QuestCondition_SpeciesMasteryComplete,
        .passState = QUEST_STATUS_SUCCESS,
        .failState = QUEST_STATUS_FAIL,
        .flags = 0 | QUEST_TRIGGER_ENTER_HALL_OF_FAME,
        .params = sTriggerParams_SNORLAX_MASTERY_118_0,
        .paramCount = ARRAY_COUNT(sTriggerParams_SNORLAX_MASTERY_118_0),
    },
};

static u8 const sTitle_MEWTWO_MASTERY_119[] = _("Mewtwo Mastery");
extern const u8 gQuestDescText_MEWTWO_MASTERY_119[];

static struct RogueQuestReward const sRewards_MEWTWO_MASTERY_119[] = 
{
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_MONEY,
        .perType = {
            .money = {
                .amount = QUEST_REWARD_SMALL_MONEY,
            }
        }
    },
#if defined(ROGUE_EXPANSION)
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_SHOP_ITEM,
        .perType = {
            .shopItem = {
                .item = ITEM_MEWTWONITE_X,
            }
        }
    },
#endif
#if defined(ROGUE_EXPANSION)
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_SHOP_ITEM,
        .perType = {
            .shopItem = {
                .item = ITEM_MEWTWONITE_Y,
            }
        }
    },
#endif
#if defined(ROGUE_EXPANSION)
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_SHOP_ITEM,
        .perType = {
            .shopItem = {
                .item = ITEM_BERSERK_GENE,
            }
        }
    },
#endif
};
static u16 const sTriggerParams_MEWTWO_MASTERY_119_0[] = 
{
    SPECIES_MEWTWO,
};
static struct RogueQuestTrigger const sTriggers_MEWTWO_MASTERY_119[] = 
{
    {
        .callback = QuestCondition_SpeciesMasteryComplete,
        .passState = QUEST_STATUS_SUCCESS,
        .failState = QUEST_STATUS_FAIL,
        .flags = 0 | QUEST_TRIGGER_ENTER_HALL_OF_FAME,
        .params = sTriggerParams_MEWTWO_MASTERY_119_0,
        .paramCount = ARRAY_COUNT(sTriggerParams_MEWTWO_MASTERY_119_0),
    },
};

static u8 const sTitle_MEW_MASTERY_120[] = _("Mew Mastery");
extern const u8 gQuestDescText_MEW_MASTERY_120[];

static struct RogueQuestReward const sRewards_MEW_MASTERY_120[] = 
{
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_MONEY,
        .perType = {
            .money = {
                .amount = QUEST_REWARD_SMALL_MONEY,
            }
        }
    },
#if defined(ROGUE_EXPANSION)
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_SHOP_ITEM,
        .perType = {
            .shopItem = {
                .item = ITEM_MEWNIUM_Z,
            }
        }
    },
#endif
};
static u16 const sTriggerParams_MEW_MASTERY_120_0[] = 
{
    SPECIES_MEW,
};
static struct RogueQuestTrigger const sTriggers_MEW_MASTERY_120[] = 
{
    {
        .callback = QuestCondition_SpeciesMasteryComplete,
        .passState = QUEST_STATUS_SUCCESS,
        .failState = QUEST_STATUS_FAIL,
        .flags = 0 | QUEST_TRIGGER_ENTER_HALL_OF_FAME,
        .params = sTriggerParams_MEW_MASTERY_120_0,
        .paramCount = ARRAY_COUNT(sTriggerParams_MEW_MASTERY_120_0),
    },
};

static u8 const sTitle_MAREEP_MASTERY_121[] = _("Mareep Mastery");
extern const u8 gQuestDescText_MAREEP_MASTERY_121[];

static struct RogueQuestReward const sRewards_MAREEP_MASTERY_121[] = 
{
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_MONEY,
        .perType = {
            .money = {
                .amount = QUEST_REWARD_SMALL_MONEY,
            }
        }
    },
#if defined(ROGUE_EXPANSION)
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_SHOP_ITEM,
        .perType = {
            .shopItem = {
                .item = ITEM_AMPHAROSITE,
            }
        }
    },
#endif
};
static u16 const sTriggerParams_MAREEP_MASTERY_121_0[] = 
{
    SPECIES_MAREEP,
};
static struct RogueQuestTrigger const sTriggers_MAREEP_MASTERY_121[] = 
{
    {
        .callback = QuestCondition_SpeciesMasteryComplete,
        .passState = QUEST_STATUS_SUCCESS,
        .failState = QUEST_STATUS_FAIL,
        .flags = 0 | QUEST_TRIGGER_ENTER_HALL_OF_FAME,
        .params = sTriggerParams_MAREEP_MASTERY_121_0,
        .paramCount = ARRAY_COUNT(sTriggerParams_MAREEP_MASTERY_121_0),
    },
};

static u8 const sTitle_HERACROSS_MASTERY_122[] = _("Heracross Mastery");
extern const u8 gQuestDescText_HERACROSS_MASTERY_122[];

static struct RogueQuestReward const sRewards_HERACROSS_MASTERY_122[] = 
{
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_MONEY,
        .perType = {
            .money = {
                .amount = QUEST_REWARD_SMALL_MONEY,
            }
        }
    },
#if defined(ROGUE_EXPANSION)
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_SHOP_ITEM,
        .perType = {
            .shopItem = {
                .item = ITEM_HERACRONITE,
            }
        }
    },
#endif
};
static u16 const sTriggerParams_HERACROSS_MASTERY_122_0[] = 
{
    SPECIES_HERACROSS,
};
static struct RogueQuestTrigger const sTriggers_HERACROSS_MASTERY_122[] = 
{
    {
        .callback = QuestCondition_SpeciesMasteryComplete,
        .passState = QUEST_STATUS_SUCCESS,
        .failState = QUEST_STATUS_FAIL,
        .flags = 0 | QUEST_TRIGGER_ENTER_HALL_OF_FAME,
        .params = sTriggerParams_HERACROSS_MASTERY_122_0,
        .paramCount = ARRAY_COUNT(sTriggerParams_HERACROSS_MASTERY_122_0),
    },
};

static u8 const sTitle_HOUNDOUR_MASTERY_123[] = _("Houndour Mastery");
extern const u8 gQuestDescText_HOUNDOUR_MASTERY_123[];

static struct RogueQuestReward const sRewards_HOUNDOUR_MASTERY_123[] = 
{
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_MONEY,
        .perType = {
            .money = {
                .amount = QUEST_REWARD_SMALL_MONEY,
            }
        }
    },
#if defined(ROGUE_EXPANSION)
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_SHOP_ITEM,
        .perType = {
            .shopItem = {
                .item = ITEM_HOUNDOOMINITE,
            }
        }
    },
#endif
};
static u16 const sTriggerParams_HOUNDOUR_MASTERY_123_0[] = 
{
    SPECIES_HOUNDOUR,
};
static struct RogueQuestTrigger const sTriggers_HOUNDOUR_MASTERY_123[] = 
{
    {
        .callback = QuestCondition_SpeciesMasteryComplete,
        .passState = QUEST_STATUS_SUCCESS,
        .failState = QUEST_STATUS_FAIL,
        .flags = 0 | QUEST_TRIGGER_ENTER_HALL_OF_FAME,
        .params = sTriggerParams_HOUNDOUR_MASTERY_123_0,
        .paramCount = ARRAY_COUNT(sTriggerParams_HOUNDOUR_MASTERY_123_0),
    },
};

static u8 const sTitle_LARVITAR_MASTERY_124[] = _("Larvitar Mastery");
extern const u8 gQuestDescText_LARVITAR_MASTERY_124[];

static struct RogueQuestReward const sRewards_LARVITAR_MASTERY_124[] = 
{
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_MONEY,
        .perType = {
            .money = {
                .amount = QUEST_REWARD_SMALL_MONEY,
            }
        }
    },
#if defined(ROGUE_EXPANSION)
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_SHOP_ITEM,
        .perType = {
            .shopItem = {
                .item = ITEM_TYRANITARITE,
            }
        }
    },
#endif
};
static u16 const sTriggerParams_LARVITAR_MASTERY_124_0[] = 
{
    SPECIES_LARVITAR,
};
static struct RogueQuestTrigger const sTriggers_LARVITAR_MASTERY_124[] = 
{
    {
        .callback = QuestCondition_SpeciesMasteryComplete,
        .passState = QUEST_STATUS_SUCCESS,
        .failState = QUEST_STATUS_FAIL,
        .flags = 0 | QUEST_TRIGGER_ENTER_HALL_OF_FAME,
        .params = sTriggerParams_LARVITAR_MASTERY_124_0,
        .paramCount = ARRAY_COUNT(sTriggerParams_LARVITAR_MASTERY_124_0),
    },
};

static u8 const sTitle_TREECKO_MASTERY_125[] = _("Treecko Mastery");
extern const u8 gQuestDescText_TREECKO_MASTERY_125[];

static struct RogueQuestReward const sRewards_TREECKO_MASTERY_125[] = 
{
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_MONEY,
        .perType = {
            .money = {
                .amount = QUEST_REWARD_SMALL_MONEY,
            }
        }
    },
#if defined(ROGUE_EXPANSION)
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_SHOP_ITEM,
        .perType = {
            .shopItem = {
                .item = ITEM_SCEPTILITE,
            }
        }
    },
#endif
};
static u16 const sTriggerParams_TREECKO_MASTERY_125_0[] = 
{
    SPECIES_TREECKO,
};
static struct RogueQuestTrigger const sTriggers_TREECKO_MASTERY_125[] = 
{
    {
        .callback = QuestCondition_SpeciesMasteryComplete,
        .passState = QUEST_STATUS_SUCCESS,
        .failState = QUEST_STATUS_FAIL,
        .flags = 0 | QUEST_TRIGGER_ENTER_HALL_OF_FAME,
        .params = sTriggerParams_TREECKO_MASTERY_125_0,
        .paramCount = ARRAY_COUNT(sTriggerParams_TREECKO_MASTERY_125_0),
    },
};

static u8 const sTitle_TORCHIC_MASTERY_126[] = _("Torchic Mastery");
extern const u8 gQuestDescText_TORCHIC_MASTERY_126[];

static struct RogueQuestReward const sRewards_TORCHIC_MASTERY_126[] = 
{
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_MONEY,
        .perType = {
            .money = {
                .amount = QUEST_REWARD_SMALL_MONEY,
            }
        }
    },
#if defined(ROGUE_EXPANSION)
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_SHOP_ITEM,
        .perType = {
            .shopItem = {
                .item = ITEM_BLAZIKENITE,
            }
        }
    },
#endif
};
static u16 const sTriggerParams_TORCHIC_MASTERY_126_0[] = 
{
    SPECIES_TORCHIC,
};
static struct RogueQuestTrigger const sTriggers_TORCHIC_MASTERY_126[] = 
{
    {
        .callback = QuestCondition_SpeciesMasteryComplete,
        .passState = QUEST_STATUS_SUCCESS,
        .failState = QUEST_STATUS_FAIL,
        .flags = 0 | QUEST_TRIGGER_ENTER_HALL_OF_FAME,
        .params = sTriggerParams_TORCHIC_MASTERY_126_0,
        .paramCount = ARRAY_COUNT(sTriggerParams_TORCHIC_MASTERY_126_0),
    },
};

static u8 const sTitle_MUDKIP_MASTERY_127[] = _("Mudkip Mastery");
extern const u8 gQuestDescText_MUDKIP_MASTERY_127[];

static struct RogueQuestReward const sRewards_MUDKIP_MASTERY_127[] = 
{
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_MONEY,
        .perType = {
            .money = {
                .amount = QUEST_REWARD_SMALL_MONEY,
            }
        }
    },
#if defined(ROGUE_EXPANSION)
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_SHOP_ITEM,
        .perType = {
            .shopItem = {
                .item = ITEM_SWAMPERTITE,
            }
        }
    },
#endif
};
static u16 const sTriggerParams_MUDKIP_MASTERY_127_0[] = 
{
    SPECIES_MUDKIP,
};
static struct RogueQuestTrigger const sTriggers_MUDKIP_MASTERY_127[] = 
{
    {
        .callback = QuestCondition_SpeciesMasteryComplete,
        .passState = QUEST_STATUS_SUCCESS,
        .failState = QUEST_STATUS_FAIL,
        .flags = 0 | QUEST_TRIGGER_ENTER_HALL_OF_FAME,
        .params = sTriggerParams_MUDKIP_MASTERY_127_0,
        .paramCount = ARRAY_COUNT(sTriggerParams_MUDKIP_MASTERY_127_0),
    },
};

static u8 const sTitle_RALTS_MASTERY_128[] = _("Ralts Mastery");
extern const u8 gQuestDescText_RALTS_MASTERY_128[];

static struct RogueQuestReward const sRewards_RALTS_MASTERY_128[] = 
{
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_MONEY,
        .perType = {
            .money = {
                .amount = QUEST_REWARD_SMALL_MONEY,
            }
        }
    },
#if defined(ROGUE_EXPANSION)
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_SHOP_ITEM,
        .perType = {
            .shopItem = {
                .item = ITEM_GARDEVOIRITE,
            }
        }
    },
#endif
#if defined(ROGUE_EXPANSION)
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_SHOP_ITEM,
        .perType = {
            .shopItem = {
                .item = ITEM_GALLADITE,
            }
        }
    },
#endif
};
static u16 const sTriggerParams_RALTS_MASTERY_128_0[] = 
{
    SPECIES_RALTS,
};
static struct RogueQuestTrigger const sTriggers_RALTS_MASTERY_128[] = 
{
    {
        .callback = QuestCondition_SpeciesMasteryComplete,
        .passState = QUEST_STATUS_SUCCESS,
        .failState = QUEST_STATUS_FAIL,
        .flags = 0 | QUEST_TRIGGER_ENTER_HALL_OF_FAME,
        .params = sTriggerParams_RALTS_MASTERY_128_0,
        .paramCount = ARRAY_COUNT(sTriggerParams_RALTS_MASTERY_128_0),
    },
};

static u8 const sTitle_SABLEYE_MASTERY_129[] = _("Sableye Mastery");
extern const u8 gQuestDescText_SABLEYE_MASTERY_129[];

static struct RogueQuestReward const sRewards_SABLEYE_MASTERY_129[] = 
{
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_MONEY,
        .perType = {
            .money = {
                .amount = QUEST_REWARD_SMALL_MONEY,
            }
        }
    },
#if defined(ROGUE_EXPANSION)
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_SHOP_ITEM,
        .perType = {
            .shopItem = {
                .item = ITEM_SABLENITE,
            }
        }
    },
#endif
};
static u16 const sTriggerParams_SABLEYE_MASTERY_129_0[] = 
{
    SPECIES_SABLEYE,
};
static struct RogueQuestTrigger const sTriggers_SABLEYE_MASTERY_129[] = 
{
    {
        .callback = QuestCondition_SpeciesMasteryComplete,
        .passState = QUEST_STATUS_SUCCESS,
        .failState = QUEST_STATUS_FAIL,
        .flags = 0 | QUEST_TRIGGER_ENTER_HALL_OF_FAME,
        .params = sTriggerParams_SABLEYE_MASTERY_129_0,
        .paramCount = ARRAY_COUNT(sTriggerParams_SABLEYE_MASTERY_129_0),
    },
};

static u8 const sTitle_MAWILE_MASTERY_130[] = _("Mawile Mastery");
extern const u8 gQuestDescText_MAWILE_MASTERY_130[];

static struct RogueQuestReward const sRewards_MAWILE_MASTERY_130[] = 
{
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_MONEY,
        .perType = {
            .money = {
                .amount = QUEST_REWARD_SMALL_MONEY,
            }
        }
    },
#if defined(ROGUE_EXPANSION)
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_SHOP_ITEM,
        .perType = {
            .shopItem = {
                .item = ITEM_MAWILITE,
            }
        }
    },
#endif
};
static u16 const sTriggerParams_MAWILE_MASTERY_130_0[] = 
{
    SPECIES_MAWILE,
};
static struct RogueQuestTrigger const sTriggers_MAWILE_MASTERY_130[] = 
{
    {
        .callback = QuestCondition_SpeciesMasteryComplete,
        .passState = QUEST_STATUS_SUCCESS,
        .failState = QUEST_STATUS_FAIL,
        .flags = 0 | QUEST_TRIGGER_ENTER_HALL_OF_FAME,
        .params = sTriggerParams_MAWILE_MASTERY_130_0,
        .paramCount = ARRAY_COUNT(sTriggerParams_MAWILE_MASTERY_130_0),
    },
};

static u8 const sTitle_ARON_MASTERY_131[] = _("Aron Mastery");
extern const u8 gQuestDescText_ARON_MASTERY_131[];

static struct RogueQuestReward const sRewards_ARON_MASTERY_131[] = 
{
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_MONEY,
        .perType = {
            .money = {
                .amount = QUEST_REWARD_SMALL_MONEY,
            }
        }
    },
#if defined(ROGUE_EXPANSION)
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_SHOP_ITEM,
        .perType = {
            .shopItem = {
                .item = ITEM_AGGRONITE,
            }
        }
    },
#endif
};
static u16 const sTriggerParams_ARON_MASTERY_131_0[] = 
{
    SPECIES_ARON,
};
static struct RogueQuestTrigger const sTriggers_ARON_MASTERY_131[] = 
{
    {
        .callback = QuestCondition_SpeciesMasteryComplete,
        .passState = QUEST_STATUS_SUCCESS,
        .failState = QUEST_STATUS_FAIL,
        .flags = 0 | QUEST_TRIGGER_ENTER_HALL_OF_FAME,
        .params = sTriggerParams_ARON_MASTERY_131_0,
        .paramCount = ARRAY_COUNT(sTriggerParams_ARON_MASTERY_131_0),
    },
};

static u8 const sTitle_MEDITITE_MASTERY_132[] = _("Meditite Mastery");
extern const u8 gQuestDescText_MEDITITE_MASTERY_132[];

static struct RogueQuestReward const sRewards_MEDITITE_MASTERY_132[] = 
{
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_MONEY,
        .perType = {
            .money = {
                .amount = QUEST_REWARD_SMALL_MONEY,
            }
        }
    },
#if defined(ROGUE_EXPANSION)
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_SHOP_ITEM,
        .perType = {
            .shopItem = {
                .item = ITEM_MEDICHAMITE,
            }
        }
    },
#endif
};
static u16 const sTriggerParams_MEDITITE_MASTERY_132_0[] = 
{
    SPECIES_MEDITITE,
};
static struct RogueQuestTrigger const sTriggers_MEDITITE_MASTERY_132[] = 
{
    {
        .callback = QuestCondition_SpeciesMasteryComplete,
        .passState = QUEST_STATUS_SUCCESS,
        .failState = QUEST_STATUS_FAIL,
        .flags = 0 | QUEST_TRIGGER_ENTER_HALL_OF_FAME,
        .params = sTriggerParams_MEDITITE_MASTERY_132_0,
        .paramCount = ARRAY_COUNT(sTriggerParams_MEDITITE_MASTERY_132_0),
    },
};

static u8 const sTitle_ELECTRIKE_MASTERY_133[] = _("Electrike Mastery");
extern const u8 gQuestDescText_ELECTRIKE_MASTERY_133[];

static struct RogueQuestReward const sRewards_ELECTRIKE_MASTERY_133[] = 
{
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_MONEY,
        .perType = {
            .money = {
                .amount = QUEST_REWARD_SMALL_MONEY,
            }
        }
    },
#if defined(ROGUE_EXPANSION)
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_SHOP_ITEM,
        .perType = {
            .shopItem = {
                .item = ITEM_MANECTITE,
            }
        }
    },
#endif
};
static u16 const sTriggerParams_ELECTRIKE_MASTERY_133_0[] = 
{
    SPECIES_ELECTRIKE,
};
static struct RogueQuestTrigger const sTriggers_ELECTRIKE_MASTERY_133[] = 
{
    {
        .callback = QuestCondition_SpeciesMasteryComplete,
        .passState = QUEST_STATUS_SUCCESS,
        .failState = QUEST_STATUS_FAIL,
        .flags = 0 | QUEST_TRIGGER_ENTER_HALL_OF_FAME,
        .params = sTriggerParams_ELECTRIKE_MASTERY_133_0,
        .paramCount = ARRAY_COUNT(sTriggerParams_ELECTRIKE_MASTERY_133_0),
    },
};

static u8 const sTitle_CARVANHA_MASTERY_134[] = _("Carvanha Mastery");
extern const u8 gQuestDescText_CARVANHA_MASTERY_134[];

static struct RogueQuestReward const sRewards_CARVANHA_MASTERY_134[] = 
{
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_MONEY,
        .perType = {
            .money = {
                .amount = QUEST_REWARD_SMALL_MONEY,
            }
        }
    },
#if defined(ROGUE_EXPANSION)
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_SHOP_ITEM,
        .perType = {
            .shopItem = {
                .item = ITEM_SHARPEDONITE,
            }
        }
    },
#endif
};
static u16 const sTriggerParams_CARVANHA_MASTERY_134_0[] = 
{
    SPECIES_CARVANHA,
};
static struct RogueQuestTrigger const sTriggers_CARVANHA_MASTERY_134[] = 
{
    {
        .callback = QuestCondition_SpeciesMasteryComplete,
        .passState = QUEST_STATUS_SUCCESS,
        .failState = QUEST_STATUS_FAIL,
        .flags = 0 | QUEST_TRIGGER_ENTER_HALL_OF_FAME,
        .params = sTriggerParams_CARVANHA_MASTERY_134_0,
        .paramCount = ARRAY_COUNT(sTriggerParams_CARVANHA_MASTERY_134_0),
    },
};

static u8 const sTitle_NUMEL_MASTERY_135[] = _("Numel Mastery");
extern const u8 gQuestDescText_NUMEL_MASTERY_135[];

static struct RogueQuestReward const sRewards_NUMEL_MASTERY_135[] = 
{
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_MONEY,
        .perType = {
            .money = {
                .amount = QUEST_REWARD_SMALL_MONEY,
            }
        }
    },
#if defined(ROGUE_EXPANSION)
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_SHOP_ITEM,
        .perType = {
            .shopItem = {
                .item = ITEM_CAMERUPTITE,
            }
        }
    },
#endif
};
static u16 const sTriggerParams_NUMEL_MASTERY_135_0[] = 
{
    SPECIES_NUMEL,
};
static struct RogueQuestTrigger const sTriggers_NUMEL_MASTERY_135[] = 
{
    {
        .callback = QuestCondition_SpeciesMasteryComplete,
        .passState = QUEST_STATUS_SUCCESS,
        .failState = QUEST_STATUS_FAIL,
        .flags = 0 | QUEST_TRIGGER_ENTER_HALL_OF_FAME,
        .params = sTriggerParams_NUMEL_MASTERY_135_0,
        .paramCount = ARRAY_COUNT(sTriggerParams_NUMEL_MASTERY_135_0),
    },
};

static u8 const sTitle_SWABLU_MASTERY_136[] = _("Swablu Mastery");
extern const u8 gQuestDescText_SWABLU_MASTERY_136[];

static struct RogueQuestReward const sRewards_SWABLU_MASTERY_136[] = 
{
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_MONEY,
        .perType = {
            .money = {
                .amount = QUEST_REWARD_SMALL_MONEY,
            }
        }
    },
#if defined(ROGUE_EXPANSION)
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_SHOP_ITEM,
        .perType = {
            .shopItem = {
                .item = ITEM_ALTARIANITE,
            }
        }
    },
#endif
};
static u16 const sTriggerParams_SWABLU_MASTERY_136_0[] = 
{
    SPECIES_SWABLU,
};
static struct RogueQuestTrigger const sTriggers_SWABLU_MASTERY_136[] = 
{
    {
        .callback = QuestCondition_SpeciesMasteryComplete,
        .passState = QUEST_STATUS_SUCCESS,
        .failState = QUEST_STATUS_FAIL,
        .flags = 0 | QUEST_TRIGGER_ENTER_HALL_OF_FAME,
        .params = sTriggerParams_SWABLU_MASTERY_136_0,
        .paramCount = ARRAY_COUNT(sTriggerParams_SWABLU_MASTERY_136_0),
    },
};

static u8 const sTitle_SHUPPET_MASTERY_137[] = _("Shuppet Mastery");
extern const u8 gQuestDescText_SHUPPET_MASTERY_137[];

static struct RogueQuestReward const sRewards_SHUPPET_MASTERY_137[] = 
{
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_MONEY,
        .perType = {
            .money = {
                .amount = QUEST_REWARD_SMALL_MONEY,
            }
        }
    },
#if defined(ROGUE_EXPANSION)
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_SHOP_ITEM,
        .perType = {
            .shopItem = {
                .item = ITEM_BANETTITE,
            }
        }
    },
#endif
};
static u16 const sTriggerParams_SHUPPET_MASTERY_137_0[] = 
{
    SPECIES_SHUPPET,
};
static struct RogueQuestTrigger const sTriggers_SHUPPET_MASTERY_137[] = 
{
    {
        .callback = QuestCondition_SpeciesMasteryComplete,
        .passState = QUEST_STATUS_SUCCESS,
        .failState = QUEST_STATUS_FAIL,
        .flags = 0 | QUEST_TRIGGER_ENTER_HALL_OF_FAME,
        .params = sTriggerParams_SHUPPET_MASTERY_137_0,
        .paramCount = ARRAY_COUNT(sTriggerParams_SHUPPET_MASTERY_137_0),
    },
};

static u8 const sTitle_ABSOL_MASTERY_138[] = _("Absol Mastery");
extern const u8 gQuestDescText_ABSOL_MASTERY_138[];

static struct RogueQuestReward const sRewards_ABSOL_MASTERY_138[] = 
{
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_MONEY,
        .perType = {
            .money = {
                .amount = QUEST_REWARD_SMALL_MONEY,
            }
        }
    },
#if defined(ROGUE_EXPANSION)
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_SHOP_ITEM,
        .perType = {
            .shopItem = {
                .item = ITEM_ABSOLITE,
            }
        }
    },
#endif
};
static u16 const sTriggerParams_ABSOL_MASTERY_138_0[] = 
{
    SPECIES_ABSOL,
};
static struct RogueQuestTrigger const sTriggers_ABSOL_MASTERY_138[] = 
{
    {
        .callback = QuestCondition_SpeciesMasteryComplete,
        .passState = QUEST_STATUS_SUCCESS,
        .failState = QUEST_STATUS_FAIL,
        .flags = 0 | QUEST_TRIGGER_ENTER_HALL_OF_FAME,
        .params = sTriggerParams_ABSOL_MASTERY_138_0,
        .paramCount = ARRAY_COUNT(sTriggerParams_ABSOL_MASTERY_138_0),
    },
};

static u8 const sTitle_SNORUNT_MASTERY_139[] = _("Snorunt Mastery");
extern const u8 gQuestDescText_SNORUNT_MASTERY_139[];

static struct RogueQuestReward const sRewards_SNORUNT_MASTERY_139[] = 
{
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_MONEY,
        .perType = {
            .money = {
                .amount = QUEST_REWARD_SMALL_MONEY,
            }
        }
    },
#if defined(ROGUE_EXPANSION)
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_SHOP_ITEM,
        .perType = {
            .shopItem = {
                .item = ITEM_GLALITITE,
            }
        }
    },
#endif
};
static u16 const sTriggerParams_SNORUNT_MASTERY_139_0[] = 
{
    SPECIES_SNORUNT,
};
static struct RogueQuestTrigger const sTriggers_SNORUNT_MASTERY_139[] = 
{
    {
        .callback = QuestCondition_SpeciesMasteryComplete,
        .passState = QUEST_STATUS_SUCCESS,
        .failState = QUEST_STATUS_FAIL,
        .flags = 0 | QUEST_TRIGGER_ENTER_HALL_OF_FAME,
        .params = sTriggerParams_SNORUNT_MASTERY_139_0,
        .paramCount = ARRAY_COUNT(sTriggerParams_SNORUNT_MASTERY_139_0),
    },
};

static u8 const sTitle_BAGON_MASTERY_140[] = _("Bagon Mastery");
extern const u8 gQuestDescText_BAGON_MASTERY_140[];

static struct RogueQuestReward const sRewards_BAGON_MASTERY_140[] = 
{
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_MONEY,
        .perType = {
            .money = {
                .amount = QUEST_REWARD_SMALL_MONEY,
            }
        }
    },
#if defined(ROGUE_EXPANSION)
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_SHOP_ITEM,
        .perType = {
            .shopItem = {
                .item = ITEM_SALAMENCITE,
            }
        }
    },
#endif
};
static u16 const sTriggerParams_BAGON_MASTERY_140_0[] = 
{
    SPECIES_BAGON,
};
static struct RogueQuestTrigger const sTriggers_BAGON_MASTERY_140[] = 
{
    {
        .callback = QuestCondition_SpeciesMasteryComplete,
        .passState = QUEST_STATUS_SUCCESS,
        .failState = QUEST_STATUS_FAIL,
        .flags = 0 | QUEST_TRIGGER_ENTER_HALL_OF_FAME,
        .params = sTriggerParams_BAGON_MASTERY_140_0,
        .paramCount = ARRAY_COUNT(sTriggerParams_BAGON_MASTERY_140_0),
    },
};

static u8 const sTitle_BELDUM_MASTERY_141[] = _("Beldum Mastery");
extern const u8 gQuestDescText_BELDUM_MASTERY_141[];

static struct RogueQuestReward const sRewards_BELDUM_MASTERY_141[] = 
{
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_MONEY,
        .perType = {
            .money = {
                .amount = QUEST_REWARD_SMALL_MONEY,
            }
        }
    },
#if defined(ROGUE_EXPANSION)
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_SHOP_ITEM,
        .perType = {
            .shopItem = {
                .item = ITEM_METAGROSSITE,
            }
        }
    },
#endif
};
static u16 const sTriggerParams_BELDUM_MASTERY_141_0[] = 
{
    SPECIES_BELDUM,
};
static struct RogueQuestTrigger const sTriggers_BELDUM_MASTERY_141[] = 
{
    {
        .callback = QuestCondition_SpeciesMasteryComplete,
        .passState = QUEST_STATUS_SUCCESS,
        .failState = QUEST_STATUS_FAIL,
        .flags = 0 | QUEST_TRIGGER_ENTER_HALL_OF_FAME,
        .params = sTriggerParams_BELDUM_MASTERY_141_0,
        .paramCount = ARRAY_COUNT(sTriggerParams_BELDUM_MASTERY_141_0),
    },
};

static u8 const sTitle_LATI_MASTERY_142[] = _("Lati Mastery");
extern const u8 gQuestDescText_LATI_MASTERY_142[];

static struct RogueQuestReward const sRewards_LATI_MASTERY_142[] = 
{
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_SHOP_ITEM,
        .perType = {
            .shopItem = {
                .item = ITEM_SOUL_DEW,
            }
        }
    },
};
static u16 const sTriggerParams_LATI_MASTERY_142_0[] = 
{
    SPECIES_LATIAS,
    SPECIES_LATIOS,
};
static struct RogueQuestTrigger const sTriggers_LATI_MASTERY_142[] = 
{
    {
        .callback = QuestCondition_SpeciesMasteryComplete,
        .passState = QUEST_STATUS_SUCCESS,
        .failState = QUEST_STATUS_FAIL,
        .flags = 0 | QUEST_TRIGGER_ENTER_HALL_OF_FAME,
        .params = sTriggerParams_LATI_MASTERY_142_0,
        .paramCount = ARRAY_COUNT(sTriggerParams_LATI_MASTERY_142_0),
    },
};

#if defined(ROGUE_EXPANSION)
static u8 const sTitle_LATIAS_MASTERY_143[] = _("Latias Mastery");
extern const u8 gQuestDescText_LATIAS_MASTERY_143[];

static struct RogueQuestReward const sRewards_LATIAS_MASTERY_143[] = 
{
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_MONEY,
        .perType = {
            .money = {
                .amount = QUEST_REWARD_SMALL_MONEY,
            }
        }
    },
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_SHOP_ITEM,
        .perType = {
            .shopItem = {
                .item = ITEM_LATIASITE,
            }
        }
    },
};
static u16 const sTriggerParams_LATIAS_MASTERY_143_0[] = 
{
    SPECIES_LATIAS,
};
static struct RogueQuestTrigger const sTriggers_LATIAS_MASTERY_143[] = 
{
    {
        .callback = QuestCondition_SpeciesMasteryComplete,
        .passState = QUEST_STATUS_SUCCESS,
        .failState = QUEST_STATUS_FAIL,
        .flags = 0 | QUEST_TRIGGER_ENTER_HALL_OF_FAME,
        .params = sTriggerParams_LATIAS_MASTERY_143_0,
        .paramCount = ARRAY_COUNT(sTriggerParams_LATIAS_MASTERY_143_0),
    },
};
#endif

#if defined(ROGUE_EXPANSION)
static u8 const sTitle_LATIOS_MASTERY_144[] = _("Latios Mastery");
extern const u8 gQuestDescText_LATIOS_MASTERY_144[];

static struct RogueQuestReward const sRewards_LATIOS_MASTERY_144[] = 
{
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_MONEY,
        .perType = {
            .money = {
                .amount = QUEST_REWARD_SMALL_MONEY,
            }
        }
    },
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_SHOP_ITEM,
        .perType = {
            .shopItem = {
                .item = ITEM_LATIOSITE,
            }
        }
    },
};
static u16 const sTriggerParams_LATIOS_MASTERY_144_0[] = 
{
    SPECIES_LATIOS,
};
static struct RogueQuestTrigger const sTriggers_LATIOS_MASTERY_144[] = 
{
    {
        .callback = QuestCondition_SpeciesMasteryComplete,
        .passState = QUEST_STATUS_SUCCESS,
        .failState = QUEST_STATUS_FAIL,
        .flags = 0 | QUEST_TRIGGER_ENTER_HALL_OF_FAME,
        .params = sTriggerParams_LATIOS_MASTERY_144_0,
        .paramCount = ARRAY_COUNT(sTriggerParams_LATIOS_MASTERY_144_0),
    },
};
#endif

static u8 const sTitle_KYOGRE_MASTERY_145[] = _("Kyogre Mastery");
extern const u8 gQuestDescText_KYOGRE_MASTERY_145[];

static struct RogueQuestReward const sRewards_KYOGRE_MASTERY_145[] = 
{
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_MONEY,
        .perType = {
            .money = {
                .amount = QUEST_REWARD_SMALL_MONEY,
            }
        }
    },
#if defined(ROGUE_EXPANSION)
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_SHOP_ITEM,
        .perType = {
            .shopItem = {
                .item = ITEM_BLUE_ORB,
            }
        }
    },
#endif
};
static u16 const sTriggerParams_KYOGRE_MASTERY_145_0[] = 
{
    SPECIES_KYOGRE,
};
static struct RogueQuestTrigger const sTriggers_KYOGRE_MASTERY_145[] = 
{
    {
        .callback = QuestCondition_SpeciesMasteryComplete,
        .passState = QUEST_STATUS_SUCCESS,
        .failState = QUEST_STATUS_FAIL,
        .flags = 0 | QUEST_TRIGGER_ENTER_HALL_OF_FAME,
        .params = sTriggerParams_KYOGRE_MASTERY_145_0,
        .paramCount = ARRAY_COUNT(sTriggerParams_KYOGRE_MASTERY_145_0),
    },
};

static u8 const sTitle_GROUDON_MASTERY_146[] = _("Groudon Mastery");
extern const u8 gQuestDescText_GROUDON_MASTERY_146[];

static struct RogueQuestReward const sRewards_GROUDON_MASTERY_146[] = 
{
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_MONEY,
        .perType = {
            .money = {
                .amount = QUEST_REWARD_SMALL_MONEY,
            }
        }
    },
#if defined(ROGUE_EXPANSION)
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_SHOP_ITEM,
        .perType = {
            .shopItem = {
                .item = ITEM_RED_ORB,
            }
        }
    },
#endif
};
static u16 const sTriggerParams_GROUDON_MASTERY_146_0[] = 
{
    SPECIES_GROUDON,
};
static struct RogueQuestTrigger const sTriggers_GROUDON_MASTERY_146[] = 
{
    {
        .callback = QuestCondition_SpeciesMasteryComplete,
        .passState = QUEST_STATUS_SUCCESS,
        .failState = QUEST_STATUS_FAIL,
        .flags = 0 | QUEST_TRIGGER_ENTER_HALL_OF_FAME,
        .params = sTriggerParams_GROUDON_MASTERY_146_0,
        .paramCount = ARRAY_COUNT(sTriggerParams_GROUDON_MASTERY_146_0),
    },
};

static u8 const sTitle_DEOXYS_MASTERY_147[] = _("Deoxys Mastery");
extern const u8 gQuestDescText_DEOXYS_MASTERY_147[];

static struct RogueQuestReward const sRewards_DEOXYS_MASTERY_147[] = 
{
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_MONEY,
        .perType = {
            .money = {
                .amount = QUEST_REWARD_SMALL_MONEY,
            }
        }
    },
#if defined(ROGUE_EXPANSION)
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_ITEM,
        .perType = {
            .item = {
                .item = ITEM_METEORITE,
                .count = 1,
            }
        }
    },
#endif
};
static u16 const sTriggerParams_DEOXYS_MASTERY_147_0[] = 
{
    SPECIES_DEOXYS,
};
static struct RogueQuestTrigger const sTriggers_DEOXYS_MASTERY_147[] = 
{
    {
        .callback = QuestCondition_SpeciesMasteryComplete,
        .passState = QUEST_STATUS_SUCCESS,
        .failState = QUEST_STATUS_FAIL,
        .flags = 0 | QUEST_TRIGGER_ENTER_HALL_OF_FAME,
        .params = sTriggerParams_DEOXYS_MASTERY_147_0,
        .paramCount = ARRAY_COUNT(sTriggerParams_DEOXYS_MASTERY_147_0),
    },
};

#if defined(ROGUE_EXPANSION)
static u8 const sTitle_BUNEARY_MASTERY_148[] = _("Buneary Mastery");
extern const u8 gQuestDescText_BUNEARY_MASTERY_148[];

static struct RogueQuestReward const sRewards_BUNEARY_MASTERY_148[] = 
{
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_MONEY,
        .perType = {
            .money = {
                .amount = QUEST_REWARD_SMALL_MONEY,
            }
        }
    },
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_SHOP_ITEM,
        .perType = {
            .shopItem = {
                .item = ITEM_LOPUNNITE,
            }
        }
    },
};
static u16 const sTriggerParams_BUNEARY_MASTERY_148_0[] = 
{
    SPECIES_BUNEARY,
};
static struct RogueQuestTrigger const sTriggers_BUNEARY_MASTERY_148[] = 
{
    {
        .callback = QuestCondition_SpeciesMasteryComplete,
        .passState = QUEST_STATUS_SUCCESS,
        .failState = QUEST_STATUS_FAIL,
        .flags = 0 | QUEST_TRIGGER_ENTER_HALL_OF_FAME,
        .params = sTriggerParams_BUNEARY_MASTERY_148_0,
        .paramCount = ARRAY_COUNT(sTriggerParams_BUNEARY_MASTERY_148_0),
    },
};
#endif

#if defined(ROGUE_EXPANSION)
static u8 const sTitle_GIBLE_MASTERY_149[] = _("Gible Mastery");
extern const u8 gQuestDescText_GIBLE_MASTERY_149[];

static struct RogueQuestReward const sRewards_GIBLE_MASTERY_149[] = 
{
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_MONEY,
        .perType = {
            .money = {
                .amount = QUEST_REWARD_SMALL_MONEY,
            }
        }
    },
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_SHOP_ITEM,
        .perType = {
            .shopItem = {
                .item = ITEM_GARCHOMPITE,
            }
        }
    },
};
static u16 const sTriggerParams_GIBLE_MASTERY_149_0[] = 
{
    SPECIES_GIBLE,
};
static struct RogueQuestTrigger const sTriggers_GIBLE_MASTERY_149[] = 
{
    {
        .callback = QuestCondition_SpeciesMasteryComplete,
        .passState = QUEST_STATUS_SUCCESS,
        .failState = QUEST_STATUS_FAIL,
        .flags = 0 | QUEST_TRIGGER_ENTER_HALL_OF_FAME,
        .params = sTriggerParams_GIBLE_MASTERY_149_0,
        .paramCount = ARRAY_COUNT(sTriggerParams_GIBLE_MASTERY_149_0),
    },
};
#endif

#if defined(ROGUE_EXPANSION)
static u8 const sTitle_RIOLU_MASTERY_150[] = _("Riolu Mastery");
extern const u8 gQuestDescText_RIOLU_MASTERY_150[];

static struct RogueQuestReward const sRewards_RIOLU_MASTERY_150[] = 
{
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_MONEY,
        .perType = {
            .money = {
                .amount = QUEST_REWARD_SMALL_MONEY,
            }
        }
    },
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_SHOP_ITEM,
        .perType = {
            .shopItem = {
                .item = ITEM_LUCARIONITE,
            }
        }
    },
};
static u16 const sTriggerParams_RIOLU_MASTERY_150_0[] = 
{
    SPECIES_RIOLU,
};
static struct RogueQuestTrigger const sTriggers_RIOLU_MASTERY_150[] = 
{
    {
        .callback = QuestCondition_SpeciesMasteryComplete,
        .passState = QUEST_STATUS_SUCCESS,
        .failState = QUEST_STATUS_FAIL,
        .flags = 0 | QUEST_TRIGGER_ENTER_HALL_OF_FAME,
        .params = sTriggerParams_RIOLU_MASTERY_150_0,
        .paramCount = ARRAY_COUNT(sTriggerParams_RIOLU_MASTERY_150_0),
    },
};
#endif

#if defined(ROGUE_EXPANSION)
static u8 const sTitle_SNOVER_MASTERY_151[] = _("Snover Mastery");
extern const u8 gQuestDescText_SNOVER_MASTERY_151[];

static struct RogueQuestReward const sRewards_SNOVER_MASTERY_151[] = 
{
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_MONEY,
        .perType = {
            .money = {
                .amount = QUEST_REWARD_SMALL_MONEY,
            }
        }
    },
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_SHOP_ITEM,
        .perType = {
            .shopItem = {
                .item = ITEM_ABOMASITE,
            }
        }
    },
};
static u16 const sTriggerParams_SNOVER_MASTERY_151_0[] = 
{
    SPECIES_SNOVER,
};
static struct RogueQuestTrigger const sTriggers_SNOVER_MASTERY_151[] = 
{
    {
        .callback = QuestCondition_SpeciesMasteryComplete,
        .passState = QUEST_STATUS_SUCCESS,
        .failState = QUEST_STATUS_FAIL,
        .flags = 0 | QUEST_TRIGGER_ENTER_HALL_OF_FAME,
        .params = sTriggerParams_SNOVER_MASTERY_151_0,
        .paramCount = ARRAY_COUNT(sTriggerParams_SNOVER_MASTERY_151_0),
    },
};
#endif

#if defined(ROGUE_EXPANSION)
static u8 const sTitle_ROTOM_MASTERY_152[] = _("Rotom Mastery");
extern const u8 gQuestDescText_ROTOM_MASTERY_152[];

static struct RogueQuestReward const sRewards_ROTOM_MASTERY_152[] = 
{
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_MONEY,
        .perType = {
            .money = {
                .amount = QUEST_REWARD_SMALL_MONEY,
            }
        }
    },
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_DECOR,
        .perType = {
            .decor = {
                .decorId = DECOR_ID_APPLIANCES,
            }
        }
    },
};
static u16 const sTriggerParams_ROTOM_MASTERY_152_0[] = 
{
    SPECIES_ROTOM,
};
static struct RogueQuestTrigger const sTriggers_ROTOM_MASTERY_152[] = 
{
    {
        .callback = QuestCondition_SpeciesMasteryComplete,
        .passState = QUEST_STATUS_SUCCESS,
        .failState = QUEST_STATUS_FAIL,
        .flags = 0 | QUEST_TRIGGER_ENTER_HALL_OF_FAME,
        .params = sTriggerParams_ROTOM_MASTERY_152_0,
        .paramCount = ARRAY_COUNT(sTriggerParams_ROTOM_MASTERY_152_0),
    },
};
#endif

#if defined(ROGUE_EXPANSION)
static u8 const sTitle_DIALGA_MASTERY_153[] = _("Dialga Mastery");
extern const u8 gQuestDescText_DIALGA_MASTERY_153[];

static struct RogueQuestReward const sRewards_DIALGA_MASTERY_153[] = 
{
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_MONEY,
        .perType = {
            .money = {
                .amount = QUEST_REWARD_SMALL_MONEY,
            }
        }
    },
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_SHOP_ITEM,
        .perType = {
            .shopItem = {
                .item = ITEM_ADAMANT_ORB,
            }
        }
    },
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_SHOP_ITEM,
        .perType = {
            .shopItem = {
                .item = ITEM_ADAMANT_CRYSTAL,
            }
        }
    },
};
static u16 const sTriggerParams_DIALGA_MASTERY_153_0[] = 
{
    SPECIES_DIALGA,
};
static struct RogueQuestTrigger const sTriggers_DIALGA_MASTERY_153[] = 
{
    {
        .callback = QuestCondition_SpeciesMasteryComplete,
        .passState = QUEST_STATUS_SUCCESS,
        .failState = QUEST_STATUS_FAIL,
        .flags = 0 | QUEST_TRIGGER_ENTER_HALL_OF_FAME,
        .params = sTriggerParams_DIALGA_MASTERY_153_0,
        .paramCount = ARRAY_COUNT(sTriggerParams_DIALGA_MASTERY_153_0),
    },
};
#endif

#if defined(ROGUE_EXPANSION)
static u8 const sTitle_PALKIA_MASTERY_154[] = _("Palkia Mastery");
extern const u8 gQuestDescText_PALKIA_MASTERY_154[];

static struct RogueQuestReward const sRewards_PALKIA_MASTERY_154[] = 
{
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_MONEY,
        .perType = {
            .money = {
                .amount = QUEST_REWARD_SMALL_MONEY,
            }
        }
    },
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_SHOP_ITEM,
        .perType = {
            .shopItem = {
                .item = ITEM_LUSTROUS_ORB,
            }
        }
    },
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_SHOP_ITEM,
        .perType = {
            .shopItem = {
                .item = ITEM_LUSTROUS_GLOBE,
            }
        }
    },
};
static u16 const sTriggerParams_PALKIA_MASTERY_154_0[] = 
{
    SPECIES_PALKIA,
};
static struct RogueQuestTrigger const sTriggers_PALKIA_MASTERY_154[] = 
{
    {
        .callback = QuestCondition_SpeciesMasteryComplete,
        .passState = QUEST_STATUS_SUCCESS,
        .failState = QUEST_STATUS_FAIL,
        .flags = 0 | QUEST_TRIGGER_ENTER_HALL_OF_FAME,
        .params = sTriggerParams_PALKIA_MASTERY_154_0,
        .paramCount = ARRAY_COUNT(sTriggerParams_PALKIA_MASTERY_154_0),
    },
};
#endif

#if defined(ROGUE_EXPANSION)
static u8 const sTitle_GIRATINA_MASTERY_155[] = _("Giratina Mastery");
extern const u8 gQuestDescText_GIRATINA_MASTERY_155[];

static struct RogueQuestReward const sRewards_GIRATINA_MASTERY_155[] = 
{
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_MONEY,
        .perType = {
            .money = {
                .amount = QUEST_REWARD_SMALL_MONEY,
            }
        }
    },
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_SHOP_ITEM,
        .perType = {
            .shopItem = {
                .item = ITEM_GRISEOUS_ORB,
            }
        }
    },
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_SHOP_ITEM,
        .perType = {
            .shopItem = {
                .item = ITEM_GRISEOUS_CORE,
            }
        }
    },
};
static u16 const sTriggerParams_GIRATINA_MASTERY_155_0[] = 
{
    SPECIES_GIRATINA,
};
static struct RogueQuestTrigger const sTriggers_GIRATINA_MASTERY_155[] = 
{
    {
        .callback = QuestCondition_SpeciesMasteryComplete,
        .passState = QUEST_STATUS_SUCCESS,
        .failState = QUEST_STATUS_FAIL,
        .flags = 0 | QUEST_TRIGGER_ENTER_HALL_OF_FAME,
        .params = sTriggerParams_GIRATINA_MASTERY_155_0,
        .paramCount = ARRAY_COUNT(sTriggerParams_GIRATINA_MASTERY_155_0),
    },
};
#endif

#if defined(ROGUE_EXPANSION)
static u8 const sTitle_SHAYMIN_MASTERY_156[] = _("Shaymin Mastery");
extern const u8 gQuestDescText_SHAYMIN_MASTERY_156[];

static struct RogueQuestReward const sRewards_SHAYMIN_MASTERY_156[] = 
{
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_MONEY,
        .perType = {
            .money = {
                .amount = QUEST_REWARD_SMALL_MONEY,
            }
        }
    },
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_ITEM,
        .perType = {
            .item = {
                .item = ITEM_GRACIDEA,
                .count = 1,
            }
        }
    },
};
static u16 const sTriggerParams_SHAYMIN_MASTERY_156_0[] = 
{
    SPECIES_SHAYMIN,
};
static struct RogueQuestTrigger const sTriggers_SHAYMIN_MASTERY_156[] = 
{
    {
        .callback = QuestCondition_SpeciesMasteryComplete,
        .passState = QUEST_STATUS_SUCCESS,
        .failState = QUEST_STATUS_FAIL,
        .flags = 0 | QUEST_TRIGGER_ENTER_HALL_OF_FAME,
        .params = sTriggerParams_SHAYMIN_MASTERY_156_0,
        .paramCount = ARRAY_COUNT(sTriggerParams_SHAYMIN_MASTERY_156_0),
    },
};
#endif

#if defined(ROGUE_EXPANSION)
static u8 const sTitle_ARCEUS_MASTERY_157[] = _("Arceus Mastery");
extern const u8 gQuestDescText_ARCEUS_MASTERY_157[];

static struct RogueQuestReward const sRewards_ARCEUS_MASTERY_157[] = 
{
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_MONEY,
        .perType = {
            .money = {
                .amount = QUEST_REWARD_SMALL_MONEY,
            }
        }
    },
    {
        .visiblity = QUEST_REWARD_VISIBLITY_INVISIBLE,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_SHOP_ITEM,
        .perType = {
            .shopItem = {
                .item = ITEM_FIST_PLATE,
            }
        }
    },
    {
        .visiblity = QUEST_REWARD_VISIBLITY_INVISIBLE,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_SHOP_ITEM,
        .perType = {
            .shopItem = {
                .item = ITEM_SKY_PLATE,
            }
        }
    },
    {
        .visiblity = QUEST_REWARD_VISIBLITY_INVISIBLE,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_SHOP_ITEM,
        .perType = {
            .shopItem = {
                .item = ITEM_TOXIC_PLATE,
            }
        }
    },
    {
        .visiblity = QUEST_REWARD_VISIBLITY_INVISIBLE,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_SHOP_ITEM,
        .perType = {
            .shopItem = {
                .item = ITEM_EARTH_PLATE,
            }
        }
    },
    {
        .visiblity = QUEST_REWARD_VISIBLITY_INVISIBLE,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_SHOP_ITEM,
        .perType = {
            .shopItem = {
                .item = ITEM_STONE_PLATE,
            }
        }
    },
    {
        .visiblity = QUEST_REWARD_VISIBLITY_INVISIBLE,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_SHOP_ITEM,
        .perType = {
            .shopItem = {
                .item = ITEM_INSECT_PLATE,
            }
        }
    },
    {
        .visiblity = QUEST_REWARD_VISIBLITY_INVISIBLE,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_SHOP_ITEM,
        .perType = {
            .shopItem = {
                .item = ITEM_SPOOKY_PLATE,
            }
        }
    },
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_SHOP_ITEM,
        .perType = {
            .shopItem = {
                .item = ITEM_IRON_PLATE,
            }
        }
    },
    {
        .visiblity = QUEST_REWARD_VISIBLITY_INVISIBLE,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_SHOP_ITEM,
        .perType = {
            .shopItem = {
                .item = ITEM_FLAME_PLATE,
            }
        }
    },
    {
        .visiblity = QUEST_REWARD_VISIBLITY_INVISIBLE,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_SHOP_ITEM,
        .perType = {
            .shopItem = {
                .item = ITEM_SPLASH_PLATE,
            }
        }
    },
    {
        .visiblity = QUEST_REWARD_VISIBLITY_INVISIBLE,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_SHOP_ITEM,
        .perType = {
            .shopItem = {
                .item = ITEM_MEADOW_PLATE,
            }
        }
    },
    {
        .visiblity = QUEST_REWARD_VISIBLITY_INVISIBLE,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_SHOP_ITEM,
        .perType = {
            .shopItem = {
                .item = ITEM_ZAP_PLATE,
            }
        }
    },
    {
        .visiblity = QUEST_REWARD_VISIBLITY_INVISIBLE,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_SHOP_ITEM,
        .perType = {
            .shopItem = {
                .item = ITEM_MIND_PLATE,
            }
        }
    },
    {
        .visiblity = QUEST_REWARD_VISIBLITY_INVISIBLE,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_SHOP_ITEM,
        .perType = {
            .shopItem = {
                .item = ITEM_ICICLE_PLATE,
            }
        }
    },
    {
        .visiblity = QUEST_REWARD_VISIBLITY_INVISIBLE,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_SHOP_ITEM,
        .perType = {
            .shopItem = {
                .item = ITEM_DRACO_PLATE,
            }
        }
    },
    {
        .visiblity = QUEST_REWARD_VISIBLITY_INVISIBLE,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_SHOP_ITEM,
        .perType = {
            .shopItem = {
                .item = ITEM_DREAD_PLATE,
            }
        }
    },
    {
        .visiblity = QUEST_REWARD_VISIBLITY_INVISIBLE,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_SHOP_ITEM,
        .perType = {
            .shopItem = {
                .item = ITEM_PIXIE_PLATE,
            }
        }
    },
};
static u16 const sTriggerParams_ARCEUS_MASTERY_157_0[] = 
{
    SPECIES_ARCEUS,
};
static struct RogueQuestTrigger const sTriggers_ARCEUS_MASTERY_157[] = 
{
    {
        .callback = QuestCondition_SpeciesMasteryComplete,
        .passState = QUEST_STATUS_SUCCESS,
        .failState = QUEST_STATUS_FAIL,
        .flags = 0 | QUEST_TRIGGER_ENTER_HALL_OF_FAME,
        .params = sTriggerParams_ARCEUS_MASTERY_157_0,
        .paramCount = ARRAY_COUNT(sTriggerParams_ARCEUS_MASTERY_157_0),
    },
};
#endif

#if defined(ROGUE_EXPANSION)
static u8 const sTitle_AUDINO_MASTERY_158[] = _("Audino Mastery");
extern const u8 gQuestDescText_AUDINO_MASTERY_158[];

static struct RogueQuestReward const sRewards_AUDINO_MASTERY_158[] = 
{
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_MONEY,
        .perType = {
            .money = {
                .amount = QUEST_REWARD_SMALL_MONEY,
            }
        }
    },
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_SHOP_ITEM,
        .perType = {
            .shopItem = {
                .item = ITEM_AUDINITE,
            }
        }
    },
};
static u16 const sTriggerParams_AUDINO_MASTERY_158_0[] = 
{
    SPECIES_AUDINO,
};
static struct RogueQuestTrigger const sTriggers_AUDINO_MASTERY_158[] = 
{
    {
        .callback = QuestCondition_SpeciesMasteryComplete,
        .passState = QUEST_STATUS_SUCCESS,
        .failState = QUEST_STATUS_FAIL,
        .flags = 0 | QUEST_TRIGGER_ENTER_HALL_OF_FAME,
        .params = sTriggerParams_AUDINO_MASTERY_158_0,
        .paramCount = ARRAY_COUNT(sTriggerParams_AUDINO_MASTERY_158_0),
    },
};
#endif

#if defined(ROGUE_EXPANSION)
static u8 const sTitle_TRUBBISH_MASTERY_159[] = _("Trubbish Mastery");
extern const u8 gQuestDescText_TRUBBISH_MASTERY_159[];

static u8 const sCustomPopupTitle_TRUBBISH_MASTERY_159_1[] = _("Gmax Form");
static u8 const sCustomPopupSubtitle_TRUBBISH_MASTERY_159_1[] = _("{COLOR LIGHT_BLUE}{SHADOW BLUE}Perma Unlocked!");

static struct CustomPopup const sCustomPopup_TRUBBISH_MASTERY_159_1 = 
{
    .titleStr = sCustomPopupTitle_TRUBBISH_MASTERY_159_1,
    .subtitleStr = sCustomPopupSubtitle_TRUBBISH_MASTERY_159_1,
    .speciesIcon = SPECIES_GARBODOR_GIGANTAMAX,
    .soundEffect = 0,
    .fanfare = MUS_RG_OBTAIN_KEY_ITEM,
};

static struct RogueQuestReward const sRewards_TRUBBISH_MASTERY_159[] = 
{
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_MONEY,
        .perType = {
            .money = {
                .amount = QUEST_REWARD_SMALL_MONEY,
            }
        }
    },
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = &sCustomPopup_TRUBBISH_MASTERY_159_1,
        .type = QUEST_REWARD_FLAG,
        .perType = {
            .flag = {
                .flagId = FLAG_ROGUE_STUB,
            }
        }
    },
};
static u16 const sTriggerParams_TRUBBISH_MASTERY_159_0[] = 
{
    SPECIES_TRUBBISH,
};
static struct RogueQuestTrigger const sTriggers_TRUBBISH_MASTERY_159[] = 
{
    {
        .callback = QuestCondition_SpeciesMasteryComplete,
        .passState = QUEST_STATUS_SUCCESS,
        .failState = QUEST_STATUS_FAIL,
        .flags = 0 | QUEST_TRIGGER_ENTER_HALL_OF_FAME,
        .params = sTriggerParams_TRUBBISH_MASTERY_159_0,
        .paramCount = ARRAY_COUNT(sTriggerParams_TRUBBISH_MASTERY_159_0),
    },
};
#endif

#if defined(ROGUE_EXPANSION)
static u8 const sTitle_GENIE_MASTERY_160[] = _("Genie Mastery");
extern const u8 gQuestDescText_GENIE_MASTERY_160[];

static struct RogueQuestReward const sRewards_GENIE_MASTERY_160[] = 
{
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_MONEY,
        .perType = {
            .money = {
                .amount = QUEST_REWARD_SMALL_MONEY,
            }
        }
    },
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_ITEM,
        .perType = {
            .item = {
                .item = ITEM_REVEAL_GLASS,
                .count = 1,
            }
        }
    },
};
static u16 const sTriggerParams_GENIE_MASTERY_160_0[] = 
{
    SPECIES_TORNADUS,
    SPECIES_THUNDURUS,
    SPECIES_LANDORUS,
    SPECIES_ENAMORUS,
};
static struct RogueQuestTrigger const sTriggers_GENIE_MASTERY_160[] = 
{
    {
        .callback = QuestCondition_SpeciesMasteryComplete,
        .passState = QUEST_STATUS_SUCCESS,
        .failState = QUEST_STATUS_FAIL,
        .flags = 0 | QUEST_TRIGGER_ENTER_HALL_OF_FAME,
        .params = sTriggerParams_GENIE_MASTERY_160_0,
        .paramCount = ARRAY_COUNT(sTriggerParams_GENIE_MASTERY_160_0),
    },
};
#endif

#if defined(ROGUE_EXPANSION)
static u8 const sTitle_GENESECT_MASTERY_161[] = _("Genesect Mastery");
extern const u8 gQuestDescText_GENESECT_MASTERY_161[];

static struct RogueQuestReward const sRewards_GENESECT_MASTERY_161[] = 
{
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_MONEY,
        .perType = {
            .money = {
                .amount = QUEST_REWARD_SMALL_MONEY,
            }
        }
    },
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_SHOP_ITEM,
        .perType = {
            .shopItem = {
                .item = ITEM_SHOCK_DRIVE,
            }
        }
    },
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_SHOP_ITEM,
        .perType = {
            .shopItem = {
                .item = ITEM_BURN_DRIVE,
            }
        }
    },
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_SHOP_ITEM,
        .perType = {
            .shopItem = {
                .item = ITEM_CHILL_DRIVE,
            }
        }
    },
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_SHOP_ITEM,
        .perType = {
            .shopItem = {
                .item = ITEM_DOUSE_DRIVE,
            }
        }
    },
};
static u16 const sTriggerParams_GENESECT_MASTERY_161_0[] = 
{
    SPECIES_GENESECT,
};
static struct RogueQuestTrigger const sTriggers_GENESECT_MASTERY_161[] = 
{
    {
        .callback = QuestCondition_SpeciesMasteryComplete,
        .passState = QUEST_STATUS_SUCCESS,
        .failState = QUEST_STATUS_FAIL,
        .flags = 0 | QUEST_TRIGGER_ENTER_HALL_OF_FAME,
        .params = sTriggerParams_GENESECT_MASTERY_161_0,
        .paramCount = ARRAY_COUNT(sTriggerParams_GENESECT_MASTERY_161_0),
    },
};
#endif

#if defined(ROGUE_EXPANSION)
static u8 const sTitle_FROAKIE_MASTERY_162[] = _("Froakie Mastery");
extern const u8 gQuestDescText_FROAKIE_MASTERY_162[];

static struct RogueQuestReward const sRewards_FROAKIE_MASTERY_162[] = 
{
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_MONEY,
        .perType = {
            .money = {
                .amount = QUEST_REWARD_SMALL_MONEY,
            }
        }
    },
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_POKEMON,
        .perType = {
            .pokemon = {
                .species = SPECIES_GRENINJA_BATTLE_BOND,
                .isShiny = FALSE,
                .customMonId = CUSTOM_MON_NONE,
                .nickname = NULL,
            }
        }
    },
};
static u16 const sTriggerParams_FROAKIE_MASTERY_162_0[] = 
{
    SPECIES_FROAKIE,
};
static struct RogueQuestTrigger const sTriggers_FROAKIE_MASTERY_162[] = 
{
    {
        .callback = QuestCondition_SpeciesMasteryComplete,
        .passState = QUEST_STATUS_SUCCESS,
        .failState = QUEST_STATUS_FAIL,
        .flags = 0 | QUEST_TRIGGER_ENTER_HALL_OF_FAME,
        .params = sTriggerParams_FROAKIE_MASTERY_162_0,
        .paramCount = ARRAY_COUNT(sTriggerParams_FROAKIE_MASTERY_162_0),
    },
};
#endif

#if defined(ROGUE_EXPANSION)
static u8 const sTitle_ZYGARDE_MASTERY_163[] = _("Zygarde Mastery");
extern const u8 gQuestDescText_ZYGARDE_MASTERY_163[];

static struct RogueQuestReward const sRewards_ZYGARDE_MASTERY_163[] = 
{
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_MONEY,
        .perType = {
            .money = {
                .amount = QUEST_REWARD_SMALL_MONEY,
            }
        }
    },
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_ITEM,
        .perType = {
            .item = {
                .item = ITEM_ZYGARDE_CUBE,
                .count = 1,
            }
        }
    },
};
static u16 const sTriggerParams_ZYGARDE_MASTERY_163_0[] = 
{
    SPECIES_ZYGARDE,
};
static struct RogueQuestTrigger const sTriggers_ZYGARDE_MASTERY_163[] = 
{
    {
        .callback = QuestCondition_SpeciesMasteryComplete,
        .passState = QUEST_STATUS_SUCCESS,
        .failState = QUEST_STATUS_FAIL,
        .flags = 0 | QUEST_TRIGGER_ENTER_HALL_OF_FAME,
        .params = sTriggerParams_ZYGARDE_MASTERY_163_0,
        .paramCount = ARRAY_COUNT(sTriggerParams_ZYGARDE_MASTERY_163_0),
    },
};
#endif

#if defined(ROGUE_EXPANSION)
static u8 const sTitle_DIANCIE_MASTERY_164[] = _("Diancie Mastery");
extern const u8 gQuestDescText_DIANCIE_MASTERY_164[];

static struct RogueQuestReward const sRewards_DIANCIE_MASTERY_164[] = 
{
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_MONEY,
        .perType = {
            .money = {
                .amount = QUEST_REWARD_SMALL_MONEY,
            }
        }
    },
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_SHOP_ITEM,
        .perType = {
            .shopItem = {
                .item = ITEM_DIANCITE,
            }
        }
    },
};
static u16 const sTriggerParams_DIANCIE_MASTERY_164_0[] = 
{
    SPECIES_DIANCIE,
};
static struct RogueQuestTrigger const sTriggers_DIANCIE_MASTERY_164[] = 
{
    {
        .callback = QuestCondition_SpeciesMasteryComplete,
        .passState = QUEST_STATUS_SUCCESS,
        .failState = QUEST_STATUS_FAIL,
        .flags = 0 | QUEST_TRIGGER_ENTER_HALL_OF_FAME,
        .params = sTriggerParams_DIANCIE_MASTERY_164_0,
        .paramCount = ARRAY_COUNT(sTriggerParams_DIANCIE_MASTERY_164_0),
    },
};
#endif

#if defined(ROGUE_EXPANSION)
static u8 const sTitle_HOOPA_MASTERY_165[] = _("Hoopa Mastery");
extern const u8 gQuestDescText_HOOPA_MASTERY_165[];

static struct RogueQuestReward const sRewards_HOOPA_MASTERY_165[] = 
{
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_MONEY,
        .perType = {
            .money = {
                .amount = QUEST_REWARD_SMALL_MONEY,
            }
        }
    },
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_ITEM,
        .perType = {
            .item = {
                .item = ITEM_PRISON_BOTTLE,
                .count = 1,
            }
        }
    },
};
static u16 const sTriggerParams_HOOPA_MASTERY_165_0[] = 
{
    SPECIES_HOOPA,
};
static struct RogueQuestTrigger const sTriggers_HOOPA_MASTERY_165[] = 
{
    {
        .callback = QuestCondition_SpeciesMasteryComplete,
        .passState = QUEST_STATUS_SUCCESS,
        .failState = QUEST_STATUS_FAIL,
        .flags = 0 | QUEST_TRIGGER_ENTER_HALL_OF_FAME,
        .params = sTriggerParams_HOOPA_MASTERY_165_0,
        .paramCount = ARRAY_COUNT(sTriggerParams_HOOPA_MASTERY_165_0),
    },
};
#endif

#if defined(ROGUE_EXPANSION)
static u8 const sTitle_ROWLET_MASTERY_166[] = _("Rowlet Mastery");
extern const u8 gQuestDescText_ROWLET_MASTERY_166[];

static struct RogueQuestReward const sRewards_ROWLET_MASTERY_166[] = 
{
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_MONEY,
        .perType = {
            .money = {
                .amount = QUEST_REWARD_SMALL_MONEY,
            }
        }
    },
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_SHOP_ITEM,
        .perType = {
            .shopItem = {
                .item = ITEM_DECIDIUM_Z,
            }
        }
    },
};
static u16 const sTriggerParams_ROWLET_MASTERY_166_0[] = 
{
    SPECIES_ROWLET,
};
static struct RogueQuestTrigger const sTriggers_ROWLET_MASTERY_166[] = 
{
    {
        .callback = QuestCondition_SpeciesMasteryComplete,
        .passState = QUEST_STATUS_SUCCESS,
        .failState = QUEST_STATUS_FAIL,
        .flags = 0 | QUEST_TRIGGER_ENTER_HALL_OF_FAME,
        .params = sTriggerParams_ROWLET_MASTERY_166_0,
        .paramCount = ARRAY_COUNT(sTriggerParams_ROWLET_MASTERY_166_0),
    },
};
#endif

#if defined(ROGUE_EXPANSION)
static u8 const sTitle_LITTEN_MASTERY_167[] = _("Litten Mastery");
extern const u8 gQuestDescText_LITTEN_MASTERY_167[];

static struct RogueQuestReward const sRewards_LITTEN_MASTERY_167[] = 
{
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_MONEY,
        .perType = {
            .money = {
                .amount = QUEST_REWARD_SMALL_MONEY,
            }
        }
    },
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_SHOP_ITEM,
        .perType = {
            .shopItem = {
                .item = ITEM_INCINIUM_Z,
            }
        }
    },
};
static u16 const sTriggerParams_LITTEN_MASTERY_167_0[] = 
{
    SPECIES_LITTEN,
};
static struct RogueQuestTrigger const sTriggers_LITTEN_MASTERY_167[] = 
{
    {
        .callback = QuestCondition_SpeciesMasteryComplete,
        .passState = QUEST_STATUS_SUCCESS,
        .failState = QUEST_STATUS_FAIL,
        .flags = 0 | QUEST_TRIGGER_ENTER_HALL_OF_FAME,
        .params = sTriggerParams_LITTEN_MASTERY_167_0,
        .paramCount = ARRAY_COUNT(sTriggerParams_LITTEN_MASTERY_167_0),
    },
};
#endif

#if defined(ROGUE_EXPANSION)
static u8 const sTitle_POPPLIO_MASTERY_168[] = _("Popplio Mastery");
extern const u8 gQuestDescText_POPPLIO_MASTERY_168[];

static struct RogueQuestReward const sRewards_POPPLIO_MASTERY_168[] = 
{
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_MONEY,
        .perType = {
            .money = {
                .amount = QUEST_REWARD_SMALL_MONEY,
            }
        }
    },
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_SHOP_ITEM,
        .perType = {
            .shopItem = {
                .item = ITEM_PRIMARIUM_Z,
            }
        }
    },
};
static u16 const sTriggerParams_POPPLIO_MASTERY_168_0[] = 
{
    SPECIES_POPPLIO,
};
static struct RogueQuestTrigger const sTriggers_POPPLIO_MASTERY_168[] = 
{
    {
        .callback = QuestCondition_SpeciesMasteryComplete,
        .passState = QUEST_STATUS_SUCCESS,
        .failState = QUEST_STATUS_FAIL,
        .flags = 0 | QUEST_TRIGGER_ENTER_HALL_OF_FAME,
        .params = sTriggerParams_POPPLIO_MASTERY_168_0,
        .paramCount = ARRAY_COUNT(sTriggerParams_POPPLIO_MASTERY_168_0),
    },
};
#endif

#if defined(ROGUE_EXPANSION)
static u8 const sTitle_ROCKRUFF_MASTERY_169[] = _("Rockruff Mastery");
extern const u8 gQuestDescText_ROCKRUFF_MASTERY_169[];

static struct RogueQuestReward const sRewards_ROCKRUFF_MASTERY_169[] = 
{
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_MONEY,
        .perType = {
            .money = {
                .amount = QUEST_REWARD_SMALL_MONEY,
            }
        }
    },
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_POKEMON,
        .perType = {
            .pokemon = {
                .species = SPECIES_ROCKRUFF_OWN_TEMPO,
                .isShiny = FALSE,
                .customMonId = CUSTOM_MON_NONE,
                .nickname = NULL,
            }
        }
    },
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_SHOP_ITEM,
        .perType = {
            .shopItem = {
                .item = ITEM_LYCANIUM_Z,
            }
        }
    },
};
static u16 const sTriggerParams_ROCKRUFF_MASTERY_169_0[] = 
{
    SPECIES_ROCKRUFF,
};
static struct RogueQuestTrigger const sTriggers_ROCKRUFF_MASTERY_169[] = 
{
    {
        .callback = QuestCondition_SpeciesMasteryComplete,
        .passState = QUEST_STATUS_SUCCESS,
        .failState = QUEST_STATUS_FAIL,
        .flags = 0 | QUEST_TRIGGER_ENTER_HALL_OF_FAME,
        .params = sTriggerParams_ROCKRUFF_MASTERY_169_0,
        .paramCount = ARRAY_COUNT(sTriggerParams_ROCKRUFF_MASTERY_169_0),
    },
};
#endif

#if defined(ROGUE_EXPANSION)
static u8 const sTitle_MIMIKYU_MASTERY_170[] = _("Mimikyu Mastery");
extern const u8 gQuestDescText_MIMIKYU_MASTERY_170[];

static struct RogueQuestReward const sRewards_MIMIKYU_MASTERY_170[] = 
{
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_MONEY,
        .perType = {
            .money = {
                .amount = QUEST_REWARD_SMALL_MONEY,
            }
        }
    },
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_SHOP_ITEM,
        .perType = {
            .shopItem = {
                .item = ITEM_MIMIKIUM_Z,
            }
        }
    },
};
static u16 const sTriggerParams_MIMIKYU_MASTERY_170_0[] = 
{
    SPECIES_MIMIKYU,
};
static struct RogueQuestTrigger const sTriggers_MIMIKYU_MASTERY_170[] = 
{
    {
        .callback = QuestCondition_SpeciesMasteryComplete,
        .passState = QUEST_STATUS_SUCCESS,
        .failState = QUEST_STATUS_FAIL,
        .flags = 0 | QUEST_TRIGGER_ENTER_HALL_OF_FAME,
        .params = sTriggerParams_MIMIKYU_MASTERY_170_0,
        .paramCount = ARRAY_COUNT(sTriggerParams_MIMIKYU_MASTERY_170_0),
    },
};
#endif

#if defined(ROGUE_EXPANSION)
static u8 const sTitle_SILVALLY_MASTERY_171[] = _("Silvally Mastery");
extern const u8 gQuestDescText_SILVALLY_MASTERY_171[];

static struct RogueQuestReward const sRewards_SILVALLY_MASTERY_171[] = 
{
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_MONEY,
        .perType = {
            .money = {
                .amount = QUEST_REWARD_SMALL_MONEY,
            }
        }
    },
    {
        .visiblity = QUEST_REWARD_VISIBLITY_INVISIBLE,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_SHOP_ITEM,
        .perType = {
            .shopItem = {
                .item = ITEM_FIRE_MEMORY,
            }
        }
    },
    {
        .visiblity = QUEST_REWARD_VISIBLITY_INVISIBLE,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_SHOP_ITEM,
        .perType = {
            .shopItem = {
                .item = ITEM_WATER_MEMORY,
            }
        }
    },
    {
        .visiblity = QUEST_REWARD_VISIBLITY_INVISIBLE,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_SHOP_ITEM,
        .perType = {
            .shopItem = {
                .item = ITEM_ELECTRIC_MEMORY,
            }
        }
    },
    {
        .visiblity = QUEST_REWARD_VISIBLITY_INVISIBLE,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_SHOP_ITEM,
        .perType = {
            .shopItem = {
                .item = ITEM_GRASS_MEMORY,
            }
        }
    },
    {
        .visiblity = QUEST_REWARD_VISIBLITY_INVISIBLE,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_SHOP_ITEM,
        .perType = {
            .shopItem = {
                .item = ITEM_ICE_MEMORY,
            }
        }
    },
    {
        .visiblity = QUEST_REWARD_VISIBLITY_INVISIBLE,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_SHOP_ITEM,
        .perType = {
            .shopItem = {
                .item = ITEM_FIGHTING_MEMORY,
            }
        }
    },
    {
        .visiblity = QUEST_REWARD_VISIBLITY_INVISIBLE,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_SHOP_ITEM,
        .perType = {
            .shopItem = {
                .item = ITEM_POISON_MEMORY,
            }
        }
    },
    {
        .visiblity = QUEST_REWARD_VISIBLITY_INVISIBLE,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_SHOP_ITEM,
        .perType = {
            .shopItem = {
                .item = ITEM_GROUND_MEMORY,
            }
        }
    },
    {
        .visiblity = QUEST_REWARD_VISIBLITY_INVISIBLE,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_SHOP_ITEM,
        .perType = {
            .shopItem = {
                .item = ITEM_FLYING_MEMORY,
            }
        }
    },
    {
        .visiblity = QUEST_REWARD_VISIBLITY_INVISIBLE,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_SHOP_ITEM,
        .perType = {
            .shopItem = {
                .item = ITEM_PSYCHIC_MEMORY,
            }
        }
    },
    {
        .visiblity = QUEST_REWARD_VISIBLITY_INVISIBLE,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_SHOP_ITEM,
        .perType = {
            .shopItem = {
                .item = ITEM_BUG_MEMORY,
            }
        }
    },
    {
        .visiblity = QUEST_REWARD_VISIBLITY_INVISIBLE,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_SHOP_ITEM,
        .perType = {
            .shopItem = {
                .item = ITEM_ROCK_MEMORY,
            }
        }
    },
    {
        .visiblity = QUEST_REWARD_VISIBLITY_INVISIBLE,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_SHOP_ITEM,
        .perType = {
            .shopItem = {
                .item = ITEM_GHOST_MEMORY,
            }
        }
    },
    {
        .visiblity = QUEST_REWARD_VISIBLITY_INVISIBLE,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_SHOP_ITEM,
        .perType = {
            .shopItem = {
                .item = ITEM_DRAGON_MEMORY,
            }
        }
    },
    {
        .visiblity = QUEST_REWARD_VISIBLITY_INVISIBLE,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_SHOP_ITEM,
        .perType = {
            .shopItem = {
                .item = ITEM_DARK_MEMORY,
            }
        }
    },
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_SHOP_ITEM,
        .perType = {
            .shopItem = {
                .item = ITEM_STEEL_MEMORY,
            }
        }
    },
    {
        .visiblity = QUEST_REWARD_VISIBLITY_INVISIBLE,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_SHOP_ITEM,
        .perType = {
            .shopItem = {
                .item = ITEM_FAIRY_MEMORY,
            }
        }
    },
};
static u16 const sTriggerParams_SILVALLY_MASTERY_171_0[] = 
{
    SPECIES_SILVALLY,
};
static struct RogueQuestTrigger const sTriggers_SILVALLY_MASTERY_171[] = 
{
    {
        .callback = QuestCondition_SpeciesMasteryComplete,
        .passState = QUEST_STATUS_SUCCESS,
        .failState = QUEST_STATUS_FAIL,
        .flags = 0 | QUEST_TRIGGER_ENTER_HALL_OF_FAME,
        .params = sTriggerParams_SILVALLY_MASTERY_171_0,
        .paramCount = ARRAY_COUNT(sTriggerParams_SILVALLY_MASTERY_171_0),
    },
};
#endif

#if defined(ROGUE_EXPANSION)
static u8 const sTitle_JANGMO_O_MASTERY_172[] = _("Jangmo_o Mastery");
extern const u8 gQuestDescText_JANGMO_O_MASTERY_172[];

static struct RogueQuestReward const sRewards_JANGMO_O_MASTERY_172[] = 
{
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_MONEY,
        .perType = {
            .money = {
                .amount = QUEST_REWARD_SMALL_MONEY,
            }
        }
    },
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_SHOP_ITEM,
        .perType = {
            .shopItem = {
                .item = ITEM_KOMMONIUM_Z,
            }
        }
    },
};
static u16 const sTriggerParams_JANGMO_O_MASTERY_172_0[] = 
{
    SPECIES_JANGMO_O,
};
static struct RogueQuestTrigger const sTriggers_JANGMO_O_MASTERY_172[] = 
{
    {
        .callback = QuestCondition_SpeciesMasteryComplete,
        .passState = QUEST_STATUS_SUCCESS,
        .failState = QUEST_STATUS_FAIL,
        .flags = 0 | QUEST_TRIGGER_ENTER_HALL_OF_FAME,
        .params = sTriggerParams_JANGMO_O_MASTERY_172_0,
        .paramCount = ARRAY_COUNT(sTriggerParams_JANGMO_O_MASTERY_172_0),
    },
};
#endif

#if defined(ROGUE_EXPANSION)
static u8 const sTitle_TAPU_MASTERY_173[] = _("Tapu Mastery");
extern const u8 gQuestDescText_TAPU_MASTERY_173[];

static struct RogueQuestReward const sRewards_TAPU_MASTERY_173[] = 
{
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_MONEY,
        .perType = {
            .money = {
                .amount = QUEST_REWARD_SMALL_MONEY,
            }
        }
    },
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_SHOP_ITEM,
        .perType = {
            .shopItem = {
                .item = ITEM_TAPUNIUM_Z,
            }
        }
    },
};
static u16 const sTriggerParams_TAPU_MASTERY_173_0[] = 
{
    SPECIES_TAPU_KOKO,
    SPECIES_TAPU_LELE,
    SPECIES_TAPU_BULU,
    SPECIES_TAPU_FINI,
};
static struct RogueQuestTrigger const sTriggers_TAPU_MASTERY_173[] = 
{
    {
        .callback = QuestCondition_SpeciesMasteryComplete,
        .passState = QUEST_STATUS_SUCCESS,
        .failState = QUEST_STATUS_FAIL,
        .flags = 0 | QUEST_TRIGGER_ENTER_HALL_OF_FAME,
        .params = sTriggerParams_TAPU_MASTERY_173_0,
        .paramCount = ARRAY_COUNT(sTriggerParams_TAPU_MASTERY_173_0),
    },
};
#endif

#if defined(ROGUE_EXPANSION)
static u8 const sTitle_COSMOG_MASTERY_174[] = _("Cosmog Mastery");
extern const u8 gQuestDescText_COSMOG_MASTERY_174[];

static struct RogueQuestReward const sRewards_COSMOG_MASTERY_174[] = 
{
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_MONEY,
        .perType = {
            .money = {
                .amount = QUEST_REWARD_SMALL_MONEY,
            }
        }
    },
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_SHOP_ITEM,
        .perType = {
            .shopItem = {
                .item = ITEM_SOLGANIUM_Z,
            }
        }
    },
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_SHOP_ITEM,
        .perType = {
            .shopItem = {
                .item = ITEM_LUNALIUM_Z,
            }
        }
    },
};
static u16 const sTriggerParams_COSMOG_MASTERY_174_0[] = 
{
    SPECIES_COSMOG,
};
static struct RogueQuestTrigger const sTriggers_COSMOG_MASTERY_174[] = 
{
    {
        .callback = QuestCondition_SpeciesMasteryComplete,
        .passState = QUEST_STATUS_SUCCESS,
        .failState = QUEST_STATUS_FAIL,
        .flags = 0 | QUEST_TRIGGER_ENTER_HALL_OF_FAME,
        .params = sTriggerParams_COSMOG_MASTERY_174_0,
        .paramCount = ARRAY_COUNT(sTriggerParams_COSMOG_MASTERY_174_0),
    },
};
#endif

#if defined(ROGUE_EXPANSION)
static u8 const sTitle_NECROZMA_MASTERY_175[] = _("Necrozma Mastery");
extern const u8 gQuestDescText_NECROZMA_MASTERY_175[];

static struct RogueQuestReward const sRewards_NECROZMA_MASTERY_175[] = 
{
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_MONEY,
        .perType = {
            .money = {
                .amount = QUEST_REWARD_SMALL_MONEY,
            }
        }
    },
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_SHOP_ITEM,
        .perType = {
            .shopItem = {
                .item = ITEM_ULTRANECROZIUM_Z,
            }
        }
    },
};
static u16 const sTriggerParams_NECROZMA_MASTERY_175_0[] = 
{
    SPECIES_NECROZMA,
};
static struct RogueQuestTrigger const sTriggers_NECROZMA_MASTERY_175[] = 
{
    {
        .callback = QuestCondition_SpeciesMasteryComplete,
        .passState = QUEST_STATUS_SUCCESS,
        .failState = QUEST_STATUS_FAIL,
        .flags = 0 | QUEST_TRIGGER_ENTER_HALL_OF_FAME,
        .params = sTriggerParams_NECROZMA_MASTERY_175_0,
        .paramCount = ARRAY_COUNT(sTriggerParams_NECROZMA_MASTERY_175_0),
    },
};
#endif

#if defined(ROGUE_EXPANSION)
static u8 const sTitle_MAGEARNA_MASTERY_176[] = _("Magearna Mastery");
extern const u8 gQuestDescText_MAGEARNA_MASTERY_176[];

static struct RogueQuestReward const sRewards_MAGEARNA_MASTERY_176[] = 
{
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_MONEY,
        .perType = {
            .money = {
                .amount = QUEST_REWARD_SMALL_MONEY,
            }
        }
    },
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_POKEMON,
        .perType = {
            .pokemon = {
                .species = SPECIES_MAGEARNA_ORIGINAL_COLOR,
                .isShiny = FALSE,
                .customMonId = CUSTOM_MON_NONE,
                .nickname = NULL,
            }
        }
    },
};
static u16 const sTriggerParams_MAGEARNA_MASTERY_176_0[] = 
{
    SPECIES_MAGEARNA,
};
static struct RogueQuestTrigger const sTriggers_MAGEARNA_MASTERY_176[] = 
{
    {
        .callback = QuestCondition_SpeciesMasteryComplete,
        .passState = QUEST_STATUS_SUCCESS,
        .failState = QUEST_STATUS_FAIL,
        .flags = 0 | QUEST_TRIGGER_ENTER_HALL_OF_FAME,
        .params = sTriggerParams_MAGEARNA_MASTERY_176_0,
        .paramCount = ARRAY_COUNT(sTriggerParams_MAGEARNA_MASTERY_176_0),
    },
};
#endif

#if defined(ROGUE_EXPANSION)
static u8 const sTitle_MARSHADOW_MASTERY_177[] = _("Marshadow Mastery");
extern const u8 gQuestDescText_MARSHADOW_MASTERY_177[];

static struct RogueQuestReward const sRewards_MARSHADOW_MASTERY_177[] = 
{
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_MONEY,
        .perType = {
            .money = {
                .amount = QUEST_REWARD_SMALL_MONEY,
            }
        }
    },
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_SHOP_ITEM,
        .perType = {
            .shopItem = {
                .item = ITEM_MARSHADIUM_Z,
            }
        }
    },
};
static u16 const sTriggerParams_MARSHADOW_MASTERY_177_0[] = 
{
    SPECIES_MARSHADOW,
};
static struct RogueQuestTrigger const sTriggers_MARSHADOW_MASTERY_177[] = 
{
    {
        .callback = QuestCondition_SpeciesMasteryComplete,
        .passState = QUEST_STATUS_SUCCESS,
        .failState = QUEST_STATUS_FAIL,
        .flags = 0 | QUEST_TRIGGER_ENTER_HALL_OF_FAME,
        .params = sTriggerParams_MARSHADOW_MASTERY_177_0,
        .paramCount = ARRAY_COUNT(sTriggerParams_MARSHADOW_MASTERY_177_0),
    },
};
#endif

#if defined(ROGUE_EXPANSION)
static u8 const sTitle_MELTAN_MASTERY_178[] = _("Meltan Mastery");
extern const u8 gQuestDescText_MELTAN_MASTERY_178[];

static u8 const sCustomPopupTitle_MELTAN_MASTERY_178_1[] = _("Gmax Form");
static u8 const sCustomPopupSubtitle_MELTAN_MASTERY_178_1[] = _("{COLOR LIGHT_BLUE}{SHADOW BLUE}Perma Unlocked!");

static struct CustomPopup const sCustomPopup_MELTAN_MASTERY_178_1 = 
{
    .titleStr = sCustomPopupTitle_MELTAN_MASTERY_178_1,
    .subtitleStr = sCustomPopupSubtitle_MELTAN_MASTERY_178_1,
    .speciesIcon = SPECIES_MELMETAL_GIGANTAMAX,
    .soundEffect = 0,
    .fanfare = MUS_RG_OBTAIN_KEY_ITEM,
};

static struct RogueQuestReward const sRewards_MELTAN_MASTERY_178[] = 
{
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_MONEY,
        .perType = {
            .money = {
                .amount = QUEST_REWARD_SMALL_MONEY,
            }
        }
    },
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = &sCustomPopup_MELTAN_MASTERY_178_1,
        .type = QUEST_REWARD_FLAG,
        .perType = {
            .flag = {
                .flagId = FLAG_ROGUE_STUB,
            }
        }
    },
};
static u16 const sTriggerParams_MELTAN_MASTERY_178_0[] = 
{
    SPECIES_MELTAN,
};
static struct RogueQuestTrigger const sTriggers_MELTAN_MASTERY_178[] = 
{
    {
        .callback = QuestCondition_SpeciesMasteryComplete,
        .passState = QUEST_STATUS_SUCCESS,
        .failState = QUEST_STATUS_FAIL,
        .flags = 0 | QUEST_TRIGGER_ENTER_HALL_OF_FAME,
        .params = sTriggerParams_MELTAN_MASTERY_178_0,
        .paramCount = ARRAY_COUNT(sTriggerParams_MELTAN_MASTERY_178_0),
    },
};
#endif

#if defined(ROGUE_EXPANSION)
static u8 const sTitle_GROOKEY_MASTERY_179[] = _("Grookey Mastery");
extern const u8 gQuestDescText_GROOKEY_MASTERY_179[];

static u8 const sCustomPopupTitle_GROOKEY_MASTERY_179_1[] = _("Gmax Form");
static u8 const sCustomPopupSubtitle_GROOKEY_MASTERY_179_1[] = _("{COLOR LIGHT_BLUE}{SHADOW BLUE}Perma Unlocked!");

static struct CustomPopup const sCustomPopup_GROOKEY_MASTERY_179_1 = 
{
    .titleStr = sCustomPopupTitle_GROOKEY_MASTERY_179_1,
    .subtitleStr = sCustomPopupSubtitle_GROOKEY_MASTERY_179_1,
    .speciesIcon = SPECIES_RILLABOOM_GIGANTAMAX,
    .soundEffect = 0,
    .fanfare = MUS_RG_OBTAIN_KEY_ITEM,
};

static struct RogueQuestReward const sRewards_GROOKEY_MASTERY_179[] = 
{
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_MONEY,
        .perType = {
            .money = {
                .amount = QUEST_REWARD_SMALL_MONEY,
            }
        }
    },
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = &sCustomPopup_GROOKEY_MASTERY_179_1,
        .type = QUEST_REWARD_FLAG,
        .perType = {
            .flag = {
                .flagId = FLAG_ROGUE_STUB,
            }
        }
    },
};
static u16 const sTriggerParams_GROOKEY_MASTERY_179_0[] = 
{
    SPECIES_GROOKEY,
};
static struct RogueQuestTrigger const sTriggers_GROOKEY_MASTERY_179[] = 
{
    {
        .callback = QuestCondition_SpeciesMasteryComplete,
        .passState = QUEST_STATUS_SUCCESS,
        .failState = QUEST_STATUS_FAIL,
        .flags = 0 | QUEST_TRIGGER_ENTER_HALL_OF_FAME,
        .params = sTriggerParams_GROOKEY_MASTERY_179_0,
        .paramCount = ARRAY_COUNT(sTriggerParams_GROOKEY_MASTERY_179_0),
    },
};
#endif

#if defined(ROGUE_EXPANSION)
static u8 const sTitle_SCORBUNNY_MASTERY_180[] = _("Scorbunny Mastery");
extern const u8 gQuestDescText_SCORBUNNY_MASTERY_180[];

static u8 const sCustomPopupTitle_SCORBUNNY_MASTERY_180_1[] = _("Gmax Form");
static u8 const sCustomPopupSubtitle_SCORBUNNY_MASTERY_180_1[] = _("{COLOR LIGHT_BLUE}{SHADOW BLUE}Perma Unlocked!");

static struct CustomPopup const sCustomPopup_SCORBUNNY_MASTERY_180_1 = 
{
    .titleStr = sCustomPopupTitle_SCORBUNNY_MASTERY_180_1,
    .subtitleStr = sCustomPopupSubtitle_SCORBUNNY_MASTERY_180_1,
    .speciesIcon = SPECIES_CINDERACE_GIGANTAMAX,
    .soundEffect = 0,
    .fanfare = MUS_RG_OBTAIN_KEY_ITEM,
};

static struct RogueQuestReward const sRewards_SCORBUNNY_MASTERY_180[] = 
{
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_MONEY,
        .perType = {
            .money = {
                .amount = QUEST_REWARD_SMALL_MONEY,
            }
        }
    },
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = &sCustomPopup_SCORBUNNY_MASTERY_180_1,
        .type = QUEST_REWARD_FLAG,
        .perType = {
            .flag = {
                .flagId = FLAG_ROGUE_STUB,
            }
        }
    },
};
static u16 const sTriggerParams_SCORBUNNY_MASTERY_180_0[] = 
{
    SPECIES_SCORBUNNY,
};
static struct RogueQuestTrigger const sTriggers_SCORBUNNY_MASTERY_180[] = 
{
    {
        .callback = QuestCondition_SpeciesMasteryComplete,
        .passState = QUEST_STATUS_SUCCESS,
        .failState = QUEST_STATUS_FAIL,
        .flags = 0 | QUEST_TRIGGER_ENTER_HALL_OF_FAME,
        .params = sTriggerParams_SCORBUNNY_MASTERY_180_0,
        .paramCount = ARRAY_COUNT(sTriggerParams_SCORBUNNY_MASTERY_180_0),
    },
};
#endif

#if defined(ROGUE_EXPANSION)
static u8 const sTitle_SOBBLE_MASTERY_181[] = _("Sobble Mastery");
extern const u8 gQuestDescText_SOBBLE_MASTERY_181[];

static u8 const sCustomPopupTitle_SOBBLE_MASTERY_181_1[] = _("Gmax Form");
static u8 const sCustomPopupSubtitle_SOBBLE_MASTERY_181_1[] = _("{COLOR LIGHT_BLUE}{SHADOW BLUE}Perma Unlocked!");

static struct CustomPopup const sCustomPopup_SOBBLE_MASTERY_181_1 = 
{
    .titleStr = sCustomPopupTitle_SOBBLE_MASTERY_181_1,
    .subtitleStr = sCustomPopupSubtitle_SOBBLE_MASTERY_181_1,
    .speciesIcon = SPECIES_INTELEON_GIGANTAMAX,
    .soundEffect = 0,
    .fanfare = MUS_RG_OBTAIN_KEY_ITEM,
};

static struct RogueQuestReward const sRewards_SOBBLE_MASTERY_181[] = 
{
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_MONEY,
        .perType = {
            .money = {
                .amount = QUEST_REWARD_SMALL_MONEY,
            }
        }
    },
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = &sCustomPopup_SOBBLE_MASTERY_181_1,
        .type = QUEST_REWARD_FLAG,
        .perType = {
            .flag = {
                .flagId = FLAG_ROGUE_STUB,
            }
        }
    },
};
static u16 const sTriggerParams_SOBBLE_MASTERY_181_0[] = 
{
    SPECIES_SOBBLE,
};
static struct RogueQuestTrigger const sTriggers_SOBBLE_MASTERY_181[] = 
{
    {
        .callback = QuestCondition_SpeciesMasteryComplete,
        .passState = QUEST_STATUS_SUCCESS,
        .failState = QUEST_STATUS_FAIL,
        .flags = 0 | QUEST_TRIGGER_ENTER_HALL_OF_FAME,
        .params = sTriggerParams_SOBBLE_MASTERY_181_0,
        .paramCount = ARRAY_COUNT(sTriggerParams_SOBBLE_MASTERY_181_0),
    },
};
#endif

#if defined(ROGUE_EXPANSION)
static u8 const sTitle_ROOKIDEE_MASTERY_182[] = _("Rookidee Mastery");
extern const u8 gQuestDescText_ROOKIDEE_MASTERY_182[];

static u8 const sCustomPopupTitle_ROOKIDEE_MASTERY_182_1[] = _("Gmax Form");
static u8 const sCustomPopupSubtitle_ROOKIDEE_MASTERY_182_1[] = _("{COLOR LIGHT_BLUE}{SHADOW BLUE}Perma Unlocked!");

static struct CustomPopup const sCustomPopup_ROOKIDEE_MASTERY_182_1 = 
{
    .titleStr = sCustomPopupTitle_ROOKIDEE_MASTERY_182_1,
    .subtitleStr = sCustomPopupSubtitle_ROOKIDEE_MASTERY_182_1,
    .speciesIcon = SPECIES_CORVIKNIGHT_GIGANTAMAX,
    .soundEffect = 0,
    .fanfare = MUS_RG_OBTAIN_KEY_ITEM,
};

static struct RogueQuestReward const sRewards_ROOKIDEE_MASTERY_182[] = 
{
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_MONEY,
        .perType = {
            .money = {
                .amount = QUEST_REWARD_SMALL_MONEY,
            }
        }
    },
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = &sCustomPopup_ROOKIDEE_MASTERY_182_1,
        .type = QUEST_REWARD_FLAG,
        .perType = {
            .flag = {
                .flagId = FLAG_ROGUE_STUB,
            }
        }
    },
};
static u16 const sTriggerParams_ROOKIDEE_MASTERY_182_0[] = 
{
    SPECIES_ROOKIDEE,
};
static struct RogueQuestTrigger const sTriggers_ROOKIDEE_MASTERY_182[] = 
{
    {
        .callback = QuestCondition_SpeciesMasteryComplete,
        .passState = QUEST_STATUS_SUCCESS,
        .failState = QUEST_STATUS_FAIL,
        .flags = 0 | QUEST_TRIGGER_ENTER_HALL_OF_FAME,
        .params = sTriggerParams_ROOKIDEE_MASTERY_182_0,
        .paramCount = ARRAY_COUNT(sTriggerParams_ROOKIDEE_MASTERY_182_0),
    },
};
#endif

#if defined(ROGUE_EXPANSION)
static u8 const sTitle_BLIPBUG_MASTERY_183[] = _("Blipbug Mastery");
extern const u8 gQuestDescText_BLIPBUG_MASTERY_183[];

static u8 const sCustomPopupTitle_BLIPBUG_MASTERY_183_1[] = _("Gmax Form");
static u8 const sCustomPopupSubtitle_BLIPBUG_MASTERY_183_1[] = _("{COLOR LIGHT_BLUE}{SHADOW BLUE}Perma Unlocked!");

static struct CustomPopup const sCustomPopup_BLIPBUG_MASTERY_183_1 = 
{
    .titleStr = sCustomPopupTitle_BLIPBUG_MASTERY_183_1,
    .subtitleStr = sCustomPopupSubtitle_BLIPBUG_MASTERY_183_1,
    .speciesIcon = SPECIES_ORBEETLE_GIGANTAMAX,
    .soundEffect = 0,
    .fanfare = MUS_RG_OBTAIN_KEY_ITEM,
};

static struct RogueQuestReward const sRewards_BLIPBUG_MASTERY_183[] = 
{
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_MONEY,
        .perType = {
            .money = {
                .amount = QUEST_REWARD_SMALL_MONEY,
            }
        }
    },
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = &sCustomPopup_BLIPBUG_MASTERY_183_1,
        .type = QUEST_REWARD_FLAG,
        .perType = {
            .flag = {
                .flagId = FLAG_ROGUE_STUB,
            }
        }
    },
};
static u16 const sTriggerParams_BLIPBUG_MASTERY_183_0[] = 
{
    SPECIES_BLIPBUG,
};
static struct RogueQuestTrigger const sTriggers_BLIPBUG_MASTERY_183[] = 
{
    {
        .callback = QuestCondition_SpeciesMasteryComplete,
        .passState = QUEST_STATUS_SUCCESS,
        .failState = QUEST_STATUS_FAIL,
        .flags = 0 | QUEST_TRIGGER_ENTER_HALL_OF_FAME,
        .params = sTriggerParams_BLIPBUG_MASTERY_183_0,
        .paramCount = ARRAY_COUNT(sTriggerParams_BLIPBUG_MASTERY_183_0),
    },
};
#endif

#if defined(ROGUE_EXPANSION)
static u8 const sTitle_CHEWTLE_MASTERY_184[] = _("Chewtle Mastery");
extern const u8 gQuestDescText_CHEWTLE_MASTERY_184[];

static u8 const sCustomPopupTitle_CHEWTLE_MASTERY_184_1[] = _("Gmax Form");
static u8 const sCustomPopupSubtitle_CHEWTLE_MASTERY_184_1[] = _("{COLOR LIGHT_BLUE}{SHADOW BLUE}Perma Unlocked!");

static struct CustomPopup const sCustomPopup_CHEWTLE_MASTERY_184_1 = 
{
    .titleStr = sCustomPopupTitle_CHEWTLE_MASTERY_184_1,
    .subtitleStr = sCustomPopupSubtitle_CHEWTLE_MASTERY_184_1,
    .speciesIcon = SPECIES_DREDNAW_GIGANTAMAX,
    .soundEffect = 0,
    .fanfare = MUS_RG_OBTAIN_KEY_ITEM,
};

static struct RogueQuestReward const sRewards_CHEWTLE_MASTERY_184[] = 
{
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_MONEY,
        .perType = {
            .money = {
                .amount = QUEST_REWARD_SMALL_MONEY,
            }
        }
    },
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = &sCustomPopup_CHEWTLE_MASTERY_184_1,
        .type = QUEST_REWARD_FLAG,
        .perType = {
            .flag = {
                .flagId = FLAG_ROGUE_STUB,
            }
        }
    },
};
static u16 const sTriggerParams_CHEWTLE_MASTERY_184_0[] = 
{
    SPECIES_CHEWTLE,
};
static struct RogueQuestTrigger const sTriggers_CHEWTLE_MASTERY_184[] = 
{
    {
        .callback = QuestCondition_SpeciesMasteryComplete,
        .passState = QUEST_STATUS_SUCCESS,
        .failState = QUEST_STATUS_FAIL,
        .flags = 0 | QUEST_TRIGGER_ENTER_HALL_OF_FAME,
        .params = sTriggerParams_CHEWTLE_MASTERY_184_0,
        .paramCount = ARRAY_COUNT(sTriggerParams_CHEWTLE_MASTERY_184_0),
    },
};
#endif

#if defined(ROGUE_EXPANSION)
static u8 const sTitle_ROLYCOLY_MASTERY_185[] = _("Rolycoly Mastery");
extern const u8 gQuestDescText_ROLYCOLY_MASTERY_185[];

static u8 const sCustomPopupTitle_ROLYCOLY_MASTERY_185_1[] = _("Gmax Form");
static u8 const sCustomPopupSubtitle_ROLYCOLY_MASTERY_185_1[] = _("{COLOR LIGHT_BLUE}{SHADOW BLUE}Perma Unlocked!");

static struct CustomPopup const sCustomPopup_ROLYCOLY_MASTERY_185_1 = 
{
    .titleStr = sCustomPopupTitle_ROLYCOLY_MASTERY_185_1,
    .subtitleStr = sCustomPopupSubtitle_ROLYCOLY_MASTERY_185_1,
    .speciesIcon = SPECIES_COALOSSAL_GIGANTAMAX,
    .soundEffect = 0,
    .fanfare = MUS_RG_OBTAIN_KEY_ITEM,
};

static struct RogueQuestReward const sRewards_ROLYCOLY_MASTERY_185[] = 
{
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_MONEY,
        .perType = {
            .money = {
                .amount = QUEST_REWARD_SMALL_MONEY,
            }
        }
    },
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = &sCustomPopup_ROLYCOLY_MASTERY_185_1,
        .type = QUEST_REWARD_FLAG,
        .perType = {
            .flag = {
                .flagId = FLAG_ROGUE_STUB,
            }
        }
    },
};
static u16 const sTriggerParams_ROLYCOLY_MASTERY_185_0[] = 
{
    SPECIES_ROLYCOLY,
};
static struct RogueQuestTrigger const sTriggers_ROLYCOLY_MASTERY_185[] = 
{
    {
        .callback = QuestCondition_SpeciesMasteryComplete,
        .passState = QUEST_STATUS_SUCCESS,
        .failState = QUEST_STATUS_FAIL,
        .flags = 0 | QUEST_TRIGGER_ENTER_HALL_OF_FAME,
        .params = sTriggerParams_ROLYCOLY_MASTERY_185_0,
        .paramCount = ARRAY_COUNT(sTriggerParams_ROLYCOLY_MASTERY_185_0),
    },
};
#endif

#if defined(ROGUE_EXPANSION)
static u8 const sTitle_APPLIN_MASTERY_186[] = _("Applin Mastery");
extern const u8 gQuestDescText_APPLIN_MASTERY_186[];

static u8 const sCustomPopupTitle_APPLIN_MASTERY_186_1[] = _("Gmax Form");
static u8 const sCustomPopupSubtitle_APPLIN_MASTERY_186_1[] = _("{COLOR LIGHT_BLUE}{SHADOW BLUE}Perma Unlocked!");

static struct CustomPopup const sCustomPopup_APPLIN_MASTERY_186_1 = 
{
    .titleStr = sCustomPopupTitle_APPLIN_MASTERY_186_1,
    .subtitleStr = sCustomPopupSubtitle_APPLIN_MASTERY_186_1,
    .speciesIcon = SPECIES_FLAPPLE_GIGANTAMAX,
    .soundEffect = 0,
    .fanfare = MUS_RG_OBTAIN_KEY_ITEM,
};

static struct RogueQuestReward const sRewards_APPLIN_MASTERY_186[] = 
{
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_MONEY,
        .perType = {
            .money = {
                .amount = QUEST_REWARD_SMALL_MONEY,
            }
        }
    },
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = &sCustomPopup_APPLIN_MASTERY_186_1,
        .type = QUEST_REWARD_FLAG,
        .perType = {
            .flag = {
                .flagId = FLAG_ROGUE_STUB,
            }
        }
    },
};
static u16 const sTriggerParams_APPLIN_MASTERY_186_0[] = 
{
    SPECIES_APPLIN,
};
static struct RogueQuestTrigger const sTriggers_APPLIN_MASTERY_186[] = 
{
    {
        .callback = QuestCondition_SpeciesMasteryComplete,
        .passState = QUEST_STATUS_SUCCESS,
        .failState = QUEST_STATUS_FAIL,
        .flags = 0 | QUEST_TRIGGER_ENTER_HALL_OF_FAME,
        .params = sTriggerParams_APPLIN_MASTERY_186_0,
        .paramCount = ARRAY_COUNT(sTriggerParams_APPLIN_MASTERY_186_0),
    },
};
#endif

#if defined(ROGUE_EXPANSION)
static u8 const sTitle_SILICOBRA_MASTERY_187[] = _("Silicobra Mastery");
extern const u8 gQuestDescText_SILICOBRA_MASTERY_187[];

static u8 const sCustomPopupTitle_SILICOBRA_MASTERY_187_1[] = _("Gmax Form");
static u8 const sCustomPopupSubtitle_SILICOBRA_MASTERY_187_1[] = _("{COLOR LIGHT_BLUE}{SHADOW BLUE}Perma Unlocked!");

static struct CustomPopup const sCustomPopup_SILICOBRA_MASTERY_187_1 = 
{
    .titleStr = sCustomPopupTitle_SILICOBRA_MASTERY_187_1,
    .subtitleStr = sCustomPopupSubtitle_SILICOBRA_MASTERY_187_1,
    .speciesIcon = SPECIES_SANDACONDA_GIGANTAMAX,
    .soundEffect = 0,
    .fanfare = MUS_RG_OBTAIN_KEY_ITEM,
};

static struct RogueQuestReward const sRewards_SILICOBRA_MASTERY_187[] = 
{
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_MONEY,
        .perType = {
            .money = {
                .amount = QUEST_REWARD_SMALL_MONEY,
            }
        }
    },
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = &sCustomPopup_SILICOBRA_MASTERY_187_1,
        .type = QUEST_REWARD_FLAG,
        .perType = {
            .flag = {
                .flagId = FLAG_ROGUE_STUB,
            }
        }
    },
};
static u16 const sTriggerParams_SILICOBRA_MASTERY_187_0[] = 
{
    SPECIES_SILICOBRA,
};
static struct RogueQuestTrigger const sTriggers_SILICOBRA_MASTERY_187[] = 
{
    {
        .callback = QuestCondition_SpeciesMasteryComplete,
        .passState = QUEST_STATUS_SUCCESS,
        .failState = QUEST_STATUS_FAIL,
        .flags = 0 | QUEST_TRIGGER_ENTER_HALL_OF_FAME,
        .params = sTriggerParams_SILICOBRA_MASTERY_187_0,
        .paramCount = ARRAY_COUNT(sTriggerParams_SILICOBRA_MASTERY_187_0),
    },
};
#endif

#if defined(ROGUE_EXPANSION)
static u8 const sTitle_TOXEL_MASTERY_188[] = _("Toxel Mastery");
extern const u8 gQuestDescText_TOXEL_MASTERY_188[];

static u8 const sCustomPopupTitle_TOXEL_MASTERY_188_1[] = _("Gmax Form");
static u8 const sCustomPopupSubtitle_TOXEL_MASTERY_188_1[] = _("{COLOR LIGHT_BLUE}{SHADOW BLUE}Perma Unlocked!");

static struct CustomPopup const sCustomPopup_TOXEL_MASTERY_188_1 = 
{
    .titleStr = sCustomPopupTitle_TOXEL_MASTERY_188_1,
    .subtitleStr = sCustomPopupSubtitle_TOXEL_MASTERY_188_1,
    .speciesIcon = SPECIES_TOXTRICITY_AMPED_GIGANTAMAX,
    .soundEffect = 0,
    .fanfare = MUS_RG_OBTAIN_KEY_ITEM,
};

static struct RogueQuestReward const sRewards_TOXEL_MASTERY_188[] = 
{
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_MONEY,
        .perType = {
            .money = {
                .amount = QUEST_REWARD_SMALL_MONEY,
            }
        }
    },
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = &sCustomPopup_TOXEL_MASTERY_188_1,
        .type = QUEST_REWARD_FLAG,
        .perType = {
            .flag = {
                .flagId = FLAG_ROGUE_STUB,
            }
        }
    },
};
static u16 const sTriggerParams_TOXEL_MASTERY_188_0[] = 
{
    SPECIES_TOXEL,
};
static struct RogueQuestTrigger const sTriggers_TOXEL_MASTERY_188[] = 
{
    {
        .callback = QuestCondition_SpeciesMasteryComplete,
        .passState = QUEST_STATUS_SUCCESS,
        .failState = QUEST_STATUS_FAIL,
        .flags = 0 | QUEST_TRIGGER_ENTER_HALL_OF_FAME,
        .params = sTriggerParams_TOXEL_MASTERY_188_0,
        .paramCount = ARRAY_COUNT(sTriggerParams_TOXEL_MASTERY_188_0),
    },
};
#endif

#if defined(ROGUE_EXPANSION)
static u8 const sTitle_SIZZLIPEDE_MASTERY_189[] = _("Sizzlipede Mastery");
extern const u8 gQuestDescText_SIZZLIPEDE_MASTERY_189[];

static u8 const sCustomPopupTitle_SIZZLIPEDE_MASTERY_189_1[] = _("Gmax Form");
static u8 const sCustomPopupSubtitle_SIZZLIPEDE_MASTERY_189_1[] = _("{COLOR LIGHT_BLUE}{SHADOW BLUE}Perma Unlocked!");

static struct CustomPopup const sCustomPopup_SIZZLIPEDE_MASTERY_189_1 = 
{
    .titleStr = sCustomPopupTitle_SIZZLIPEDE_MASTERY_189_1,
    .subtitleStr = sCustomPopupSubtitle_SIZZLIPEDE_MASTERY_189_1,
    .speciesIcon = SPECIES_CENTISKORCH_GIGANTAMAX,
    .soundEffect = 0,
    .fanfare = MUS_RG_OBTAIN_KEY_ITEM,
};

static struct RogueQuestReward const sRewards_SIZZLIPEDE_MASTERY_189[] = 
{
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_MONEY,
        .perType = {
            .money = {
                .amount = QUEST_REWARD_SMALL_MONEY,
            }
        }
    },
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = &sCustomPopup_SIZZLIPEDE_MASTERY_189_1,
        .type = QUEST_REWARD_FLAG,
        .perType = {
            .flag = {
                .flagId = FLAG_ROGUE_STUB,
            }
        }
    },
};
static u16 const sTriggerParams_SIZZLIPEDE_MASTERY_189_0[] = 
{
    SPECIES_SIZZLIPEDE,
};
static struct RogueQuestTrigger const sTriggers_SIZZLIPEDE_MASTERY_189[] = 
{
    {
        .callback = QuestCondition_SpeciesMasteryComplete,
        .passState = QUEST_STATUS_SUCCESS,
        .failState = QUEST_STATUS_FAIL,
        .flags = 0 | QUEST_TRIGGER_ENTER_HALL_OF_FAME,
        .params = sTriggerParams_SIZZLIPEDE_MASTERY_189_0,
        .paramCount = ARRAY_COUNT(sTriggerParams_SIZZLIPEDE_MASTERY_189_0),
    },
};
#endif

#if defined(ROGUE_EXPANSION)
static u8 const sTitle_HATENNA_MASTERY_190[] = _("Hatenna Mastery");
extern const u8 gQuestDescText_HATENNA_MASTERY_190[];

static u8 const sCustomPopupTitle_HATENNA_MASTERY_190_1[] = _("Gmax Form");
static u8 const sCustomPopupSubtitle_HATENNA_MASTERY_190_1[] = _("{COLOR LIGHT_BLUE}{SHADOW BLUE}Perma Unlocked!");

static struct CustomPopup const sCustomPopup_HATENNA_MASTERY_190_1 = 
{
    .titleStr = sCustomPopupTitle_HATENNA_MASTERY_190_1,
    .subtitleStr = sCustomPopupSubtitle_HATENNA_MASTERY_190_1,
    .speciesIcon = SPECIES_HATTERENE_GIGANTAMAX,
    .soundEffect = 0,
    .fanfare = MUS_RG_OBTAIN_KEY_ITEM,
};

static struct RogueQuestReward const sRewards_HATENNA_MASTERY_190[] = 
{
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_MONEY,
        .perType = {
            .money = {
                .amount = QUEST_REWARD_SMALL_MONEY,
            }
        }
    },
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = &sCustomPopup_HATENNA_MASTERY_190_1,
        .type = QUEST_REWARD_FLAG,
        .perType = {
            .flag = {
                .flagId = FLAG_ROGUE_STUB,
            }
        }
    },
};
static u16 const sTriggerParams_HATENNA_MASTERY_190_0[] = 
{
    SPECIES_HATENNA,
};
static struct RogueQuestTrigger const sTriggers_HATENNA_MASTERY_190[] = 
{
    {
        .callback = QuestCondition_SpeciesMasteryComplete,
        .passState = QUEST_STATUS_SUCCESS,
        .failState = QUEST_STATUS_FAIL,
        .flags = 0 | QUEST_TRIGGER_ENTER_HALL_OF_FAME,
        .params = sTriggerParams_HATENNA_MASTERY_190_0,
        .paramCount = ARRAY_COUNT(sTriggerParams_HATENNA_MASTERY_190_0),
    },
};
#endif

#if defined(ROGUE_EXPANSION)
static u8 const sTitle_IMPIDIMP_MASTERY_191[] = _("Impidimp Mastery");
extern const u8 gQuestDescText_IMPIDIMP_MASTERY_191[];

static u8 const sCustomPopupTitle_IMPIDIMP_MASTERY_191_1[] = _("Gmax Form");
static u8 const sCustomPopupSubtitle_IMPIDIMP_MASTERY_191_1[] = _("{COLOR LIGHT_BLUE}{SHADOW BLUE}Perma Unlocked!");

static struct CustomPopup const sCustomPopup_IMPIDIMP_MASTERY_191_1 = 
{
    .titleStr = sCustomPopupTitle_IMPIDIMP_MASTERY_191_1,
    .subtitleStr = sCustomPopupSubtitle_IMPIDIMP_MASTERY_191_1,
    .speciesIcon = SPECIES_GRIMMSNARL_GIGANTAMAX,
    .soundEffect = 0,
    .fanfare = MUS_RG_OBTAIN_KEY_ITEM,
};

static struct RogueQuestReward const sRewards_IMPIDIMP_MASTERY_191[] = 
{
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_MONEY,
        .perType = {
            .money = {
                .amount = QUEST_REWARD_SMALL_MONEY,
            }
        }
    },
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = &sCustomPopup_IMPIDIMP_MASTERY_191_1,
        .type = QUEST_REWARD_FLAG,
        .perType = {
            .flag = {
                .flagId = FLAG_ROGUE_STUB,
            }
        }
    },
};
static u16 const sTriggerParams_IMPIDIMP_MASTERY_191_0[] = 
{
    SPECIES_IMPIDIMP,
};
static struct RogueQuestTrigger const sTriggers_IMPIDIMP_MASTERY_191[] = 
{
    {
        .callback = QuestCondition_SpeciesMasteryComplete,
        .passState = QUEST_STATUS_SUCCESS,
        .failState = QUEST_STATUS_FAIL,
        .flags = 0 | QUEST_TRIGGER_ENTER_HALL_OF_FAME,
        .params = sTriggerParams_IMPIDIMP_MASTERY_191_0,
        .paramCount = ARRAY_COUNT(sTriggerParams_IMPIDIMP_MASTERY_191_0),
    },
};
#endif

#if defined(ROGUE_EXPANSION)
static u8 const sTitle_MILCERY_MASTERY_192[] = _("Milcery Mastery");
extern const u8 gQuestDescText_MILCERY_MASTERY_192[];

static u8 const sCustomPopupTitle_MILCERY_MASTERY_192_1[] = _("Gmax Form");
static u8 const sCustomPopupSubtitle_MILCERY_MASTERY_192_1[] = _("{COLOR LIGHT_BLUE}{SHADOW BLUE}Perma Unlocked!");

static struct CustomPopup const sCustomPopup_MILCERY_MASTERY_192_1 = 
{
    .titleStr = sCustomPopupTitle_MILCERY_MASTERY_192_1,
    .subtitleStr = sCustomPopupSubtitle_MILCERY_MASTERY_192_1,
    .speciesIcon = SPECIES_ALCREMIE_GIGANTAMAX,
    .soundEffect = 0,
    .fanfare = MUS_RG_OBTAIN_KEY_ITEM,
};

static struct RogueQuestReward const sRewards_MILCERY_MASTERY_192[] = 
{
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_MONEY,
        .perType = {
            .money = {
                .amount = QUEST_REWARD_SMALL_MONEY,
            }
        }
    },
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = &sCustomPopup_MILCERY_MASTERY_192_1,
        .type = QUEST_REWARD_FLAG,
        .perType = {
            .flag = {
                .flagId = FLAG_ROGUE_STUB,
            }
        }
    },
};
static u16 const sTriggerParams_MILCERY_MASTERY_192_0[] = 
{
    SPECIES_MILCERY,
};
static struct RogueQuestTrigger const sTriggers_MILCERY_MASTERY_192[] = 
{
    {
        .callback = QuestCondition_SpeciesMasteryComplete,
        .passState = QUEST_STATUS_SUCCESS,
        .failState = QUEST_STATUS_FAIL,
        .flags = 0 | QUEST_TRIGGER_ENTER_HALL_OF_FAME,
        .params = sTriggerParams_MILCERY_MASTERY_192_0,
        .paramCount = ARRAY_COUNT(sTriggerParams_MILCERY_MASTERY_192_0),
    },
};
#endif

#if defined(ROGUE_EXPANSION)
static u8 const sTitle_CUFANT_MASTERY_193[] = _("Cufant Mastery");
extern const u8 gQuestDescText_CUFANT_MASTERY_193[];

static u8 const sCustomPopupTitle_CUFANT_MASTERY_193_1[] = _("Gmax Form");
static u8 const sCustomPopupSubtitle_CUFANT_MASTERY_193_1[] = _("{COLOR LIGHT_BLUE}{SHADOW BLUE}Perma Unlocked!");

static struct CustomPopup const sCustomPopup_CUFANT_MASTERY_193_1 = 
{
    .titleStr = sCustomPopupTitle_CUFANT_MASTERY_193_1,
    .subtitleStr = sCustomPopupSubtitle_CUFANT_MASTERY_193_1,
    .speciesIcon = SPECIES_COPPERAJAH_GIGANTAMAX,
    .soundEffect = 0,
    .fanfare = MUS_RG_OBTAIN_KEY_ITEM,
};

static struct RogueQuestReward const sRewards_CUFANT_MASTERY_193[] = 
{
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_MONEY,
        .perType = {
            .money = {
                .amount = QUEST_REWARD_SMALL_MONEY,
            }
        }
    },
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = &sCustomPopup_CUFANT_MASTERY_193_1,
        .type = QUEST_REWARD_FLAG,
        .perType = {
            .flag = {
                .flagId = FLAG_ROGUE_STUB,
            }
        }
    },
};
static u16 const sTriggerParams_CUFANT_MASTERY_193_0[] = 
{
    SPECIES_CUFANT,
};
static struct RogueQuestTrigger const sTriggers_CUFANT_MASTERY_193[] = 
{
    {
        .callback = QuestCondition_SpeciesMasteryComplete,
        .passState = QUEST_STATUS_SUCCESS,
        .failState = QUEST_STATUS_FAIL,
        .flags = 0 | QUEST_TRIGGER_ENTER_HALL_OF_FAME,
        .params = sTriggerParams_CUFANT_MASTERY_193_0,
        .paramCount = ARRAY_COUNT(sTriggerParams_CUFANT_MASTERY_193_0),
    },
};
#endif

#if defined(ROGUE_EXPANSION)
static u8 const sTitle_DURALUDON_MASTERY_194[] = _("Duraludon Mastery");
extern const u8 gQuestDescText_DURALUDON_MASTERY_194[];

static u8 const sCustomPopupTitle_DURALUDON_MASTERY_194_1[] = _("Gmax Form");
static u8 const sCustomPopupSubtitle_DURALUDON_MASTERY_194_1[] = _("{COLOR LIGHT_BLUE}{SHADOW BLUE}Perma Unlocked!");

static struct CustomPopup const sCustomPopup_DURALUDON_MASTERY_194_1 = 
{
    .titleStr = sCustomPopupTitle_DURALUDON_MASTERY_194_1,
    .subtitleStr = sCustomPopupSubtitle_DURALUDON_MASTERY_194_1,
    .speciesIcon = SPECIES_DURALUDON_GIGANTAMAX,
    .soundEffect = 0,
    .fanfare = MUS_RG_OBTAIN_KEY_ITEM,
};

static struct RogueQuestReward const sRewards_DURALUDON_MASTERY_194[] = 
{
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_MONEY,
        .perType = {
            .money = {
                .amount = QUEST_REWARD_SMALL_MONEY,
            }
        }
    },
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = &sCustomPopup_DURALUDON_MASTERY_194_1,
        .type = QUEST_REWARD_FLAG,
        .perType = {
            .flag = {
                .flagId = FLAG_ROGUE_STUB,
            }
        }
    },
};
static u16 const sTriggerParams_DURALUDON_MASTERY_194_0[] = 
{
    SPECIES_DURALUDON,
};
static struct RogueQuestTrigger const sTriggers_DURALUDON_MASTERY_194[] = 
{
    {
        .callback = QuestCondition_SpeciesMasteryComplete,
        .passState = QUEST_STATUS_SUCCESS,
        .failState = QUEST_STATUS_FAIL,
        .flags = 0 | QUEST_TRIGGER_ENTER_HALL_OF_FAME,
        .params = sTriggerParams_DURALUDON_MASTERY_194_0,
        .paramCount = ARRAY_COUNT(sTriggerParams_DURALUDON_MASTERY_194_0),
    },
};
#endif

#if defined(ROGUE_EXPANSION)
static u8 const sTitle_ZACIAN_MASTERY_195[] = _("Zacian Mastery");
extern const u8 gQuestDescText_ZACIAN_MASTERY_195[];

static struct RogueQuestReward const sRewards_ZACIAN_MASTERY_195[] = 
{
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_MONEY,
        .perType = {
            .money = {
                .amount = QUEST_REWARD_SMALL_MONEY,
            }
        }
    },
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_SHOP_ITEM,
        .perType = {
            .shopItem = {
                .item = ITEM_RUSTED_SWORD,
            }
        }
    },
};
static u16 const sTriggerParams_ZACIAN_MASTERY_195_0[] = 
{
    SPECIES_ZACIAN,
};
static struct RogueQuestTrigger const sTriggers_ZACIAN_MASTERY_195[] = 
{
    {
        .callback = QuestCondition_SpeciesMasteryComplete,
        .passState = QUEST_STATUS_SUCCESS,
        .failState = QUEST_STATUS_FAIL,
        .flags = 0 | QUEST_TRIGGER_ENTER_HALL_OF_FAME,
        .params = sTriggerParams_ZACIAN_MASTERY_195_0,
        .paramCount = ARRAY_COUNT(sTriggerParams_ZACIAN_MASTERY_195_0),
    },
};
#endif

#if defined(ROGUE_EXPANSION)
static u8 const sTitle_ZAMAZENTA_MASTERY_196[] = _("Zamazenta Mastery");
extern const u8 gQuestDescText_ZAMAZENTA_MASTERY_196[];

static struct RogueQuestReward const sRewards_ZAMAZENTA_MASTERY_196[] = 
{
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_MONEY,
        .perType = {
            .money = {
                .amount = QUEST_REWARD_SMALL_MONEY,
            }
        }
    },
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_SHOP_ITEM,
        .perType = {
            .shopItem = {
                .item = ITEM_RUSTED_SHIELD,
            }
        }
    },
};
static u16 const sTriggerParams_ZAMAZENTA_MASTERY_196_0[] = 
{
    SPECIES_ZAMAZENTA,
};
static struct RogueQuestTrigger const sTriggers_ZAMAZENTA_MASTERY_196[] = 
{
    {
        .callback = QuestCondition_SpeciesMasteryComplete,
        .passState = QUEST_STATUS_SUCCESS,
        .failState = QUEST_STATUS_FAIL,
        .flags = 0 | QUEST_TRIGGER_ENTER_HALL_OF_FAME,
        .params = sTriggerParams_ZAMAZENTA_MASTERY_196_0,
        .paramCount = ARRAY_COUNT(sTriggerParams_ZAMAZENTA_MASTERY_196_0),
    },
};
#endif

#if defined(ROGUE_EXPANSION)
static u8 const sTitle_KUBFU_MASTERY_197[] = _("Kubfu Mastery");
extern const u8 gQuestDescText_KUBFU_MASTERY_197[];

static u8 const sCustomPopupTitle_KUBFU_MASTERY_197_1[] = _("Gmax Form");
static u8 const sCustomPopupSubtitle_KUBFU_MASTERY_197_1[] = _("{COLOR LIGHT_BLUE}{SHADOW BLUE}Perma Unlocked!");

static struct CustomPopup const sCustomPopup_KUBFU_MASTERY_197_1 = 
{
    .titleStr = sCustomPopupTitle_KUBFU_MASTERY_197_1,
    .subtitleStr = sCustomPopupSubtitle_KUBFU_MASTERY_197_1,
    .speciesIcon = SPECIES_URSHIFU_SINGLE_STRIKE_STYLE_GIGANTAMAX,
    .soundEffect = 0,
    .fanfare = MUS_RG_OBTAIN_KEY_ITEM,
};

static struct RogueQuestReward const sRewards_KUBFU_MASTERY_197[] = 
{
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_MONEY,
        .perType = {
            .money = {
                .amount = QUEST_REWARD_SMALL_MONEY,
            }
        }
    },
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = &sCustomPopup_KUBFU_MASTERY_197_1,
        .type = QUEST_REWARD_FLAG,
        .perType = {
            .flag = {
                .flagId = FLAG_ROGUE_STUB,
            }
        }
    },
};
static u16 const sTriggerParams_KUBFU_MASTERY_197_0[] = 
{
    SPECIES_KUBFU,
};
static struct RogueQuestTrigger const sTriggers_KUBFU_MASTERY_197[] = 
{
    {
        .callback = QuestCondition_SpeciesMasteryComplete,
        .passState = QUEST_STATUS_SUCCESS,
        .failState = QUEST_STATUS_FAIL,
        .flags = 0 | QUEST_TRIGGER_ENTER_HALL_OF_FAME,
        .params = sTriggerParams_KUBFU_MASTERY_197_0,
        .paramCount = ARRAY_COUNT(sTriggerParams_KUBFU_MASTERY_197_0),
    },
};
#endif

#if defined(ROGUE_EXPANSION)
static u8 const sTitle_OGERPON_MASTERY_198[] = _("Ogerpon Mastery");
extern const u8 gQuestDescText_OGERPON_MASTERY_198[];

static struct RogueQuestReward const sRewards_OGERPON_MASTERY_198[] = 
{
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_MONEY,
        .perType = {
            .money = {
                .amount = QUEST_REWARD_SMALL_MONEY,
            }
        }
    },
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_SHOP_ITEM,
        .perType = {
            .shopItem = {
                .item = ITEM_CORNERSTONE_MASK,
            }
        }
    },
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_SHOP_ITEM,
        .perType = {
            .shopItem = {
                .item = ITEM_WELLSPRING_MASK,
            }
        }
    },
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_SHOP_ITEM,
        .perType = {
            .shopItem = {
                .item = ITEM_HEARTHFLAME_MASK,
            }
        }
    },
};
static u16 const sTriggerParams_OGERPON_MASTERY_198_0[] = 
{
    SPECIES_OGERPON,
};
static struct RogueQuestTrigger const sTriggers_OGERPON_MASTERY_198[] = 
{
    {
        .callback = QuestCondition_SpeciesMasteryComplete,
        .passState = QUEST_STATUS_SUCCESS,
        .failState = QUEST_STATUS_FAIL,
        .flags = 0 | QUEST_TRIGGER_ENTER_HALL_OF_FAME,
        .params = sTriggerParams_OGERPON_MASTERY_198_0,
        .paramCount = ARRAY_COUNT(sTriggerParams_OGERPON_MASTERY_198_0),
    },
};
#endif

#if defined(ROGUE_EXPANSION)
static u8 const sTitle_TERAPAGOS_MASTERY_199[] = _("Terapagos Mastery");
extern const u8 gQuestDescText_TERAPAGOS_MASTERY_199[];

static struct RogueQuestReward const sRewards_TERAPAGOS_MASTERY_199[] = 
{
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_MONEY,
        .perType = {
            .money = {
                .amount = QUEST_REWARD_SMALL_MONEY,
            }
        }
    },
    {
        .visiblity = QUEST_REWARD_VISIBLITY_DEFAULT,
        .requiredDifficulty = DIFFICULTY_LEVEL_EASY,
        .customPopup = NULL,
        .type = QUEST_REWARD_SHOP_ITEM,
        .perType = {
            .shopItem = {
                .item = ITEM_STELLAR_TERA_SHARD,
            }
        }
    },
};
static u16 const sTriggerParams_TERAPAGOS_MASTERY_199_0[] = 
{
    SPECIES_TERAPAGOS,
};
static struct RogueQuestTrigger const sTriggers_TERAPAGOS_MASTERY_199[] = 
{
    {
        .callback = QuestCondition_SpeciesMasteryComplete,
        .passState = QUEST_STATUS_SUCCESS,
        .failState = QUEST_STATUS_FAIL,
        .flags = 0 | QUEST_TRIGGER_ENTER_HALL_OF_FAME,
        .params = sTriggerParams_TERAPAGOS_MASTERY_199_0,
        .paramCount = ARRAY_COUNT(sTriggerParams_TERAPAGOS_MASTERY_199_0),
    },
};
#endif

static struct RogueQuestEntry const sQuestEntries[] =
{
    [QUEST_ID_TO_ADVENTUREEMARK] = 
    {
        .title = sTitle_TO_ADVENTUREEMARK_0,
        .desc = gQuestDescText_TO_ADVENTUREEMARK_0,
        .flags = 0 | QUEST_CONST_MAIN_QUEST_DEFAULT | QUEST_CONST_ACTIVE_IN_RUN | QUEST_CONST_UNLOCKED_BY_DEFAULT,
        .triggers = sTriggers_TO_ADVENTUREEMARK_0,
        .triggerCount = ARRAY_COUNT(sTriggers_TO_ADVENTUREEMARK_0),
        .triggerFlags = 0 | QUEST_TRIGGER_RUN_END,
        .rewards = sRewards_TO_ADVENTUREEMARK_0,
        .rewardCount = ARRAY_COUNT(sRewards_TO_ADVENTUREEMARK_0),
        .requirements = NULL,
        .requirementCount = 0,
    },
    [QUEST_ID_GYM_BADGE_1] = 
    {
        .title = sTitle_GYM_BADGE_1_1,
        .desc = gQuestDescText_GYM_BADGE_1_1,
        .flags = 0 | QUEST_CONST_MAIN_QUEST_DEFAULT | QUEST_CONST_ACTIVE_IN_RUN | QUEST_CONST_UNLOCKED_BY_DEFAULT,
        .triggers = sTriggers_GYM_BADGE_1_1,
        .triggerCount = ARRAY_COUNT(sTriggers_GYM_BADGE_1_1),
        .triggerFlags = 0 | QUEST_TRIGGER_EARN_BADGE,
        .rewards = sRewards_GYM_BADGE_1_1,
        .rewardCount = ARRAY_COUNT(sRewards_GYM_BADGE_1_1),
        .requirements = NULL,
        .requirementCount = 0,
    },
    [QUEST_ID_GYM_BADGE_2] = 
    {
        .title = sTitle_GYM_BADGE_2_2,
        .desc = gQuestDescText_GYM_BADGE_2_2,
        .flags = 0 | QUEST_CONST_MAIN_QUEST_DEFAULT | QUEST_CONST_ACTIVE_IN_RUN | QUEST_CONST_UNLOCKED_BY_DEFAULT,
        .triggers = sTriggers_GYM_BADGE_2_2,
        .triggerCount = ARRAY_COUNT(sTriggers_GYM_BADGE_2_2),
        .triggerFlags = 0 | QUEST_TRIGGER_EARN_BADGE,
        .rewards = sRewards_GYM_BADGE_2_2,
        .rewardCount = ARRAY_COUNT(sRewards_GYM_BADGE_2_2),
        .requirements = NULL,
        .requirementCount = 0,
    },
    [QUEST_ID_GYM_BADGE_3] = 
    {
        .title = sTitle_GYM_BADGE_3_3,
        .desc = gQuestDescText_GYM_BADGE_3_3,
        .flags = 0 | QUEST_CONST_MAIN_QUEST_DEFAULT | QUEST_CONST_ACTIVE_IN_RUN | QUEST_CONST_UNLOCKED_BY_DEFAULT,
        .triggers = sTriggers_GYM_BADGE_3_3,
        .triggerCount = ARRAY_COUNT(sTriggers_GYM_BADGE_3_3),
        .triggerFlags = 0 | QUEST_TRIGGER_EARN_BADGE,
        .rewards = sRewards_GYM_BADGE_3_3,
        .rewardCount = ARRAY_COUNT(sRewards_GYM_BADGE_3_3),
        .requirements = NULL,
        .requirementCount = 0,
    },
    [QUEST_ID_GYM_BADGE_4] = 
    {
        .title = sTitle_GYM_BADGE_4_4,
        .desc = gQuestDescText_GYM_BADGE_4_4,
        .flags = 0 | QUEST_CONST_MAIN_QUEST_DEFAULT | QUEST_CONST_ACTIVE_IN_RUN | QUEST_CONST_UNLOCKED_BY_DEFAULT,
        .triggers = sTriggers_GYM_BADGE_4_4,
        .triggerCount = ARRAY_COUNT(sTriggers_GYM_BADGE_4_4),
        .triggerFlags = 0 | QUEST_TRIGGER_EARN_BADGE,
        .rewards = sRewards_GYM_BADGE_4_4,
        .rewardCount = ARRAY_COUNT(sRewards_GYM_BADGE_4_4),
        .requirements = NULL,
        .requirementCount = 0,
    },
    [QUEST_ID_GYM_BADGE_5] = 
    {
        .title = sTitle_GYM_BADGE_5_5,
        .desc = gQuestDescText_GYM_BADGE_5_5,
        .flags = 0 | QUEST_CONST_MAIN_QUEST_DEFAULT | QUEST_CONST_ACTIVE_IN_RUN | QUEST_CONST_UNLOCKED_BY_DEFAULT,
        .triggers = sTriggers_GYM_BADGE_5_5,
        .triggerCount = ARRAY_COUNT(sTriggers_GYM_BADGE_5_5),
        .triggerFlags = 0 | QUEST_TRIGGER_EARN_BADGE,
        .rewards = sRewards_GYM_BADGE_5_5,
        .rewardCount = ARRAY_COUNT(sRewards_GYM_BADGE_5_5),
        .requirements = NULL,
        .requirementCount = 0,
    },
    [QUEST_ID_GYM_BADGE_6] = 
    {
        .title = sTitle_GYM_BADGE_6_6,
        .desc = gQuestDescText_GYM_BADGE_6_6,
        .flags = 0 | QUEST_CONST_MAIN_QUEST_DEFAULT | QUEST_CONST_ACTIVE_IN_RUN | QUEST_CONST_UNLOCKED_BY_DEFAULT,
        .triggers = sTriggers_GYM_BADGE_6_6,
        .triggerCount = ARRAY_COUNT(sTriggers_GYM_BADGE_6_6),
        .triggerFlags = 0 | QUEST_TRIGGER_EARN_BADGE,
        .rewards = sRewards_GYM_BADGE_6_6,
        .rewardCount = ARRAY_COUNT(sRewards_GYM_BADGE_6_6),
        .requirements = NULL,
        .requirementCount = 0,
    },
    [QUEST_ID_GYM_BADGE_7] = 
    {
        .title = sTitle_GYM_BADGE_7_7,
        .desc = gQuestDescText_GYM_BADGE_7_7,
        .flags = 0 | QUEST_CONST_MAIN_QUEST_DEFAULT | QUEST_CONST_ACTIVE_IN_RUN | QUEST_CONST_UNLOCKED_BY_DEFAULT,
        .triggers = sTriggers_GYM_BADGE_7_7,
        .triggerCount = ARRAY_COUNT(sTriggers_GYM_BADGE_7_7),
        .triggerFlags = 0 | QUEST_TRIGGER_EARN_BADGE,
        .rewards = sRewards_GYM_BADGE_7_7,
        .rewardCount = ARRAY_COUNT(sRewards_GYM_BADGE_7_7),
        .requirements = NULL,
        .requirementCount = 0,
    },
    [QUEST_ID_GYM_BADGE_8] = 
    {
        .title = sTitle_GYM_BADGE_8_8,
        .desc = gQuestDescText_GYM_BADGE_8_8,
        .flags = 0 | QUEST_CONST_MAIN_QUEST_DEFAULT | QUEST_CONST_ACTIVE_IN_RUN | QUEST_CONST_UNLOCKED_BY_DEFAULT,
        .triggers = sTriggers_GYM_BADGE_8_8,
        .triggerCount = ARRAY_COUNT(sTriggers_GYM_BADGE_8_8),
        .triggerFlags = 0 | QUEST_TRIGGER_EARN_BADGE,
        .rewards = sRewards_GYM_BADGE_8_8,
        .rewardCount = ARRAY_COUNT(sRewards_GYM_BADGE_8_8),
        .requirements = NULL,
        .requirementCount = 0,
    },
    [QUEST_ID_ELITE_MASTER] = 
    {
        .title = sTitle_ELITE_MASTER_9,
        .desc = gQuestDescText_ELITE_MASTER_9,
        .flags = 0 | QUEST_CONST_MAIN_QUEST_DEFAULT | QUEST_CONST_ACTIVE_IN_RUN | QUEST_CONST_UNLOCKED_BY_DEFAULT,
        .triggers = sTriggers_ELITE_MASTER_9,
        .triggerCount = ARRAY_COUNT(sTriggers_ELITE_MASTER_9),
        .triggerFlags = 0 | QUEST_TRIGGER_EARN_BADGE,
        .rewards = sRewards_ELITE_MASTER_9,
        .rewardCount = ARRAY_COUNT(sRewards_ELITE_MASTER_9),
        .requirements = NULL,
        .requirementCount = 0,
    },
    [QUEST_ID_CHAMPION] = 
    {
        .title = sTitle_CHAMPION_10,
        .desc = gQuestDescText_CHAMPION_10,
        .flags = 0 | QUEST_CONST_MAIN_QUEST_DEFAULT | QUEST_CONST_ACTIVE_IN_RUN | QUEST_CONST_UNLOCKED_BY_DEFAULT,
        .triggers = sTriggers_CHAMPION_10,
        .triggerCount = ARRAY_COUNT(sTriggers_CHAMPION_10),
        .triggerFlags = 0 | QUEST_TRIGGER_ENTER_HALL_OF_FAME,
        .rewards = sRewards_CHAMPION_10,
        .rewardCount = ARRAY_COUNT(sRewards_CHAMPION_10),
        .requirements = NULL,
        .requirementCount = 0,
    },
    [QUEST_ID_WELCOME_HOME] = 
    {
        .title = sTitle_WELCOME_HOME_11,
        .desc = gQuestDescText_WELCOME_HOME_11,
        .flags = 0 | QUEST_CONST_MAIN_QUEST_DEFAULT | QUEST_CONST_ACTIVE_ALWAYS,
        .triggers = sTriggers_WELCOME_HOME_11,
        .triggerCount = ARRAY_COUNT(sTriggers_WELCOME_HOME_11),
        .triggerFlags = 0 | QUEST_TRIGGER_MISC_UPDATE,
        .rewards = sRewards_WELCOME_HOME_11,
        .rewardCount = ARRAY_COUNT(sRewards_WELCOME_HOME_11),
        .requirements = NULL,
        .requirementCount = 0,
    },
    [QUEST_ID_POST_GAMEQMARK] = 
    {
        .title = sTitle_POST_GAMEQMARK_12,
        .desc = gQuestDescText_POST_GAMEQMARK_12,
        .flags = 0 | QUEST_CONST_MAIN_QUEST_DEFAULT | QUEST_CONST_ACTIVE_IN_HUB | QUEST_CONST_UNLOCKED_BY_DEFAULT,
        .triggers = sTriggers_POST_GAMEQMARK_12,
        .triggerCount = ARRAY_COUNT(sTriggers_POST_GAMEQMARK_12),
        .triggerFlags = 0 | QUEST_TRIGGER_MAP_SPECIFIC_EVENT,
        .rewards = sRewards_POST_GAMEQMARK_12,
        .rewardCount = ARRAY_COUNT(sRewards_POST_GAMEQMARK_12),
        .requirements = NULL,
        .requirementCount = 0,
    },
    [QUEST_ID_ONE_LAST_QUEST] = 
    {
        .title = sTitle_ONE_LAST_QUEST_13,
        .desc = gQuestDescText_ONE_LAST_QUEST_13,
        .flags = 0 | QUEST_CONST_MAIN_QUEST_DEFAULT | QUEST_CONST_ACTIVE_ALWAYS,
        .triggers = sTriggers_ONE_LAST_QUEST_13,
        .triggerCount = ARRAY_COUNT(sTriggers_ONE_LAST_QUEST_13),
        .triggerFlags = 0 | QUEST_TRIGGER_MISC_UPDATE,
        .rewards = sRewards_ONE_LAST_QUEST_13,
        .rewardCount = ARRAY_COUNT(sRewards_ONE_LAST_QUEST_13),
        .requirements = NULL,
        .requirementCount = 0,
    },
#if !defined(ROGUE_EXPANSION)
    [QUEST_ID_THE_FINAL_RUN] = 
    {
        .title = sTitle_THE_FINAL_RUN_14,
        .desc = gQuestDescText_THE_FINAL_RUN_14,
        .flags = 0 | QUEST_CONST_MAIN_QUEST_DEFAULT | QUEST_CONST_ACTIVE_IN_RUN,
        .triggers = sTriggers_THE_FINAL_RUN_14,
        .triggerCount = ARRAY_COUNT(sTriggers_THE_FINAL_RUN_14),
        .triggerFlags = 0 | QUEST_TRIGGER_RUN_START | QUEST_TRIGGER_ENTER_HALL_OF_FAME,
        .rewards = sRewards_THE_FINAL_RUN_14,
        .rewardCount = ARRAY_COUNT(sRewards_THE_FINAL_RUN_14),
        .requirements = NULL,
        .requirementCount = 0,
    },
#endif
#if defined(ROGUE_EXPANSION)
    [QUEST_ID_THE_FINAL_RUN] = 
    {
        .title = sTitle_THE_FINAL_RUN_15,
        .desc = gQuestDescText_THE_FINAL_RUN_15,
        .flags = 0 | QUEST_CONST_MAIN_QUEST_DEFAULT | QUEST_CONST_ACTIVE_IN_RUN,
        .triggers = sTriggers_THE_FINAL_RUN_15,
        .triggerCount = ARRAY_COUNT(sTriggers_THE_FINAL_RUN_15),
        .triggerFlags = 0 | QUEST_TRIGGER_RUN_START | QUEST_TRIGGER_ENTER_HALL_OF_FAME,
        .rewards = sRewards_THE_FINAL_RUN_15,
        .rewardCount = ARRAY_COUNT(sRewards_THE_FINAL_RUN_15),
        .requirements = NULL,
        .requirementCount = 0,
    },
#endif
    [QUEST_ID_COLLECTOR] = 
    {
        .title = sTitle_COLLECTOR_16,
        .desc = gQuestDescText_COLLECTOR_16,
        .flags = 0 | QUEST_CONST_MAIN_QUEST_DEFAULT | QUEST_CONST_ACTIVE_ALWAYS | QUEST_CONST_UNLOCKED_BY_DEFAULT,
        .triggers = sTriggers_COLLECTOR_16,
        .triggerCount = ARRAY_COUNT(sTriggers_COLLECTOR_16),
        .triggerFlags = 0 | QUEST_TRIGGER_POKEDEX_UPDATE,
        .rewards = sRewards_COLLECTOR_16,
        .rewardCount = ARRAY_COUNT(sRewards_COLLECTOR_16),
        .requirements = NULL,
        .requirementCount = 0,
    },
    [QUEST_ID_COLLECTOR_PLUS] = 
    {
        .title = sTitle_COLLECTOR_PLUS_17,
        .desc = gQuestDescText_COLLECTOR_PLUS_17,
        .flags = 0 | QUEST_CONST_MAIN_QUEST_DEFAULT | QUEST_CONST_ACTIVE_ALWAYS,
        .triggers = sTriggers_COLLECTOR_PLUS_17,
        .triggerCount = ARRAY_COUNT(sTriggers_COLLECTOR_PLUS_17),
        .triggerFlags = 0 | QUEST_TRIGGER_POKEDEX_UPDATE,
        .rewards = sRewards_COLLECTOR_PLUS_17,
        .rewardCount = ARRAY_COUNT(sRewards_COLLECTOR_PLUS_17),
        .requirements = NULL,
        .requirementCount = 0,
    },
    [QUEST_ID_COLLECTOR_S] = 
    {
        .title = sTitle_COLLECTOR_S_18,
        .desc = gQuestDescText_COLLECTOR_S_18,
        .flags = 0 | QUEST_CONST_MAIN_QUEST_DEFAULT | QUEST_CONST_ACTIVE_ALWAYS,
        .triggers = sTriggers_COLLECTOR_S_18,
        .triggerCount = ARRAY_COUNT(sTriggers_COLLECTOR_S_18),
        .triggerFlags = 0 | QUEST_TRIGGER_POKEDEX_UPDATE,
        .rewards = sRewards_COLLECTOR_S_18,
        .rewardCount = ARRAY_COUNT(sRewards_COLLECTOR_S_18),
        .requirements = NULL,
        .requirementCount = 0,
    },
    [QUEST_ID_COLLECTOR_X] = 
    {
        .title = sTitle_COLLECTOR_X_19,
        .desc = gQuestDescText_COLLECTOR_X_19,
        .flags = 0 | QUEST_CONST_MAIN_QUEST_DEFAULT | QUEST_CONST_ACTIVE_IN_RUN,
        .triggers = sTriggers_COLLECTOR_X_19,
        .triggerCount = ARRAY_COUNT(sTriggers_COLLECTOR_X_19),
        .triggerFlags = 0 | QUEST_TRIGGER_EARN_BADGE,
        .rewards = sRewards_COLLECTOR_X_19,
        .rewardCount = ARRAY_COUNT(sRewards_COLLECTOR_X_19),
        .requirements = NULL,
        .requirementCount = 0,
    },
    [QUEST_ID_CARE_TACTICS] = 
    {
        .title = sTitle_CARE_TACTICS_20,
        .desc = gQuestDescText_CARE_TACTICS_20,
        .flags = 0 | QUEST_CONST_MAIN_QUEST_DEFAULT | QUEST_CONST_ACTIVE_IN_RUN | QUEST_CONST_UNLOCKED_BY_DEFAULT,
        .triggers = sTriggers_CARE_TACTICS_20,
        .triggerCount = ARRAY_COUNT(sTriggers_CARE_TACTICS_20),
        .triggerFlags = 0 | QUEST_TRIGGER_ANY_BATTLE_END | QUEST_TRIGGER_EARN_BADGE,
        .rewards = sRewards_CARE_TACTICS_20,
        .rewardCount = ARRAY_COUNT(sRewards_CARE_TACTICS_20),
        .requirements = NULL,
        .requirementCount = 0,
    },
    [QUEST_ID_SMART_TACTICS] = 
    {
        .title = sTitle_SMART_TACTICS_21,
        .desc = gQuestDescText_SMART_TACTICS_21,
        .flags = 0 | QUEST_CONST_MAIN_QUEST_DEFAULT | QUEST_CONST_ACTIVE_IN_RUN | QUEST_CONST_UNLOCKED_BY_DEFAULT,
        .triggers = sTriggers_SMART_TACTICS_21,
        .triggerCount = ARRAY_COUNT(sTriggers_SMART_TACTICS_21),
        .triggerFlags = 0 | QUEST_TRIGGER_ANY_BATTLE_END | QUEST_TRIGGER_EARN_BADGE,
        .rewards = sRewards_SMART_TACTICS_21,
        .rewardCount = ARRAY_COUNT(sRewards_SMART_TACTICS_21),
        .requirements = NULL,
        .requirementCount = 0,
    },
    [QUEST_ID_MR_RANDOMAN] = 
    {
        .title = sTitle_MR_RANDOMAN_22,
        .desc = gQuestDescText_MR_RANDOMAN_22,
        .flags = 0 | QUEST_CONST_MAIN_QUEST_DEFAULT | QUEST_CONST_ACTIVE_IN_RUN | QUEST_CONST_UNLOCKED_BY_DEFAULT,
        .triggers = sTriggers_MR_RANDOMAN_22,
        .triggerCount = ARRAY_COUNT(sTriggers_MR_RANDOMAN_22),
        .triggerFlags = 0 | QUEST_TRIGGER_EXIT_ENCOUNTER,
        .rewards = sRewards_MR_RANDOMAN_22,
        .rewardCount = ARRAY_COUNT(sRewards_MR_RANDOMAN_22),
        .requirements = NULL,
        .requirementCount = 0,
    },
    [QUEST_ID_SHOPPING_SPREE] = 
    {
        .title = sTitle_SHOPPING_SPREE_23,
        .desc = gQuestDescText_SHOPPING_SPREE_23,
        .flags = 0 | QUEST_CONST_MAIN_QUEST_DEFAULT | QUEST_CONST_ACTIVE_IN_RUN | QUEST_CONST_UNLOCKED_BY_DEFAULT,
        .triggers = sTriggers_SHOPPING_SPREE_23,
        .triggerCount = ARRAY_COUNT(sTriggers_SHOPPING_SPREE_23),
        .triggerFlags = 0 | QUEST_TRIGGER_EXIT_ENCOUNTER,
        .rewards = sRewards_SHOPPING_SPREE_23,
        .rewardCount = ARRAY_COUNT(sRewards_SHOPPING_SPREE_23),
        .requirements = NULL,
        .requirementCount = 0,
    },
    [QUEST_ID_BIG_SAVER] = 
    {
        .title = sTitle_BIG_SAVER_24,
        .desc = gQuestDescText_BIG_SAVER_24,
        .flags = 0 | QUEST_CONST_MAIN_QUEST_DEFAULT | QUEST_CONST_ACTIVE_IN_RUN,
        .triggers = sTriggers_BIG_SAVER_24,
        .triggerCount = ARRAY_COUNT(sTriggers_BIG_SAVER_24),
        .triggerFlags = 0 | QUEST_TRIGGER_EXIT_ENCOUNTER,
        .rewards = sRewards_BIG_SAVER_24,
        .rewardCount = ARRAY_COUNT(sRewards_BIG_SAVER_24),
        .requirements = NULL,
        .requirementCount = 0,
    },
    [QUEST_ID_TRUE_LEGEND] = 
    {
        .title = sTitle_TRUE_LEGEND_25,
        .desc = gQuestDescText_TRUE_LEGEND_25,
        .flags = 0 | QUEST_CONST_MAIN_QUEST_DEFAULT | QUEST_CONST_ACTIVE_IN_RUN | QUEST_CONST_UNLOCKED_BY_DEFAULT,
        .triggers = sTriggers_TRUE_LEGEND_25,
        .triggerCount = ARRAY_COUNT(sTriggers_TRUE_LEGEND_25),
        .triggerFlags = 0 | QUEST_TRIGGER_MON_LEGEND_CAUGHT,
        .rewards = sRewards_TRUE_LEGEND_25,
        .rewardCount = ARRAY_COUNT(sRewards_TRUE_LEGEND_25),
        .requirements = NULL,
        .requirementCount = 0,
    },
    [QUEST_ID_SHINY_A_DAY] = 
    {
        .title = sTitle_SHINY_A_DAY_26,
        .desc = gQuestDescText_SHINY_A_DAY_26,
        .flags = 0 | QUEST_CONST_MAIN_QUEST_DEFAULT | QUEST_CONST_ACTIVE_IN_RUN | QUEST_CONST_UNLOCKED_BY_DEFAULT,
        .triggers = sTriggers_SHINY_A_DAY_26,
        .triggerCount = ARRAY_COUNT(sTriggers_SHINY_A_DAY_26),
        .triggerFlags = 0 | QUEST_TRIGGER_MON_SHINY_CAUGHT,
        .rewards = sRewards_SHINY_A_DAY_26,
        .rewardCount = ARRAY_COUNT(sRewards_SHINY_A_DAY_26),
        .requirements = NULL,
        .requirementCount = 0,
    },
    [QUEST_ID_HIDDEN_GROTTO] = 
    {
        .title = sTitle_HIDDEN_GROTTO_27,
        .desc = gQuestDescText_HIDDEN_GROTTO_27,
        .flags = 0 | QUEST_CONST_MAIN_QUEST_DEFAULT | QUEST_CONST_ACTIVE_IN_RUN | QUEST_CONST_UNLOCKED_BY_DEFAULT,
        .triggers = sTriggers_HIDDEN_GROTTO_27,
        .triggerCount = ARRAY_COUNT(sTriggers_HIDDEN_GROTTO_27),
        .triggerFlags = 0 | QUEST_TRIGGER_ANY_MON_CAUGHT,
        .rewards = sRewards_HIDDEN_GROTTO_27,
        .rewardCount = ARRAY_COUNT(sRewards_HIDDEN_GROTTO_27),
        .requirements = NULL,
        .requirementCount = 0,
    },
    [QUEST_ID_POKE_BALL_GOEMARK] = 
    {
        .title = sTitle_POKE_BALL_GOEMARK_28,
        .desc = gQuestDescText_POKE_BALL_GOEMARK_28,
        .flags = 0 | QUEST_CONST_MAIN_QUEST_DEFAULT | QUEST_CONST_ACTIVE_IN_RUN | QUEST_CONST_UNLOCKED_BY_DEFAULT,
        .triggers = sTriggers_POKE_BALL_GOEMARK_28,
        .triggerCount = ARRAY_COUNT(sTriggers_POKE_BALL_GOEMARK_28),
        .triggerFlags = 0 | QUEST_TRIGGER_MAP_SPECIFIC_EVENT,
        .rewards = sRewards_POKE_BALL_GOEMARK_28,
        .rewardCount = ARRAY_COUNT(sRewards_POKE_BALL_GOEMARK_28),
        .requirements = NULL,
        .requirementCount = 0,
    },
    [QUEST_ID_ENTICING_POKEBLOCK] = 
    {
        .title = sTitle_ENTICING_POKEBLOCK_29,
        .desc = gQuestDescText_ENTICING_POKEBLOCK_29,
        .flags = 0 | QUEST_CONST_MAIN_QUEST_DEFAULT | QUEST_CONST_ACTIVE_IN_RUN | QUEST_CONST_UNLOCKED_BY_DEFAULT,
        .triggers = sTriggers_ENTICING_POKEBLOCK_29,
        .triggerCount = ARRAY_COUNT(sTriggers_ENTICING_POKEBLOCK_29),
        .triggerFlags = 0 | QUEST_TRIGGER_MAP_SPECIFIC_EVENT,
        .rewards = sRewards_ENTICING_POKEBLOCK_29,
        .rewardCount = ARRAY_COUNT(sRewards_ENTICING_POKEBLOCK_29),
        .requirements = NULL,
        .requirementCount = 0,
    },
    [QUEST_ID_ELO_CLIMB] = 
    {
        .title = sTitle_ELO_CLIMB_30,
        .desc = gQuestDescText_ELO_CLIMB_30,
        .flags = 0 | QUEST_CONST_MAIN_QUEST_DEFAULT | QUEST_CONST_ACTIVE_IN_RUN | QUEST_CONST_UNLOCKED_BY_DEFAULT,
        .triggers = sTriggers_ELO_CLIMB_30,
        .triggerCount = ARRAY_COUNT(sTriggers_ELO_CLIMB_30),
        .triggerFlags = 0 | QUEST_TRIGGER_MAP_SPECIFIC_EVENT,
        .rewards = sRewards_ELO_CLIMB_30,
        .rewardCount = ARRAY_COUNT(sRewards_ELO_CLIMB_30),
        .requirements = NULL,
        .requirementCount = 0,
    },
    [QUEST_ID_ALL_SKILL] = 
    {
        .title = sTitle_ALL_SKILL_31,
        .desc = gQuestDescText_ALL_SKILL_31,
        .flags = 0 | QUEST_CONST_MAIN_QUEST_DEFAULT | QUEST_CONST_ACTIVE_IN_RUN | QUEST_CONST_UNLOCKED_BY_DEFAULT,
        .triggers = sTriggers_ALL_SKILL_31,
        .triggerCount = ARRAY_COUNT(sTriggers_ALL_SKILL_31),
        .triggerFlags = 0 | QUEST_TRIGGER_MAP_SPECIFIC_EVENT,
        .rewards = sRewards_ALL_SKILL_31,
        .rewardCount = ARRAY_COUNT(sRewards_ALL_SKILL_31),
        .requirements = NULL,
        .requirementCount = 0,
    },
    [QUEST_ID_FATEFUL_ENCOUNTER] = 
    {
        .title = sTitle_FATEFUL_ENCOUNTER_32,
        .desc = gQuestDescText_FATEFUL_ENCOUNTER_32,
        .flags = 0 | QUEST_CONST_MAIN_QUEST_DEFAULT | QUEST_CONST_ACTIVE_IN_RUN | QUEST_CONST_UNLOCKED_BY_DEFAULT,
        .triggers = sTriggers_FATEFUL_ENCOUNTER_32,
        .triggerCount = ARRAY_COUNT(sTriggers_FATEFUL_ENCOUNTER_32),
        .triggerFlags = 0 | QUEST_TRIGGER_MAP_SPECIFIC_EVENT,
        .rewards = sRewards_FATEFUL_ENCOUNTER_32,
        .rewardCount = ARRAY_COUNT(sRewards_FATEFUL_ENCOUNTER_32),
        .requirements = NULL,
        .requirementCount = 0,
    },
    [QUEST_ID_BLASTING_OFF] = 
    {
        .title = sTitle_BLASTING_OFF_33,
        .desc = gQuestDescText_BLASTING_OFF_33,
        .flags = 0 | QUEST_CONST_MAIN_QUEST_DEFAULT | QUEST_CONST_ACTIVE_IN_RUN | QUEST_CONST_UNLOCKED_BY_DEFAULT,
        .triggers = sTriggers_BLASTING_OFF_33,
        .triggerCount = ARRAY_COUNT(sTriggers_BLASTING_OFF_33),
        .triggerFlags = 0 | QUEST_TRIGGER_MAP_SPECIFIC_EVENT,
        .rewards = sRewards_BLASTING_OFF_33,
        .rewardCount = ARRAY_COUNT(sRewards_BLASTING_OFF_33),
        .requirements = NULL,
        .requirementCount = 0,
    },
    [QUEST_ID_MANKEYS_PAW] = 
    {
        .title = sTitle_MANKEYS_PAW_34,
        .desc = gQuestDescText_MANKEYS_PAW_34,
        .flags = 0 | QUEST_CONST_MAIN_QUEST_DEFAULT | QUEST_CONST_ACTIVE_IN_RUN | QUEST_CONST_UNLOCKED_BY_DEFAULT,
        .triggers = sTriggers_MANKEYS_PAW_34,
        .triggerCount = ARRAY_COUNT(sTriggers_MANKEYS_PAW_34),
        .triggerFlags = 0 | QUEST_TRIGGER_MAP_SPECIFIC_EVENT,
        .rewards = sRewards_MANKEYS_PAW_34,
        .rewardCount = ARRAY_COUNT(sRewards_MANKEYS_PAW_34),
        .requirements = NULL,
        .requirementCount = 0,
    },
    [QUEST_ID_BLESSINGS_FAVOUR] = 
    {
        .title = sTitle_BLESSINGS_FAVOUR_35,
        .desc = gQuestDescText_BLESSINGS_FAVOUR_35,
        .flags = 0 | QUEST_CONST_MAIN_QUEST_DEFAULT | QUEST_CONST_ACTIVE_IN_RUN | QUEST_CONST_UNLOCKED_BY_DEFAULT,
        .triggers = sTriggers_BLESSINGS_FAVOUR_35,
        .triggerCount = ARRAY_COUNT(sTriggers_BLESSINGS_FAVOUR_35),
        .triggerFlags = 0 | QUEST_TRIGGER_MAP_SPECIFIC_EVENT,
        .rewards = sRewards_BLESSINGS_FAVOUR_35,
        .rewardCount = ARRAY_COUNT(sRewards_BLESSINGS_FAVOUR_35),
        .requirements = NULL,
        .requirementCount = 0,
    },
    [QUEST_ID_NOT_TODAYEMARK] = 
    {
        .title = sTitle_NOT_TODAYEMARK_36,
        .desc = gQuestDescText_NOT_TODAYEMARK_36,
        .flags = 0 | QUEST_CONST_MAIN_QUEST_DEFAULT | QUEST_CONST_ACTIVE_IN_RUN | QUEST_CONST_UNLOCKED_BY_DEFAULT,
        .triggers = sTriggers_NOT_TODAYEMARK_36,
        .triggerCount = ARRAY_COUNT(sTriggers_NOT_TODAYEMARK_36),
        .triggerFlags = 0 | QUEST_TRIGGER_FIELD_ITEM_USED,
        .rewards = sRewards_NOT_TODAYEMARK_36,
        .rewardCount = ARRAY_COUNT(sRewards_NOT_TODAYEMARK_36),
        .requirements = NULL,
        .requirementCount = 0,
    },
    [QUEST_ID_DOUBLE_TROUBLE] = 
    {
        .title = sTitle_DOUBLE_TROUBLE_37,
        .desc = gQuestDescText_DOUBLE_TROUBLE_37,
        .flags = 0 | QUEST_CONST_MAIN_QUEST_DEFAULT | QUEST_CONST_ACTIVE_IN_RUN | QUEST_CONST_UNLOCKED_BY_DEFAULT,
        .triggers = sTriggers_DOUBLE_TROUBLE_37,
        .triggerCount = ARRAY_COUNT(sTriggers_DOUBLE_TROUBLE_37),
        .triggerFlags = 0 | QUEST_TRIGGER_ENTER_HALL_OF_FAME,
        .rewards = sRewards_DOUBLE_TROUBLE_37,
        .rewardCount = ARRAY_COUNT(sRewards_DOUBLE_TROUBLE_37),
        .requirements = sRequirements_DOUBLE_TROUBLE_37,
        .requirementCount = ARRAY_COUNT(sRequirements_DOUBLE_TROUBLE_37),
    },
#if !defined(ROGUE_EXPANSION)
    [QUEST_ID_TASTE_THE_RAINBOW] = 
    {
        .title = sTitle_TASTE_THE_RAINBOW_38,
        .desc = gQuestDescText_TASTE_THE_RAINBOW_38,
        .flags = 0 | QUEST_CONST_MAIN_QUEST_DEFAULT | QUEST_CONST_ACTIVE_IN_RUN,
        .triggers = sTriggers_TASTE_THE_RAINBOW_38,
        .triggerCount = ARRAY_COUNT(sTriggers_TASTE_THE_RAINBOW_38),
        .triggerFlags = 0 | QUEST_TRIGGER_RUN_START | QUEST_TRIGGER_ENTER_HALL_OF_FAME,
        .rewards = sRewards_TASTE_THE_RAINBOW_38,
        .rewardCount = ARRAY_COUNT(sRewards_TASTE_THE_RAINBOW_38),
        .requirements = sRequirements_TASTE_THE_RAINBOW_38,
        .requirementCount = ARRAY_COUNT(sRequirements_TASTE_THE_RAINBOW_38),
    },
#endif
#if defined(ROGUE_EXPANSION)
    [QUEST_ID_TASTE_THE_RAINBOW] = 
    {
        .title = sTitle_TASTE_THE_RAINBOW_39,
        .desc = gQuestDescText_TASTE_THE_RAINBOW_39,
        .flags = 0 | QUEST_CONST_MAIN_QUEST_DEFAULT | QUEST_CONST_ACTIVE_IN_RUN,
        .triggers = sTriggers_TASTE_THE_RAINBOW_39,
        .triggerCount = ARRAY_COUNT(sTriggers_TASTE_THE_RAINBOW_39),
        .triggerFlags = 0 | QUEST_TRIGGER_RUN_START | QUEST_TRIGGER_ENTER_HALL_OF_FAME,
        .rewards = sRewards_TASTE_THE_RAINBOW_39,
        .rewardCount = ARRAY_COUNT(sRewards_TASTE_THE_RAINBOW_39),
        .requirements = sRequirements_TASTE_THE_RAINBOW_39,
        .requirementCount = ARRAY_COUNT(sRequirements_TASTE_THE_RAINBOW_39),
    },
#endif
    [QUEST_ID_LONG_HAUL] = 
    {
        .title = sTitle_LONG_HAUL_40,
        .desc = gQuestDescText_LONG_HAUL_40,
        .flags = 0 | QUEST_CONST_MAIN_QUEST_DEFAULT | QUEST_CONST_ACTIVE_IN_RUN,
        .triggers = sTriggers_LONG_HAUL_40,
        .triggerCount = ARRAY_COUNT(sTriggers_LONG_HAUL_40),
        .triggerFlags = 0 | QUEST_TRIGGER_RUN_START | QUEST_TRIGGER_ENTER_HALL_OF_FAME,
        .rewards = sRewards_LONG_HAUL_40,
        .rewardCount = ARRAY_COUNT(sRewards_LONG_HAUL_40),
        .requirements = NULL,
        .requirementCount = 0,
    },
#if defined(ROGUE_EXPANSION)
    [QUEST_ID_BATTLE_GIMMICK] = 
    {
        .title = sTitle_BATTLE_GIMMICK_41,
        .desc = gQuestDescText_BATTLE_GIMMICK_41,
        .flags = 0 | QUEST_CONST_MAIN_QUEST_DEFAULT | QUEST_CONST_ACTIVE_IN_RUN,
        .triggers = sTriggers_BATTLE_GIMMICK_41,
        .triggerCount = ARRAY_COUNT(sTriggers_BATTLE_GIMMICK_41),
        .triggerFlags = 0 | QUEST_TRIGGER_ENTER_HALL_OF_FAME,
        .rewards = sRewards_BATTLE_GIMMICK_41,
        .rewardCount = ARRAY_COUNT(sRewards_BATTLE_GIMMICK_41),
        .requirements = NULL,
        .requirementCount = 0,
    },
#endif
    [QUEST_ID_REGIONAL_STYLE] = 
    {
        .title = sTitle_REGIONAL_STYLE_42,
        .desc = gQuestDescText_REGIONAL_STYLE_42,
        .flags = 0 | QUEST_CONST_MAIN_QUEST_DEFAULT | QUEST_CONST_ACTIVE_IN_HUB,
        .triggers = sTriggers_REGIONAL_STYLE_42,
        .triggerCount = ARRAY_COUNT(sTriggers_REGIONAL_STYLE_42),
        .triggerFlags = 0 | QUEST_TRIGGER_MISC_UPDATE,
        .rewards = sRewards_REGIONAL_STYLE_42,
        .rewardCount = ARRAY_COUNT(sRewards_REGIONAL_STYLE_42),
        .requirements = NULL,
        .requirementCount = 0,
    },
    [QUEST_ID_KANTO_STYLE] = 
    {
        .title = sTitle_KANTO_STYLE_43,
        .desc = gQuestDescText_KANTO_STYLE_43,
        .flags = 0 | QUEST_CONST_CHALLENGE_DEFAULT | QUEST_CONST_ACTIVE_IN_RUN | QUEST_CONST_UNLOCKED_BY_DEFAULT,
        .triggers = sTriggers_KANTO_STYLE_43,
        .triggerCount = ARRAY_COUNT(sTriggers_KANTO_STYLE_43),
        .triggerFlags = 0 | QUEST_TRIGGER_RUN_START | QUEST_TRIGGER_ENTER_HALL_OF_FAME,
        .rewards = sRewards_KANTO_STYLE_43,
        .rewardCount = ARRAY_COUNT(sRewards_KANTO_STYLE_43),
        .requirements = NULL,
        .requirementCount = 0,
    },
    [QUEST_ID_JOHTO_STYLE] = 
    {
        .title = sTitle_JOHTO_STYLE_44,
        .desc = gQuestDescText_JOHTO_STYLE_44,
        .flags = 0 | QUEST_CONST_CHALLENGE_DEFAULT | QUEST_CONST_ACTIVE_IN_RUN | QUEST_CONST_UNLOCKED_BY_DEFAULT,
        .triggers = sTriggers_JOHTO_STYLE_44,
        .triggerCount = ARRAY_COUNT(sTriggers_JOHTO_STYLE_44),
        .triggerFlags = 0 | QUEST_TRIGGER_RUN_START | QUEST_TRIGGER_ENTER_HALL_OF_FAME,
        .rewards = sRewards_JOHTO_STYLE_44,
        .rewardCount = ARRAY_COUNT(sRewards_JOHTO_STYLE_44),
        .requirements = NULL,
        .requirementCount = 0,
    },
    [QUEST_ID_HOENN_STYLE] = 
    {
        .title = sTitle_HOENN_STYLE_45,
        .desc = gQuestDescText_HOENN_STYLE_45,
        .flags = 0 | QUEST_CONST_CHALLENGE_DEFAULT | QUEST_CONST_ACTIVE_IN_RUN | QUEST_CONST_UNLOCKED_BY_DEFAULT,
        .triggers = sTriggers_HOENN_STYLE_45,
        .triggerCount = ARRAY_COUNT(sTriggers_HOENN_STYLE_45),
        .triggerFlags = 0 | QUEST_TRIGGER_RUN_START | QUEST_TRIGGER_ENTER_HALL_OF_FAME,
        .rewards = sRewards_HOENN_STYLE_45,
        .rewardCount = ARRAY_COUNT(sRewards_HOENN_STYLE_45),
        .requirements = NULL,
        .requirementCount = 0,
    },
#if defined(ROGUE_EXPANSION)
    [QUEST_ID_SINNOH_STYLE] = 
    {
        .title = sTitle_SINNOH_STYLE_46,
        .desc = gQuestDescText_SINNOH_STYLE_46,
        .flags = 0 | QUEST_CONST_CHALLENGE_DEFAULT | QUEST_CONST_ACTIVE_IN_RUN | QUEST_CONST_UNLOCKED_BY_DEFAULT,
        .triggers = sTriggers_SINNOH_STYLE_46,
        .triggerCount = ARRAY_COUNT(sTriggers_SINNOH_STYLE_46),
        .triggerFlags = 0 | QUEST_TRIGGER_RUN_START | QUEST_TRIGGER_ENTER_HALL_OF_FAME,
        .rewards = sRewards_SINNOH_STYLE_46,
        .rewardCount = ARRAY_COUNT(sRewards_SINNOH_STYLE_46),
        .requirements = NULL,
        .requirementCount = 0,
    },
#endif
#if defined(ROGUE_EXPANSION)
    [QUEST_ID_UNOVA_STYLE] = 
    {
        .title = sTitle_UNOVA_STYLE_47,
        .desc = gQuestDescText_UNOVA_STYLE_47,
        .flags = 0 | QUEST_CONST_CHALLENGE_DEFAULT | QUEST_CONST_ACTIVE_IN_RUN | QUEST_CONST_UNLOCKED_BY_DEFAULT,
        .triggers = sTriggers_UNOVA_STYLE_47,
        .triggerCount = ARRAY_COUNT(sTriggers_UNOVA_STYLE_47),
        .triggerFlags = 0 | QUEST_TRIGGER_RUN_START | QUEST_TRIGGER_ENTER_HALL_OF_FAME,
        .rewards = sRewards_UNOVA_STYLE_47,
        .rewardCount = ARRAY_COUNT(sRewards_UNOVA_STYLE_47),
        .requirements = NULL,
        .requirementCount = 0,
    },
#endif
#if defined(ROGUE_EXPANSION)
    [QUEST_ID_KALOS_STYLE] = 
    {
        .title = sTitle_KALOS_STYLE_48,
        .desc = gQuestDescText_KALOS_STYLE_48,
        .flags = 0 | QUEST_CONST_CHALLENGE_DEFAULT | QUEST_CONST_ACTIVE_IN_RUN | QUEST_CONST_UNLOCKED_BY_DEFAULT,
        .triggers = sTriggers_KALOS_STYLE_48,
        .triggerCount = ARRAY_COUNT(sTriggers_KALOS_STYLE_48),
        .triggerFlags = 0 | QUEST_TRIGGER_RUN_START | QUEST_TRIGGER_ENTER_HALL_OF_FAME,
        .rewards = sRewards_KALOS_STYLE_48,
        .rewardCount = ARRAY_COUNT(sRewards_KALOS_STYLE_48),
        .requirements = NULL,
        .requirementCount = 0,
    },
#endif
#if defined(ROGUE_EXPANSION)
    [QUEST_ID_ALOLA_STYLE] = 
    {
        .title = sTitle_ALOLA_STYLE_49,
        .desc = gQuestDescText_ALOLA_STYLE_49,
        .flags = 0 | QUEST_CONST_CHALLENGE_DEFAULT | QUEST_CONST_ACTIVE_IN_RUN | QUEST_CONST_UNLOCKED_BY_DEFAULT,
        .triggers = sTriggers_ALOLA_STYLE_49,
        .triggerCount = ARRAY_COUNT(sTriggers_ALOLA_STYLE_49),
        .triggerFlags = 0 | QUEST_TRIGGER_RUN_START | QUEST_TRIGGER_ENTER_HALL_OF_FAME,
        .rewards = sRewards_ALOLA_STYLE_49,
        .rewardCount = ARRAY_COUNT(sRewards_ALOLA_STYLE_49),
        .requirements = NULL,
        .requirementCount = 0,
    },
#endif
#if defined(ROGUE_EXPANSION)
    [QUEST_ID_GALAR_STYLE] = 
    {
        .title = sTitle_GALAR_STYLE_50,
        .desc = gQuestDescText_GALAR_STYLE_50,
        .flags = 0 | QUEST_CONST_CHALLENGE_DEFAULT | QUEST_CONST_ACTIVE_IN_RUN | QUEST_CONST_UNLOCKED_BY_DEFAULT,
        .triggers = sTriggers_GALAR_STYLE_50,
        .triggerCount = ARRAY_COUNT(sTriggers_GALAR_STYLE_50),
        .triggerFlags = 0 | QUEST_TRIGGER_RUN_START | QUEST_TRIGGER_ENTER_HALL_OF_FAME,
        .rewards = sRewards_GALAR_STYLE_50,
        .rewardCount = ARRAY_COUNT(sRewards_GALAR_STYLE_50),
        .requirements = NULL,
        .requirementCount = 0,
    },
#endif
#if defined(ROGUE_EXPANSION)
    [QUEST_ID_PALDEA_STYLE] = 
    {
        .title = sTitle_PALDEA_STYLE_51,
        .desc = gQuestDescText_PALDEA_STYLE_51,
        .flags = 0 | QUEST_CONST_CHALLENGE_DEFAULT | QUEST_CONST_ACTIVE_IN_RUN | QUEST_CONST_UNLOCKED_BY_DEFAULT,
        .triggers = sTriggers_PALDEA_STYLE_51,
        .triggerCount = ARRAY_COUNT(sTriggers_PALDEA_STYLE_51),
        .triggerFlags = 0 | QUEST_TRIGGER_RUN_START | QUEST_TRIGGER_ENTER_HALL_OF_FAME,
        .rewards = sRewards_PALDEA_STYLE_51,
        .rewardCount = ARRAY_COUNT(sRewards_PALDEA_STYLE_51),
        .requirements = NULL,
        .requirementCount = 0,
    },
#endif
    [QUEST_ID_ORRE_STYLE] = 
    {
        .title = sTitle_ORRE_STYLE_52,
        .desc = gQuestDescText_ORRE_STYLE_52,
        .flags = 0 | QUEST_CONST_CHALLENGE_DEFAULT | QUEST_CONST_ACTIVE_IN_RUN | QUEST_CONST_UNLOCKED_BY_DEFAULT,
        .triggers = sTriggers_ORRE_STYLE_52,
        .triggerCount = ARRAY_COUNT(sTriggers_ORRE_STYLE_52),
        .triggerFlags = 0 | QUEST_TRIGGER_ENTER_HALL_OF_FAME,
        .rewards = sRewards_ORRE_STYLE_52,
        .rewardCount = ARRAY_COUNT(sRewards_ORRE_STYLE_52),
        .requirements = sRequirements_ORRE_STYLE_52,
        .requirementCount = ARRAY_COUNT(sRequirements_ORRE_STYLE_52),
    },
    [QUEST_ID_TYPE_MASTER] = 
    {
        .title = sTitle_TYPE_MASTER_53,
        .desc = gQuestDescText_TYPE_MASTER_53,
        .flags = 0 | QUEST_CONST_MAIN_QUEST_DEFAULT | QUEST_CONST_ACTIVE_IN_HUB,
        .triggers = sTriggers_TYPE_MASTER_53,
        .triggerCount = ARRAY_COUNT(sTriggers_TYPE_MASTER_53),
        .triggerFlags = 0 | QUEST_TRIGGER_MISC_UPDATE,
        .rewards = sRewards_TYPE_MASTER_53,
        .rewardCount = ARRAY_COUNT(sRewards_TYPE_MASTER_53),
        .requirements = NULL,
        .requirementCount = 0,
    },
    [QUEST_ID_NORMAL_MASTER] = 
    {
        .title = sTitle_NORMAL_MASTER_54,
        .desc = gQuestDescText_NORMAL_MASTER_54,
        .flags = 0 | QUEST_CONST_CHALLENGE_DEFAULT | QUEST_CONST_ACTIVE_IN_RUN | QUEST_CONST_UNLOCKED_BY_DEFAULT,
        .triggers = sTriggers_NORMAL_MASTER_54,
        .triggerCount = ARRAY_COUNT(sTriggers_NORMAL_MASTER_54),
        .triggerFlags = 0 | QUEST_TRIGGER_TRAINER_BATTLE_START | QUEST_TRIGGER_ENTER_HALL_OF_FAME,
        .rewards = sRewards_NORMAL_MASTER_54,
        .rewardCount = ARRAY_COUNT(sRewards_NORMAL_MASTER_54),
        .requirements = NULL,
        .requirementCount = 0,
    },
    [QUEST_ID_FIGHTING_MASTER] = 
    {
        .title = sTitle_FIGHTING_MASTER_55,
        .desc = gQuestDescText_FIGHTING_MASTER_55,
        .flags = 0 | QUEST_CONST_CHALLENGE_DEFAULT | QUEST_CONST_ACTIVE_IN_RUN | QUEST_CONST_UNLOCKED_BY_DEFAULT,
        .triggers = sTriggers_FIGHTING_MASTER_55,
        .triggerCount = ARRAY_COUNT(sTriggers_FIGHTING_MASTER_55),
        .triggerFlags = 0 | QUEST_TRIGGER_TRAINER_BATTLE_START | QUEST_TRIGGER_ENTER_HALL_OF_FAME,
        .rewards = sRewards_FIGHTING_MASTER_55,
        .rewardCount = ARRAY_COUNT(sRewards_FIGHTING_MASTER_55),
        .requirements = NULL,
        .requirementCount = 0,
    },
    [QUEST_ID_FLYING_MASTER] = 
    {
        .title = sTitle_FLYING_MASTER_56,
        .desc = gQuestDescText_FLYING_MASTER_56,
        .flags = 0 | QUEST_CONST_CHALLENGE_DEFAULT | QUEST_CONST_ACTIVE_IN_RUN | QUEST_CONST_UNLOCKED_BY_DEFAULT,
        .triggers = sTriggers_FLYING_MASTER_56,
        .triggerCount = ARRAY_COUNT(sTriggers_FLYING_MASTER_56),
        .triggerFlags = 0 | QUEST_TRIGGER_TRAINER_BATTLE_START | QUEST_TRIGGER_ENTER_HALL_OF_FAME,
        .rewards = sRewards_FLYING_MASTER_56,
        .rewardCount = ARRAY_COUNT(sRewards_FLYING_MASTER_56),
        .requirements = NULL,
        .requirementCount = 0,
    },
    [QUEST_ID_POISON_MASTER] = 
    {
        .title = sTitle_POISON_MASTER_57,
        .desc = gQuestDescText_POISON_MASTER_57,
        .flags = 0 | QUEST_CONST_CHALLENGE_DEFAULT | QUEST_CONST_ACTIVE_IN_RUN | QUEST_CONST_UNLOCKED_BY_DEFAULT,
        .triggers = sTriggers_POISON_MASTER_57,
        .triggerCount = ARRAY_COUNT(sTriggers_POISON_MASTER_57),
        .triggerFlags = 0 | QUEST_TRIGGER_TRAINER_BATTLE_START | QUEST_TRIGGER_ENTER_HALL_OF_FAME,
        .rewards = sRewards_POISON_MASTER_57,
        .rewardCount = ARRAY_COUNT(sRewards_POISON_MASTER_57),
        .requirements = NULL,
        .requirementCount = 0,
    },
    [QUEST_ID_GROUND_MASTER] = 
    {
        .title = sTitle_GROUND_MASTER_58,
        .desc = gQuestDescText_GROUND_MASTER_58,
        .flags = 0 | QUEST_CONST_CHALLENGE_DEFAULT | QUEST_CONST_ACTIVE_IN_RUN | QUEST_CONST_UNLOCKED_BY_DEFAULT,
        .triggers = sTriggers_GROUND_MASTER_58,
        .triggerCount = ARRAY_COUNT(sTriggers_GROUND_MASTER_58),
        .triggerFlags = 0 | QUEST_TRIGGER_TRAINER_BATTLE_START | QUEST_TRIGGER_ENTER_HALL_OF_FAME,
        .rewards = sRewards_GROUND_MASTER_58,
        .rewardCount = ARRAY_COUNT(sRewards_GROUND_MASTER_58),
        .requirements = NULL,
        .requirementCount = 0,
    },
    [QUEST_ID_ROCK_MASTER] = 
    {
        .title = sTitle_ROCK_MASTER_59,
        .desc = gQuestDescText_ROCK_MASTER_59,
        .flags = 0 | QUEST_CONST_CHALLENGE_DEFAULT | QUEST_CONST_ACTIVE_IN_RUN | QUEST_CONST_UNLOCKED_BY_DEFAULT,
        .triggers = sTriggers_ROCK_MASTER_59,
        .triggerCount = ARRAY_COUNT(sTriggers_ROCK_MASTER_59),
        .triggerFlags = 0 | QUEST_TRIGGER_TRAINER_BATTLE_START | QUEST_TRIGGER_ENTER_HALL_OF_FAME,
        .rewards = sRewards_ROCK_MASTER_59,
        .rewardCount = ARRAY_COUNT(sRewards_ROCK_MASTER_59),
        .requirements = NULL,
        .requirementCount = 0,
    },
    [QUEST_ID_BUG_MASTER] = 
    {
        .title = sTitle_BUG_MASTER_60,
        .desc = gQuestDescText_BUG_MASTER_60,
        .flags = 0 | QUEST_CONST_CHALLENGE_DEFAULT | QUEST_CONST_ACTIVE_IN_RUN | QUEST_CONST_UNLOCKED_BY_DEFAULT,
        .triggers = sTriggers_BUG_MASTER_60,
        .triggerCount = ARRAY_COUNT(sTriggers_BUG_MASTER_60),
        .triggerFlags = 0 | QUEST_TRIGGER_TRAINER_BATTLE_START | QUEST_TRIGGER_ENTER_HALL_OF_FAME,
        .rewards = sRewards_BUG_MASTER_60,
        .rewardCount = ARRAY_COUNT(sRewards_BUG_MASTER_60),
        .requirements = NULL,
        .requirementCount = 0,
    },
    [QUEST_ID_GHOST_MASTER] = 
    {
        .title = sTitle_GHOST_MASTER_61,
        .desc = gQuestDescText_GHOST_MASTER_61,
        .flags = 0 | QUEST_CONST_CHALLENGE_DEFAULT | QUEST_CONST_ACTIVE_IN_RUN | QUEST_CONST_UNLOCKED_BY_DEFAULT,
        .triggers = sTriggers_GHOST_MASTER_61,
        .triggerCount = ARRAY_COUNT(sTriggers_GHOST_MASTER_61),
        .triggerFlags = 0 | QUEST_TRIGGER_TRAINER_BATTLE_START | QUEST_TRIGGER_ENTER_HALL_OF_FAME,
        .rewards = sRewards_GHOST_MASTER_61,
        .rewardCount = ARRAY_COUNT(sRewards_GHOST_MASTER_61),
        .requirements = NULL,
        .requirementCount = 0,
    },
    [QUEST_ID_STEEL_MASTER] = 
    {
        .title = sTitle_STEEL_MASTER_62,
        .desc = gQuestDescText_STEEL_MASTER_62,
        .flags = 0 | QUEST_CONST_CHALLENGE_DEFAULT | QUEST_CONST_ACTIVE_IN_RUN | QUEST_CONST_UNLOCKED_BY_DEFAULT,
        .triggers = sTriggers_STEEL_MASTER_62,
        .triggerCount = ARRAY_COUNT(sTriggers_STEEL_MASTER_62),
        .triggerFlags = 0 | QUEST_TRIGGER_TRAINER_BATTLE_START | QUEST_TRIGGER_ENTER_HALL_OF_FAME,
        .rewards = sRewards_STEEL_MASTER_62,
        .rewardCount = ARRAY_COUNT(sRewards_STEEL_MASTER_62),
        .requirements = NULL,
        .requirementCount = 0,
    },
    [QUEST_ID_FIRE_MASTER] = 
    {
        .title = sTitle_FIRE_MASTER_63,
        .desc = gQuestDescText_FIRE_MASTER_63,
        .flags = 0 | QUEST_CONST_CHALLENGE_DEFAULT | QUEST_CONST_ACTIVE_IN_RUN | QUEST_CONST_UNLOCKED_BY_DEFAULT,
        .triggers = sTriggers_FIRE_MASTER_63,
        .triggerCount = ARRAY_COUNT(sTriggers_FIRE_MASTER_63),
        .triggerFlags = 0 | QUEST_TRIGGER_TRAINER_BATTLE_START | QUEST_TRIGGER_ENTER_HALL_OF_FAME,
        .rewards = sRewards_FIRE_MASTER_63,
        .rewardCount = ARRAY_COUNT(sRewards_FIRE_MASTER_63),
        .requirements = NULL,
        .requirementCount = 0,
    },
    [QUEST_ID_WATER_MASTER] = 
    {
        .title = sTitle_WATER_MASTER_64,
        .desc = gQuestDescText_WATER_MASTER_64,
        .flags = 0 | QUEST_CONST_CHALLENGE_DEFAULT | QUEST_CONST_ACTIVE_IN_RUN | QUEST_CONST_UNLOCKED_BY_DEFAULT,
        .triggers = sTriggers_WATER_MASTER_64,
        .triggerCount = ARRAY_COUNT(sTriggers_WATER_MASTER_64),
        .triggerFlags = 0 | QUEST_TRIGGER_TRAINER_BATTLE_START | QUEST_TRIGGER_ENTER_HALL_OF_FAME,
        .rewards = sRewards_WATER_MASTER_64,
        .rewardCount = ARRAY_COUNT(sRewards_WATER_MASTER_64),
        .requirements = NULL,
        .requirementCount = 0,
    },
    [QUEST_ID_GRASS_MASTER] = 
    {
        .title = sTitle_GRASS_MASTER_65,
        .desc = gQuestDescText_GRASS_MASTER_65,
        .flags = 0 | QUEST_CONST_CHALLENGE_DEFAULT | QUEST_CONST_ACTIVE_IN_RUN | QUEST_CONST_UNLOCKED_BY_DEFAULT,
        .triggers = sTriggers_GRASS_MASTER_65,
        .triggerCount = ARRAY_COUNT(sTriggers_GRASS_MASTER_65),
        .triggerFlags = 0 | QUEST_TRIGGER_TRAINER_BATTLE_START | QUEST_TRIGGER_ENTER_HALL_OF_FAME,
        .rewards = sRewards_GRASS_MASTER_65,
        .rewardCount = ARRAY_COUNT(sRewards_GRASS_MASTER_65),
        .requirements = NULL,
        .requirementCount = 0,
    },
    [QUEST_ID_ELECTRIC_MASTER] = 
    {
        .title = sTitle_ELECTRIC_MASTER_66,
        .desc = gQuestDescText_ELECTRIC_MASTER_66,
        .flags = 0 | QUEST_CONST_CHALLENGE_DEFAULT | QUEST_CONST_ACTIVE_IN_RUN | QUEST_CONST_UNLOCKED_BY_DEFAULT,
        .triggers = sTriggers_ELECTRIC_MASTER_66,
        .triggerCount = ARRAY_COUNT(sTriggers_ELECTRIC_MASTER_66),
        .triggerFlags = 0 | QUEST_TRIGGER_TRAINER_BATTLE_START | QUEST_TRIGGER_ENTER_HALL_OF_FAME,
        .rewards = sRewards_ELECTRIC_MASTER_66,
        .rewardCount = ARRAY_COUNT(sRewards_ELECTRIC_MASTER_66),
        .requirements = NULL,
        .requirementCount = 0,
    },
    [QUEST_ID_PSYCHIC_MASTER] = 
    {
        .title = sTitle_PSYCHIC_MASTER_67,
        .desc = gQuestDescText_PSYCHIC_MASTER_67,
        .flags = 0 | QUEST_CONST_CHALLENGE_DEFAULT | QUEST_CONST_ACTIVE_IN_RUN | QUEST_CONST_UNLOCKED_BY_DEFAULT,
        .triggers = sTriggers_PSYCHIC_MASTER_67,
        .triggerCount = ARRAY_COUNT(sTriggers_PSYCHIC_MASTER_67),
        .triggerFlags = 0 | QUEST_TRIGGER_TRAINER_BATTLE_START | QUEST_TRIGGER_ENTER_HALL_OF_FAME,
        .rewards = sRewards_PSYCHIC_MASTER_67,
        .rewardCount = ARRAY_COUNT(sRewards_PSYCHIC_MASTER_67),
        .requirements = NULL,
        .requirementCount = 0,
    },
    [QUEST_ID_ICE_MASTER] = 
    {
        .title = sTitle_ICE_MASTER_68,
        .desc = gQuestDescText_ICE_MASTER_68,
        .flags = 0 | QUEST_CONST_CHALLENGE_DEFAULT | QUEST_CONST_ACTIVE_IN_RUN | QUEST_CONST_UNLOCKED_BY_DEFAULT,
        .triggers = sTriggers_ICE_MASTER_68,
        .triggerCount = ARRAY_COUNT(sTriggers_ICE_MASTER_68),
        .triggerFlags = 0 | QUEST_TRIGGER_TRAINER_BATTLE_START | QUEST_TRIGGER_ENTER_HALL_OF_FAME,
        .rewards = sRewards_ICE_MASTER_68,
        .rewardCount = ARRAY_COUNT(sRewards_ICE_MASTER_68),
        .requirements = NULL,
        .requirementCount = 0,
    },
    [QUEST_ID_DRAGON_MASTER] = 
    {
        .title = sTitle_DRAGON_MASTER_69,
        .desc = gQuestDescText_DRAGON_MASTER_69,
        .flags = 0 | QUEST_CONST_CHALLENGE_DEFAULT | QUEST_CONST_ACTIVE_IN_RUN | QUEST_CONST_UNLOCKED_BY_DEFAULT,
        .triggers = sTriggers_DRAGON_MASTER_69,
        .triggerCount = ARRAY_COUNT(sTriggers_DRAGON_MASTER_69),
        .triggerFlags = 0 | QUEST_TRIGGER_TRAINER_BATTLE_START | QUEST_TRIGGER_ENTER_HALL_OF_FAME,
        .rewards = sRewards_DRAGON_MASTER_69,
        .rewardCount = ARRAY_COUNT(sRewards_DRAGON_MASTER_69),
        .requirements = NULL,
        .requirementCount = 0,
    },
    [QUEST_ID_DARK_MASTER] = 
    {
        .title = sTitle_DARK_MASTER_70,
        .desc = gQuestDescText_DARK_MASTER_70,
        .flags = 0 | QUEST_CONST_CHALLENGE_DEFAULT | QUEST_CONST_ACTIVE_IN_RUN | QUEST_CONST_UNLOCKED_BY_DEFAULT,
        .triggers = sTriggers_DARK_MASTER_70,
        .triggerCount = ARRAY_COUNT(sTriggers_DARK_MASTER_70),
        .triggerFlags = 0 | QUEST_TRIGGER_TRAINER_BATTLE_START | QUEST_TRIGGER_ENTER_HALL_OF_FAME,
        .rewards = sRewards_DARK_MASTER_70,
        .rewardCount = ARRAY_COUNT(sRewards_DARK_MASTER_70),
        .requirements = NULL,
        .requirementCount = 0,
    },
#if defined(ROGUE_EXPANSION)
    [QUEST_ID_FAIRY_MASTER] = 
    {
        .title = sTitle_FAIRY_MASTER_71,
        .desc = gQuestDescText_FAIRY_MASTER_71,
        .flags = 0 | QUEST_CONST_CHALLENGE_DEFAULT | QUEST_CONST_ACTIVE_IN_RUN | QUEST_CONST_UNLOCKED_BY_DEFAULT,
        .triggers = sTriggers_FAIRY_MASTER_71,
        .triggerCount = ARRAY_COUNT(sTriggers_FAIRY_MASTER_71),
        .triggerFlags = 0 | QUEST_TRIGGER_TRAINER_BATTLE_START | QUEST_TRIGGER_ENTER_HALL_OF_FAME,
        .rewards = sRewards_FAIRY_MASTER_71,
        .rewardCount = ARRAY_COUNT(sRewards_FAIRY_MASTER_71),
        .requirements = NULL,
        .requirementCount = 0,
    },
#endif
#if defined(ROGUE_EXPANSION)
    [QUEST_ID_MEGA_EVOLUTION] = 
    {
        .title = sTitle_MEGA_EVOLUTION_72,
        .desc = gQuestDescText_MEGA_EVOLUTION_72,
        .flags = 0 | QUEST_CONST_CHALLENGE_DEFAULT | QUEST_CONST_ACTIVE_IN_RUN,
        .triggers = sTriggers_MEGA_EVOLUTION_72,
        .triggerCount = ARRAY_COUNT(sTriggers_MEGA_EVOLUTION_72),
        .triggerFlags = 0 | QUEST_TRIGGER_ENTER_HALL_OF_FAME,
        .rewards = sRewards_MEGA_EVOLUTION_72,
        .rewardCount = ARRAY_COUNT(sRewards_MEGA_EVOLUTION_72),
        .requirements = sRequirements_MEGA_EVOLUTION_72,
        .requirementCount = ARRAY_COUNT(sRequirements_MEGA_EVOLUTION_72),
    },
#endif
#if defined(ROGUE_EXPANSION)
    [QUEST_ID_Z_MOVES] = 
    {
        .title = sTitle_Z_MOVES_73,
        .desc = gQuestDescText_Z_MOVES_73,
        .flags = 0 | QUEST_CONST_CHALLENGE_DEFAULT | QUEST_CONST_ACTIVE_IN_RUN,
        .triggers = sTriggers_Z_MOVES_73,
        .triggerCount = ARRAY_COUNT(sTriggers_Z_MOVES_73),
        .triggerFlags = 0 | QUEST_TRIGGER_ENTER_HALL_OF_FAME,
        .rewards = sRewards_Z_MOVES_73,
        .rewardCount = ARRAY_COUNT(sRewards_Z_MOVES_73),
        .requirements = sRequirements_Z_MOVES_73,
        .requirementCount = ARRAY_COUNT(sRequirements_Z_MOVES_73),
    },
#endif
#if defined(ROGUE_EXPANSION)
    [QUEST_ID_DYNAMAX] = 
    {
        .title = sTitle_DYNAMAX_74,
        .desc = gQuestDescText_DYNAMAX_74,
        .flags = 0 | QUEST_CONST_CHALLENGE_DEFAULT | QUEST_CONST_ACTIVE_IN_RUN,
        .triggers = sTriggers_DYNAMAX_74,
        .triggerCount = ARRAY_COUNT(sTriggers_DYNAMAX_74),
        .triggerFlags = 0 | QUEST_TRIGGER_ENTER_HALL_OF_FAME,
        .rewards = sRewards_DYNAMAX_74,
        .rewardCount = ARRAY_COUNT(sRewards_DYNAMAX_74),
        .requirements = sRequirements_DYNAMAX_74,
        .requirementCount = ARRAY_COUNT(sRequirements_DYNAMAX_74),
    },
#endif
#if defined(ROGUE_EXPANSION)
    [QUEST_ID_TERASTALLIZATION] = 
    {
        .title = sTitle_TERASTALLIZATION_75,
        .desc = gQuestDescText_TERASTALLIZATION_75,
        .flags = 0 | QUEST_CONST_CHALLENGE_DEFAULT | QUEST_CONST_ACTIVE_IN_RUN,
        .triggers = sTriggers_TERASTALLIZATION_75,
        .triggerCount = ARRAY_COUNT(sTriggers_TERASTALLIZATION_75),
        .triggerFlags = 0 | QUEST_TRIGGER_ENTER_HALL_OF_FAME,
        .rewards = sRewards_TERASTALLIZATION_75,
        .rewardCount = ARRAY_COUNT(sRewards_TERASTALLIZATION_75),
        .requirements = sRequirements_TERASTALLIZATION_75,
        .requirementCount = ARRAY_COUNT(sRequirements_TERASTALLIZATION_75),
    },
#endif
#if defined(ROGUE_EXPANSION)
    [QUEST_ID_GIMMICK_OVERFLOW] = 
    {
        .title = sTitle_GIMMICK_OVERFLOW_76,
        .desc = gQuestDescText_GIMMICK_OVERFLOW_76,
        .flags = 0 | QUEST_CONST_CHALLENGE_DEFAULT | QUEST_CONST_ACTIVE_IN_RUN,
        .triggers = sTriggers_GIMMICK_OVERFLOW_76,
        .triggerCount = ARRAY_COUNT(sTriggers_GIMMICK_OVERFLOW_76),
        .triggerFlags = 0 | QUEST_TRIGGER_ENTER_HALL_OF_FAME,
        .rewards = sRewards_GIMMICK_OVERFLOW_76,
        .rewardCount = ARRAY_COUNT(sRewards_GIMMICK_OVERFLOW_76),
        .requirements = sRequirements_GIMMICK_OVERFLOW_76,
        .requirementCount = ARRAY_COUNT(sRequirements_GIMMICK_OVERFLOW_76),
    },
#endif
    [QUEST_ID_TRUE_TACTICS] = 
    {
        .title = sTitle_TRUE_TACTICS_77,
        .desc = gQuestDescText_TRUE_TACTICS_77,
        .flags = 0 | QUEST_CONST_CHALLENGE_DEFAULT | QUEST_CONST_ACTIVE_IN_RUN | QUEST_CONST_UNLOCKED_BY_DEFAULT,
        .triggers = sTriggers_TRUE_TACTICS_77,
        .triggerCount = ARRAY_COUNT(sTriggers_TRUE_TACTICS_77),
        .triggerFlags = 0 | QUEST_TRIGGER_MON_FAINTED | QUEST_TRIGGER_ENTER_HALL_OF_FAME,
        .rewards = sRewards_TRUE_TACTICS_77,
        .rewardCount = ARRAY_COUNT(sRewards_TRUE_TACTICS_77),
        .requirements = NULL,
        .requirementCount = 0,
    },
    [QUEST_ID_CHAOS_NOVICE] = 
    {
        .title = sTitle_CHAOS_NOVICE_78,
        .desc = gQuestDescText_CHAOS_NOVICE_78,
        .flags = 0 | QUEST_CONST_CHALLENGE_DEFAULT | QUEST_CONST_ACTIVE_IN_RUN | QUEST_CONST_UNLOCKED_BY_DEFAULT,
        .triggers = sTriggers_CHAOS_NOVICE_78,
        .triggerCount = ARRAY_COUNT(sTriggers_CHAOS_NOVICE_78),
        .triggerFlags = 0 | QUEST_TRIGGER_EXIT_ENCOUNTER | QUEST_TRIGGER_ENTER_HALL_OF_FAME,
        .rewards = sRewards_CHAOS_NOVICE_78,
        .rewardCount = ARRAY_COUNT(sRewards_CHAOS_NOVICE_78),
        .requirements = sRequirements_CHAOS_NOVICE_78,
        .requirementCount = ARRAY_COUNT(sRequirements_CHAOS_NOVICE_78),
    },
    [QUEST_ID_CHAOS_MASTER] = 
    {
        .title = sTitle_CHAOS_MASTER_79,
        .desc = gQuestDescText_CHAOS_MASTER_79,
        .flags = 0 | QUEST_CONST_CHALLENGE_DEFAULT | QUEST_CONST_ACTIVE_IN_RUN,
        .triggers = sTriggers_CHAOS_MASTER_79,
        .triggerCount = ARRAY_COUNT(sTriggers_CHAOS_MASTER_79),
        .triggerFlags = 0 | QUEST_TRIGGER_ENTER_HALL_OF_FAME,
        .rewards = sRewards_CHAOS_MASTER_79,
        .rewardCount = ARRAY_COUNT(sRewards_CHAOS_MASTER_79),
        .requirements = sRequirements_CHAOS_MASTER_79,
        .requirementCount = ARRAY_COUNT(sRequirements_CHAOS_MASTER_79),
    },
    [QUEST_ID_ROGUELOCKE] = 
    {
        .title = sTitle_ROGUELOCKE_80,
        .desc = gQuestDescText_ROGUELOCKE_80,
        .flags = 0 | QUEST_CONST_CHALLENGE_DEFAULT | QUEST_CONST_ACTIVE_IN_RUN | QUEST_CONST_UNLOCKED_BY_DEFAULT,
        .triggers = sTriggers_ROGUELOCKE_80,
        .triggerCount = ARRAY_COUNT(sTriggers_ROGUELOCKE_80),
        .triggerFlags = 0 | QUEST_TRIGGER_ENTER_HALL_OF_FAME,
        .rewards = sRewards_ROGUELOCKE_80,
        .rewardCount = ARRAY_COUNT(sRewards_ROGUELOCKE_80),
        .requirements = sRequirements_ROGUELOCKE_80,
        .requirementCount = ARRAY_COUNT(sRequirements_ROGUELOCKE_80),
    },
    [QUEST_ID_CANT_PICKEMARKQMARK] = 
    {
        .title = sTitle_CANT_PICKEMARKQMARK_81,
        .desc = gQuestDescText_CANT_PICKEMARKQMARK_81,
        .flags = 0 | QUEST_CONST_CHALLENGE_DEFAULT | QUEST_CONST_ACTIVE_IN_RUN | QUEST_CONST_UNLOCKED_BY_DEFAULT,
        .triggers = sTriggers_CANT_PICKEMARKQMARK_81,
        .triggerCount = ARRAY_COUNT(sTriggers_CANT_PICKEMARKQMARK_81),
        .triggerFlags = 0 | QUEST_TRIGGER_TRAINER_BATTLE_START | QUEST_TRIGGER_ENTER_HALL_OF_FAME,
        .rewards = sRewards_CANT_PICKEMARKQMARK_81,
        .rewardCount = ARRAY_COUNT(sRewards_CANT_PICKEMARKQMARK_81),
        .requirements = NULL,
        .requirementCount = 0,
    },
    [QUEST_ID_DIVERSITY] = 
    {
        .title = sTitle_DIVERSITY_82,
        .desc = gQuestDescText_DIVERSITY_82,
        .flags = 0 | QUEST_CONST_CHALLENGE_DEFAULT | QUEST_CONST_ACTIVE_IN_RUN | QUEST_CONST_UNLOCKED_BY_DEFAULT,
        .triggers = sTriggers_DIVERSITY_82,
        .triggerCount = ARRAY_COUNT(sTriggers_DIVERSITY_82),
        .triggerFlags = 0 | QUEST_TRIGGER_TRAINER_BATTLE_START | QUEST_TRIGGER_ENTER_HALL_OF_FAME,
        .rewards = sRewards_DIVERSITY_82,
        .rewardCount = ARRAY_COUNT(sRewards_DIVERSITY_82),
        .requirements = NULL,
        .requirementCount = 0,
    },
    [QUEST_ID_APOTHEOSIS] = 
    {
        .title = sTitle_APOTHEOSIS_83,
        .desc = gQuestDescText_APOTHEOSIS_83,
        .flags = 0 | QUEST_CONST_CHALLENGE_DEFAULT | QUEST_CONST_ACTIVE_IN_RUN | QUEST_CONST_UNLOCKED_BY_DEFAULT,
        .triggers = sTriggers_APOTHEOSIS_83,
        .triggerCount = ARRAY_COUNT(sTriggers_APOTHEOSIS_83),
        .triggerFlags = 0 | QUEST_TRIGGER_TRAINER_BATTLE_START | QUEST_TRIGGER_ENTER_HALL_OF_FAME,
        .rewards = sRewards_APOTHEOSIS_83,
        .rewardCount = ARRAY_COUNT(sRewards_APOTHEOSIS_83),
        .requirements = NULL,
        .requirementCount = 0,
    },
    [QUEST_ID_AESTHETICS] = 
    {
        .title = sTitle_AESTHETICS_84,
        .desc = gQuestDescText_AESTHETICS_84,
        .flags = 0 | QUEST_CONST_CHALLENGE_DEFAULT | QUEST_CONST_ACTIVE_IN_RUN | QUEST_CONST_UNLOCKED_BY_DEFAULT,
        .triggers = sTriggers_AESTHETICS_84,
        .triggerCount = ARRAY_COUNT(sTriggers_AESTHETICS_84),
        .triggerFlags = 0 | QUEST_TRIGGER_TRAINER_BATTLE_START | QUEST_TRIGGER_ENTER_HALL_OF_FAME,
        .rewards = sRewards_AESTHETICS_84,
        .rewardCount = ARRAY_COUNT(sRewards_AESTHETICS_84),
        .requirements = NULL,
        .requirementCount = 0,
    },
    [QUEST_ID_I_AM_SPEED] = 
    {
        .title = sTitle_I_AM_SPEED_85,
        .desc = gQuestDescText_I_AM_SPEED_85,
        .flags = 0 | QUEST_CONST_CHALLENGE_DEFAULT | QUEST_CONST_ACTIVE_IN_RUN | QUEST_CONST_UNLOCKED_BY_DEFAULT,
        .triggers = sTriggers_I_AM_SPEED_85,
        .triggerCount = ARRAY_COUNT(sTriggers_I_AM_SPEED_85),
        .triggerFlags = 0 | QUEST_TRIGGER_ENTER_HALL_OF_FAME | QUEST_TRIGGER_ANY_BATTLE_END,
        .rewards = sRewards_I_AM_SPEED_85,
        .rewardCount = ARRAY_COUNT(sRewards_I_AM_SPEED_85),
        .requirements = NULL,
        .requirementCount = 0,
    },
    [QUEST_ID_CURSED_BODY] = 
    {
        .title = sTitle_CURSED_BODY_86,
        .desc = gQuestDescText_CURSED_BODY_86,
        .flags = 0 | QUEST_CONST_CHALLENGE_DEFAULT | QUEST_CONST_ACTIVE_IN_RUN | QUEST_CONST_UNLOCKED_BY_DEFAULT,
        .triggers = sTriggers_CURSED_BODY_86,
        .triggerCount = ARRAY_COUNT(sTriggers_CURSED_BODY_86),
        .triggerFlags = 0 | QUEST_TRIGGER_ENTER_HALL_OF_FAME,
        .rewards = sRewards_CURSED_BODY_86,
        .rewardCount = ARRAY_COUNT(sRewards_CURSED_BODY_86),
        .requirements = sRequirements_CURSED_BODY_86,
        .requirementCount = ARRAY_COUNT(sRequirements_CURSED_BODY_86),
    },
    [QUEST_ID_LIMITED_CAPTURE] = 
    {
        .title = sTitle_LIMITED_CAPTURE_87,
        .desc = gQuestDescText_LIMITED_CAPTURE_87,
        .flags = 0 | QUEST_CONST_CHALLENGE_DEFAULT | QUEST_CONST_ACTIVE_IN_RUN | QUEST_CONST_UNLOCKED_BY_DEFAULT,
        .triggers = sTriggers_LIMITED_CAPTURE_87,
        .triggerCount = ARRAY_COUNT(sTriggers_LIMITED_CAPTURE_87),
        .triggerFlags = 0 | QUEST_TRIGGER_ANY_MON_CAUGHT | QUEST_TRIGGER_ENTER_HALL_OF_FAME,
        .rewards = sRewards_LIMITED_CAPTURE_87,
        .rewardCount = ARRAY_COUNT(sRewards_LIMITED_CAPTURE_87),
        .requirements = NULL,
        .requirementCount = 0,
    },
    [QUEST_ID_BST_CROWN] = 
    {
        .title = sTitle_BST_CROWN_88,
        .desc = gQuestDescText_BST_CROWN_88,
        .flags = 0 | QUEST_CONST_CHALLENGE_DEFAULT | QUEST_CONST_ACTIVE_IN_RUN | QUEST_CONST_UNLOCKED_BY_DEFAULT,
        .triggers = sTriggers_BST_CROWN_88,
        .triggerCount = ARRAY_COUNT(sTriggers_BST_CROWN_88),
        .triggerFlags = 0 | QUEST_TRIGGER_TRAINER_BATTLE_START | QUEST_TRIGGER_TRAINER_BATTLE_END_TURN | QUEST_TRIGGER_ENTER_HALL_OF_FAME,
        .rewards = sRewards_BST_CROWN_88,
        .rewardCount = ARRAY_COUNT(sRewards_BST_CROWN_88),
        .requirements = sRequirements_BST_CROWN_88,
        .requirementCount = ARRAY_COUNT(sRequirements_BST_CROWN_88),
    },
    [QUEST_ID_PRO_BUILDING] = 
    {
        .title = sTitle_PRO_BUILDING_89,
        .desc = gQuestDescText_PRO_BUILDING_89,
        .flags = 0 | QUEST_CONST_CHALLENGE_DEFAULT | QUEST_CONST_ACTIVE_IN_RUN | QUEST_CONST_UNLOCKED_BY_DEFAULT,
        .triggers = sTriggers_PRO_BUILDING_89,
        .triggerCount = ARRAY_COUNT(sTriggers_PRO_BUILDING_89),
        .triggerFlags = 0 | QUEST_TRIGGER_ENTER_HALL_OF_FAME,
        .rewards = sRewards_PRO_BUILDING_89,
        .rewardCount = ARRAY_COUNT(sRewards_PRO_BUILDING_89),
        .requirements = sRequirements_PRO_BUILDING_89,
        .requirementCount = ARRAY_COUNT(sRequirements_PRO_BUILDING_89),
    },
    [QUEST_ID_INSANE_MODE] = 
    {
        .title = sTitle_INSANE_MODE_90,
        .desc = gQuestDescText_INSANE_MODE_90,
        .flags = 0 | QUEST_CONST_CHALLENGE_DEFAULT | QUEST_CONST_ACTIVE_IN_RUN | QUEST_CONST_UNLOCKED_BY_DEFAULT,
        .triggers = sTriggers_INSANE_MODE_90,
        .triggerCount = ARRAY_COUNT(sTriggers_INSANE_MODE_90),
        .triggerFlags = 0 | QUEST_TRIGGER_TRAINER_BATTLE_START | QUEST_TRIGGER_ENTER_HALL_OF_FAME,
        .rewards = sRewards_INSANE_MODE_90,
        .rewardCount = ARRAY_COUNT(sRewards_INSANE_MODE_90),
        .requirements = sRequirements_INSANE_MODE_90,
        .requirementCount = ARRAY_COUNT(sRequirements_INSANE_MODE_90),
    },
    [QUEST_ID_IRON_MONO] = 
    {
        .title = sTitle_IRON_MONO_91,
        .desc = gQuestDescText_IRON_MONO_91,
        .flags = 0 | QUEST_CONST_CHALLENGE_DEFAULT | QUEST_CONST_ACTIVE_IN_RUN | QUEST_CONST_UNLOCKED_BY_DEFAULT,
        .triggers = sTriggers_IRON_MONO_91,
        .triggerCount = ARRAY_COUNT(sTriggers_IRON_MONO_91),
        .triggerFlags = 0 | QUEST_TRIGGER_ENTER_HALL_OF_FAME,
        .rewards = sRewards_IRON_MONO_91,
        .rewardCount = ARRAY_COUNT(sRewards_IRON_MONO_91),
        .requirements = sRequirements_IRON_MONO_91,
        .requirementCount = ARRAY_COUNT(sRequirements_IRON_MONO_91),
    },
    [QUEST_ID_IRON_KAIZO] = 
    {
        .title = sTitle_IRON_KAIZO_92,
        .desc = gQuestDescText_IRON_KAIZO_92,
        .flags = 0 | QUEST_CONST_CHALLENGE_DEFAULT | QUEST_CONST_ACTIVE_IN_RUN,
        .triggers = sTriggers_IRON_KAIZO_92,
        .triggerCount = ARRAY_COUNT(sTriggers_IRON_KAIZO_92),
        .triggerFlags = 0 | QUEST_TRIGGER_ENTER_HALL_OF_FAME,
        .rewards = sRewards_IRON_KAIZO_92,
        .rewardCount = ARRAY_COUNT(sRewards_IRON_KAIZO_92),
        .requirements = sRequirements_IRON_KAIZO_92,
        .requirementCount = ARRAY_COUNT(sRequirements_IRON_KAIZO_92),
    },
    [QUEST_ID_ROCKET_TRIUMPH] = 
    {
        .title = sTitle_ROCKET_TRIUMPH_93,
        .desc = gQuestDescText_ROCKET_TRIUMPH_93,
        .flags = 0 | QUEST_CONST_CHALLENGE_DEFAULT | QUEST_CONST_ACTIVE_IN_RUN | QUEST_CONST_UNLOCKED_BY_DEFAULT,
        .triggers = sTriggers_ROCKET_TRIUMPH_93,
        .triggerCount = ARRAY_COUNT(sTriggers_ROCKET_TRIUMPH_93),
        .triggerFlags = 0 | QUEST_TRIGGER_MAP_SPECIFIC_EVENT,
        .rewards = sRewards_ROCKET_TRIUMPH_93,
        .rewardCount = ARRAY_COUNT(sRewards_ROCKET_TRIUMPH_93),
        .requirements = NULL,
        .requirementCount = 0,
    },
    [QUEST_ID_AQUA_TRIUMPH] = 
    {
        .title = sTitle_AQUA_TRIUMPH_94,
        .desc = gQuestDescText_AQUA_TRIUMPH_94,
        .flags = 0 | QUEST_CONST_CHALLENGE_DEFAULT | QUEST_CONST_ACTIVE_IN_RUN | QUEST_CONST_UNLOCKED_BY_DEFAULT,
        .triggers = sTriggers_AQUA_TRIUMPH_94,
        .triggerCount = ARRAY_COUNT(sTriggers_AQUA_TRIUMPH_94),
        .triggerFlags = 0 | QUEST_TRIGGER_MAP_SPECIFIC_EVENT,
        .rewards = sRewards_AQUA_TRIUMPH_94,
        .rewardCount = ARRAY_COUNT(sRewards_AQUA_TRIUMPH_94),
        .requirements = NULL,
        .requirementCount = 0,
    },
    [QUEST_ID_MAGMA_TRIUMPH] = 
    {
        .title = sTitle_MAGMA_TRIUMPH_95,
        .desc = gQuestDescText_MAGMA_TRIUMPH_95,
        .flags = 0 | QUEST_CONST_CHALLENGE_DEFAULT | QUEST_CONST_ACTIVE_IN_RUN | QUEST_CONST_UNLOCKED_BY_DEFAULT,
        .triggers = sTriggers_MAGMA_TRIUMPH_95,
        .triggerCount = ARRAY_COUNT(sTriggers_MAGMA_TRIUMPH_95),
        .triggerFlags = 0 | QUEST_TRIGGER_MAP_SPECIFIC_EVENT,
        .rewards = sRewards_MAGMA_TRIUMPH_95,
        .rewardCount = ARRAY_COUNT(sRewards_MAGMA_TRIUMPH_95),
        .requirements = NULL,
        .requirementCount = 0,
    },
#if defined(ROGUE_EXPANSION)
    [QUEST_ID_GALACTIC_TRIUMPH] = 
    {
        .title = sTitle_GALACTIC_TRIUMPH_96,
        .desc = gQuestDescText_GALACTIC_TRIUMPH_96,
        .flags = 0 | QUEST_CONST_CHALLENGE_DEFAULT | QUEST_CONST_ACTIVE_IN_RUN | QUEST_CONST_UNLOCKED_BY_DEFAULT,
        .triggers = sTriggers_GALACTIC_TRIUMPH_96,
        .triggerCount = ARRAY_COUNT(sTriggers_GALACTIC_TRIUMPH_96),
        .triggerFlags = 0 | QUEST_TRIGGER_MAP_SPECIFIC_EVENT,
        .rewards = sRewards_GALACTIC_TRIUMPH_96,
        .rewardCount = ARRAY_COUNT(sRewards_GALACTIC_TRIUMPH_96),
        .requirements = NULL,
        .requirementCount = 0,
    },
#endif
    [QUEST_ID_BULBASAUR_MASTERY] = 
    {
        .title = sTitle_BULBASAUR_MASTERY_97,
        .desc = gQuestDescText_BULBASAUR_MASTERY_97,
        .flags = 0 | QUEST_CONST_MON_MASTERY_DEFAULT | QUEST_CONST_ACTIVE_IN_RUN | QUEST_CONST_UNLOCKED_BY_DEFAULT,
        .triggers = sTriggers_BULBASAUR_MASTERY_97,
        .triggerCount = ARRAY_COUNT(sTriggers_BULBASAUR_MASTERY_97),
        .triggerFlags = 0 | QUEST_TRIGGER_ENTER_HALL_OF_FAME,
        .rewards = sRewards_BULBASAUR_MASTERY_97,
        .rewardCount = ARRAY_COUNT(sRewards_BULBASAUR_MASTERY_97),
        .requirements = NULL,
        .requirementCount = 0,
    },
    [QUEST_ID_CHARMANDER_MASTERY] = 
    {
        .title = sTitle_CHARMANDER_MASTERY_98,
        .desc = gQuestDescText_CHARMANDER_MASTERY_98,
        .flags = 0 | QUEST_CONST_MON_MASTERY_DEFAULT | QUEST_CONST_ACTIVE_IN_RUN | QUEST_CONST_UNLOCKED_BY_DEFAULT,
        .triggers = sTriggers_CHARMANDER_MASTERY_98,
        .triggerCount = ARRAY_COUNT(sTriggers_CHARMANDER_MASTERY_98),
        .triggerFlags = 0 | QUEST_TRIGGER_ENTER_HALL_OF_FAME,
        .rewards = sRewards_CHARMANDER_MASTERY_98,
        .rewardCount = ARRAY_COUNT(sRewards_CHARMANDER_MASTERY_98),
        .requirements = NULL,
        .requirementCount = 0,
    },
    [QUEST_ID_SQUIRTLE_MASTERY] = 
    {
        .title = sTitle_SQUIRTLE_MASTERY_99,
        .desc = gQuestDescText_SQUIRTLE_MASTERY_99,
        .flags = 0 | QUEST_CONST_MON_MASTERY_DEFAULT | QUEST_CONST_ACTIVE_IN_RUN | QUEST_CONST_UNLOCKED_BY_DEFAULT,
        .triggers = sTriggers_SQUIRTLE_MASTERY_99,
        .triggerCount = ARRAY_COUNT(sTriggers_SQUIRTLE_MASTERY_99),
        .triggerFlags = 0 | QUEST_TRIGGER_ENTER_HALL_OF_FAME,
        .rewards = sRewards_SQUIRTLE_MASTERY_99,
        .rewardCount = ARRAY_COUNT(sRewards_SQUIRTLE_MASTERY_99),
        .requirements = NULL,
        .requirementCount = 0,
    },
    [QUEST_ID_CATERPIE_MASTERY] = 
    {
        .title = sTitle_CATERPIE_MASTERY_100,
        .desc = gQuestDescText_CATERPIE_MASTERY_100,
        .flags = 0 | QUEST_CONST_MON_MASTERY_DEFAULT | QUEST_CONST_ACTIVE_IN_RUN | QUEST_CONST_UNLOCKED_BY_DEFAULT,
        .triggers = sTriggers_CATERPIE_MASTERY_100,
        .triggerCount = ARRAY_COUNT(sTriggers_CATERPIE_MASTERY_100),
        .triggerFlags = 0 | QUEST_TRIGGER_ENTER_HALL_OF_FAME,
        .rewards = sRewards_CATERPIE_MASTERY_100,
        .rewardCount = ARRAY_COUNT(sRewards_CATERPIE_MASTERY_100),
        .requirements = NULL,
        .requirementCount = 0,
    },
    [QUEST_ID_WEEDLE_MASTERY] = 
    {
        .title = sTitle_WEEDLE_MASTERY_101,
        .desc = gQuestDescText_WEEDLE_MASTERY_101,
        .flags = 0 | QUEST_CONST_MON_MASTERY_DEFAULT | QUEST_CONST_ACTIVE_IN_RUN | QUEST_CONST_UNLOCKED_BY_DEFAULT,
        .triggers = sTriggers_WEEDLE_MASTERY_101,
        .triggerCount = ARRAY_COUNT(sTriggers_WEEDLE_MASTERY_101),
        .triggerFlags = 0 | QUEST_TRIGGER_ENTER_HALL_OF_FAME,
        .rewards = sRewards_WEEDLE_MASTERY_101,
        .rewardCount = ARRAY_COUNT(sRewards_WEEDLE_MASTERY_101),
        .requirements = NULL,
        .requirementCount = 0,
    },
    [QUEST_ID_PIDGEY_MASTERY] = 
    {
        .title = sTitle_PIDGEY_MASTERY_102,
        .desc = gQuestDescText_PIDGEY_MASTERY_102,
        .flags = 0 | QUEST_CONST_MON_MASTERY_DEFAULT | QUEST_CONST_ACTIVE_IN_RUN | QUEST_CONST_UNLOCKED_BY_DEFAULT,
        .triggers = sTriggers_PIDGEY_MASTERY_102,
        .triggerCount = ARRAY_COUNT(sTriggers_PIDGEY_MASTERY_102),
        .triggerFlags = 0 | QUEST_TRIGGER_ENTER_HALL_OF_FAME,
        .rewards = sRewards_PIDGEY_MASTERY_102,
        .rewardCount = ARRAY_COUNT(sRewards_PIDGEY_MASTERY_102),
        .requirements = NULL,
        .requirementCount = 0,
    },
    [QUEST_ID_PICHU_MASTERY] = 
    {
        .title = sTitle_PICHU_MASTERY_103,
        .desc = gQuestDescText_PICHU_MASTERY_103,
        .flags = 0 | QUEST_CONST_MON_MASTERY_DEFAULT | QUEST_CONST_ACTIVE_IN_RUN | QUEST_CONST_UNLOCKED_BY_DEFAULT,
        .triggers = sTriggers_PICHU_MASTERY_103,
        .triggerCount = ARRAY_COUNT(sTriggers_PICHU_MASTERY_103),
        .triggerFlags = 0 | QUEST_TRIGGER_ENTER_HALL_OF_FAME,
        .rewards = sRewards_PICHU_MASTERY_103,
        .rewardCount = ARRAY_COUNT(sRewards_PICHU_MASTERY_103),
        .requirements = NULL,
        .requirementCount = 0,
    },
    [QUEST_ID_MEOWTH_MASTERY] = 
    {
        .title = sTitle_MEOWTH_MASTERY_104,
        .desc = gQuestDescText_MEOWTH_MASTERY_104,
        .flags = 0 | QUEST_CONST_MON_MASTERY_DEFAULT | QUEST_CONST_ACTIVE_IN_RUN | QUEST_CONST_UNLOCKED_BY_DEFAULT,
        .triggers = sTriggers_MEOWTH_MASTERY_104,
        .triggerCount = ARRAY_COUNT(sTriggers_MEOWTH_MASTERY_104),
        .triggerFlags = 0 | QUEST_TRIGGER_ENTER_HALL_OF_FAME,
        .rewards = sRewards_MEOWTH_MASTERY_104,
        .rewardCount = ARRAY_COUNT(sRewards_MEOWTH_MASTERY_104),
        .requirements = NULL,
        .requirementCount = 0,
    },
    [QUEST_ID_ABRA_MASTERY] = 
    {
        .title = sTitle_ABRA_MASTERY_105,
        .desc = gQuestDescText_ABRA_MASTERY_105,
        .flags = 0 | QUEST_CONST_MON_MASTERY_DEFAULT | QUEST_CONST_ACTIVE_IN_RUN | QUEST_CONST_UNLOCKED_BY_DEFAULT,
        .triggers = sTriggers_ABRA_MASTERY_105,
        .triggerCount = ARRAY_COUNT(sTriggers_ABRA_MASTERY_105),
        .triggerFlags = 0 | QUEST_TRIGGER_ENTER_HALL_OF_FAME,
        .rewards = sRewards_ABRA_MASTERY_105,
        .rewardCount = ARRAY_COUNT(sRewards_ABRA_MASTERY_105),
        .requirements = NULL,
        .requirementCount = 0,
    },
    [QUEST_ID_MACHOP_MASTERY] = 
    {
        .title = sTitle_MACHOP_MASTERY_106,
        .desc = gQuestDescText_MACHOP_MASTERY_106,
        .flags = 0 | QUEST_CONST_MON_MASTERY_DEFAULT | QUEST_CONST_ACTIVE_IN_RUN | QUEST_CONST_UNLOCKED_BY_DEFAULT,
        .triggers = sTriggers_MACHOP_MASTERY_106,
        .triggerCount = ARRAY_COUNT(sTriggers_MACHOP_MASTERY_106),
        .triggerFlags = 0 | QUEST_TRIGGER_ENTER_HALL_OF_FAME,
        .rewards = sRewards_MACHOP_MASTERY_106,
        .rewardCount = ARRAY_COUNT(sRewards_MACHOP_MASTERY_106),
        .requirements = NULL,
        .requirementCount = 0,
    },
    [QUEST_ID_SLOWPOKE_MASTERY] = 
    {
        .title = sTitle_SLOWPOKE_MASTERY_107,
        .desc = gQuestDescText_SLOWPOKE_MASTERY_107,
        .flags = 0 | QUEST_CONST_MON_MASTERY_DEFAULT | QUEST_CONST_ACTIVE_IN_RUN | QUEST_CONST_UNLOCKED_BY_DEFAULT,
        .triggers = sTriggers_SLOWPOKE_MASTERY_107,
        .triggerCount = ARRAY_COUNT(sTriggers_SLOWPOKE_MASTERY_107),
        .triggerFlags = 0 | QUEST_TRIGGER_ENTER_HALL_OF_FAME,
        .rewards = sRewards_SLOWPOKE_MASTERY_107,
        .rewardCount = ARRAY_COUNT(sRewards_SLOWPOKE_MASTERY_107),
        .requirements = NULL,
        .requirementCount = 0,
    },
    [QUEST_ID_GASTLY_MASTERY] = 
    {
        .title = sTitle_GASTLY_MASTERY_108,
        .desc = gQuestDescText_GASTLY_MASTERY_108,
        .flags = 0 | QUEST_CONST_MON_MASTERY_DEFAULT | QUEST_CONST_ACTIVE_IN_RUN | QUEST_CONST_UNLOCKED_BY_DEFAULT,
        .triggers = sTriggers_GASTLY_MASTERY_108,
        .triggerCount = ARRAY_COUNT(sTriggers_GASTLY_MASTERY_108),
        .triggerFlags = 0 | QUEST_TRIGGER_ENTER_HALL_OF_FAME,
        .rewards = sRewards_GASTLY_MASTERY_108,
        .rewardCount = ARRAY_COUNT(sRewards_GASTLY_MASTERY_108),
        .requirements = NULL,
        .requirementCount = 0,
    },
    [QUEST_ID_ONIX_MASTERY] = 
    {
        .title = sTitle_ONIX_MASTERY_109,
        .desc = gQuestDescText_ONIX_MASTERY_109,
        .flags = 0 | QUEST_CONST_MON_MASTERY_DEFAULT | QUEST_CONST_ACTIVE_IN_RUN | QUEST_CONST_UNLOCKED_BY_DEFAULT,
        .triggers = sTriggers_ONIX_MASTERY_109,
        .triggerCount = ARRAY_COUNT(sTriggers_ONIX_MASTERY_109),
        .triggerFlags = 0 | QUEST_TRIGGER_ENTER_HALL_OF_FAME,
        .rewards = sRewards_ONIX_MASTERY_109,
        .rewardCount = ARRAY_COUNT(sRewards_ONIX_MASTERY_109),
        .requirements = NULL,
        .requirementCount = 0,
    },
    [QUEST_ID_KRABBY_MASTERY] = 
    {
        .title = sTitle_KRABBY_MASTERY_110,
        .desc = gQuestDescText_KRABBY_MASTERY_110,
        .flags = 0 | QUEST_CONST_MON_MASTERY_DEFAULT | QUEST_CONST_ACTIVE_IN_RUN | QUEST_CONST_UNLOCKED_BY_DEFAULT,
        .triggers = sTriggers_KRABBY_MASTERY_110,
        .triggerCount = ARRAY_COUNT(sTriggers_KRABBY_MASTERY_110),
        .triggerFlags = 0 | QUEST_TRIGGER_ENTER_HALL_OF_FAME,
        .rewards = sRewards_KRABBY_MASTERY_110,
        .rewardCount = ARRAY_COUNT(sRewards_KRABBY_MASTERY_110),
        .requirements = NULL,
        .requirementCount = 0,
    },
    [QUEST_ID_KANGASKHAN_MASTERY] = 
    {
        .title = sTitle_KANGASKHAN_MASTERY_111,
        .desc = gQuestDescText_KANGASKHAN_MASTERY_111,
        .flags = 0 | QUEST_CONST_MON_MASTERY_DEFAULT | QUEST_CONST_ACTIVE_IN_RUN | QUEST_CONST_UNLOCKED_BY_DEFAULT,
        .triggers = sTriggers_KANGASKHAN_MASTERY_111,
        .triggerCount = ARRAY_COUNT(sTriggers_KANGASKHAN_MASTERY_111),
        .triggerFlags = 0 | QUEST_TRIGGER_ENTER_HALL_OF_FAME,
        .rewards = sRewards_KANGASKHAN_MASTERY_111,
        .rewardCount = ARRAY_COUNT(sRewards_KANGASKHAN_MASTERY_111),
        .requirements = NULL,
        .requirementCount = 0,
    },
    [QUEST_ID_PINSIR_MASTERY] = 
    {
        .title = sTitle_PINSIR_MASTERY_112,
        .desc = gQuestDescText_PINSIR_MASTERY_112,
        .flags = 0 | QUEST_CONST_MON_MASTERY_DEFAULT | QUEST_CONST_ACTIVE_IN_RUN | QUEST_CONST_UNLOCKED_BY_DEFAULT,
        .triggers = sTriggers_PINSIR_MASTERY_112,
        .triggerCount = ARRAY_COUNT(sTriggers_PINSIR_MASTERY_112),
        .triggerFlags = 0 | QUEST_TRIGGER_ENTER_HALL_OF_FAME,
        .rewards = sRewards_PINSIR_MASTERY_112,
        .rewardCount = ARRAY_COUNT(sRewards_PINSIR_MASTERY_112),
        .requirements = NULL,
        .requirementCount = 0,
    },
    [QUEST_ID_SCYTHER_MASTERY] = 
    {
        .title = sTitle_SCYTHER_MASTERY_113,
        .desc = gQuestDescText_SCYTHER_MASTERY_113,
        .flags = 0 | QUEST_CONST_MON_MASTERY_DEFAULT | QUEST_CONST_ACTIVE_IN_RUN | QUEST_CONST_UNLOCKED_BY_DEFAULT,
        .triggers = sTriggers_SCYTHER_MASTERY_113,
        .triggerCount = ARRAY_COUNT(sTriggers_SCYTHER_MASTERY_113),
        .triggerFlags = 0 | QUEST_TRIGGER_ENTER_HALL_OF_FAME,
        .rewards = sRewards_SCYTHER_MASTERY_113,
        .rewardCount = ARRAY_COUNT(sRewards_SCYTHER_MASTERY_113),
        .requirements = NULL,
        .requirementCount = 0,
    },
    [QUEST_ID_MAGIKARP_MASTERY] = 
    {
        .title = sTitle_MAGIKARP_MASTERY_114,
        .desc = gQuestDescText_MAGIKARP_MASTERY_114,
        .flags = 0 | QUEST_CONST_MON_MASTERY_DEFAULT | QUEST_CONST_ACTIVE_IN_RUN | QUEST_CONST_UNLOCKED_BY_DEFAULT,
        .triggers = sTriggers_MAGIKARP_MASTERY_114,
        .triggerCount = ARRAY_COUNT(sTriggers_MAGIKARP_MASTERY_114),
        .triggerFlags = 0 | QUEST_TRIGGER_ENTER_HALL_OF_FAME,
        .rewards = sRewards_MAGIKARP_MASTERY_114,
        .rewardCount = ARRAY_COUNT(sRewards_MAGIKARP_MASTERY_114),
        .requirements = NULL,
        .requirementCount = 0,
    },
    [QUEST_ID_LAPRAS_MASTERY] = 
    {
        .title = sTitle_LAPRAS_MASTERY_115,
        .desc = gQuestDescText_LAPRAS_MASTERY_115,
        .flags = 0 | QUEST_CONST_MON_MASTERY_DEFAULT | QUEST_CONST_ACTIVE_IN_RUN | QUEST_CONST_UNLOCKED_BY_DEFAULT,
        .triggers = sTriggers_LAPRAS_MASTERY_115,
        .triggerCount = ARRAY_COUNT(sTriggers_LAPRAS_MASTERY_115),
        .triggerFlags = 0 | QUEST_TRIGGER_ENTER_HALL_OF_FAME,
        .rewards = sRewards_LAPRAS_MASTERY_115,
        .rewardCount = ARRAY_COUNT(sRewards_LAPRAS_MASTERY_115),
        .requirements = NULL,
        .requirementCount = 0,
    },
    [QUEST_ID_EEVEE_MASTERY] = 
    {
        .title = sTitle_EEVEE_MASTERY_116,
        .desc = gQuestDescText_EEVEE_MASTERY_116,
        .flags = 0 | QUEST_CONST_MON_MASTERY_DEFAULT | QUEST_CONST_ACTIVE_IN_RUN | QUEST_CONST_UNLOCKED_BY_DEFAULT,
        .triggers = sTriggers_EEVEE_MASTERY_116,
        .triggerCount = ARRAY_COUNT(sTriggers_EEVEE_MASTERY_116),
        .triggerFlags = 0 | QUEST_TRIGGER_ENTER_HALL_OF_FAME,
        .rewards = sRewards_EEVEE_MASTERY_116,
        .rewardCount = ARRAY_COUNT(sRewards_EEVEE_MASTERY_116),
        .requirements = NULL,
        .requirementCount = 0,
    },
    [QUEST_ID_AERODACTYL_MASTERY] = 
    {
        .title = sTitle_AERODACTYL_MASTERY_117,
        .desc = gQuestDescText_AERODACTYL_MASTERY_117,
        .flags = 0 | QUEST_CONST_MON_MASTERY_DEFAULT | QUEST_CONST_ACTIVE_IN_RUN | QUEST_CONST_UNLOCKED_BY_DEFAULT,
        .triggers = sTriggers_AERODACTYL_MASTERY_117,
        .triggerCount = ARRAY_COUNT(sTriggers_AERODACTYL_MASTERY_117),
        .triggerFlags = 0 | QUEST_TRIGGER_ENTER_HALL_OF_FAME,
        .rewards = sRewards_AERODACTYL_MASTERY_117,
        .rewardCount = ARRAY_COUNT(sRewards_AERODACTYL_MASTERY_117),
        .requirements = NULL,
        .requirementCount = 0,
    },
    [QUEST_ID_SNORLAX_MASTERY] = 
    {
        .title = sTitle_SNORLAX_MASTERY_118,
        .desc = gQuestDescText_SNORLAX_MASTERY_118,
        .flags = 0 | QUEST_CONST_MON_MASTERY_DEFAULT | QUEST_CONST_ACTIVE_IN_RUN | QUEST_CONST_UNLOCKED_BY_DEFAULT,
        .triggers = sTriggers_SNORLAX_MASTERY_118,
        .triggerCount = ARRAY_COUNT(sTriggers_SNORLAX_MASTERY_118),
        .triggerFlags = 0 | QUEST_TRIGGER_ENTER_HALL_OF_FAME,
        .rewards = sRewards_SNORLAX_MASTERY_118,
        .rewardCount = ARRAY_COUNT(sRewards_SNORLAX_MASTERY_118),
        .requirements = NULL,
        .requirementCount = 0,
    },
    [QUEST_ID_MEWTWO_MASTERY] = 
    {
        .title = sTitle_MEWTWO_MASTERY_119,
        .desc = gQuestDescText_MEWTWO_MASTERY_119,
        .flags = 0 | QUEST_CONST_MON_MASTERY_DEFAULT | QUEST_CONST_ACTIVE_IN_RUN | QUEST_CONST_UNLOCKED_BY_DEFAULT,
        .triggers = sTriggers_MEWTWO_MASTERY_119,
        .triggerCount = ARRAY_COUNT(sTriggers_MEWTWO_MASTERY_119),
        .triggerFlags = 0 | QUEST_TRIGGER_ENTER_HALL_OF_FAME,
        .rewards = sRewards_MEWTWO_MASTERY_119,
        .rewardCount = ARRAY_COUNT(sRewards_MEWTWO_MASTERY_119),
        .requirements = NULL,
        .requirementCount = 0,
    },
    [QUEST_ID_MEW_MASTERY] = 
    {
        .title = sTitle_MEW_MASTERY_120,
        .desc = gQuestDescText_MEW_MASTERY_120,
        .flags = 0 | QUEST_CONST_MON_MASTERY_DEFAULT | QUEST_CONST_ACTIVE_IN_RUN | QUEST_CONST_UNLOCKED_BY_DEFAULT,
        .triggers = sTriggers_MEW_MASTERY_120,
        .triggerCount = ARRAY_COUNT(sTriggers_MEW_MASTERY_120),
        .triggerFlags = 0 | QUEST_TRIGGER_ENTER_HALL_OF_FAME,
        .rewards = sRewards_MEW_MASTERY_120,
        .rewardCount = ARRAY_COUNT(sRewards_MEW_MASTERY_120),
        .requirements = NULL,
        .requirementCount = 0,
    },
    [QUEST_ID_MAREEP_MASTERY] = 
    {
        .title = sTitle_MAREEP_MASTERY_121,
        .desc = gQuestDescText_MAREEP_MASTERY_121,
        .flags = 0 | QUEST_CONST_MON_MASTERY_DEFAULT | QUEST_CONST_ACTIVE_IN_RUN | QUEST_CONST_UNLOCKED_BY_DEFAULT,
        .triggers = sTriggers_MAREEP_MASTERY_121,
        .triggerCount = ARRAY_COUNT(sTriggers_MAREEP_MASTERY_121),
        .triggerFlags = 0 | QUEST_TRIGGER_ENTER_HALL_OF_FAME,
        .rewards = sRewards_MAREEP_MASTERY_121,
        .rewardCount = ARRAY_COUNT(sRewards_MAREEP_MASTERY_121),
        .requirements = NULL,
        .requirementCount = 0,
    },
    [QUEST_ID_HERACROSS_MASTERY] = 
    {
        .title = sTitle_HERACROSS_MASTERY_122,
        .desc = gQuestDescText_HERACROSS_MASTERY_122,
        .flags = 0 | QUEST_CONST_MON_MASTERY_DEFAULT | QUEST_CONST_ACTIVE_IN_RUN | QUEST_CONST_UNLOCKED_BY_DEFAULT,
        .triggers = sTriggers_HERACROSS_MASTERY_122,
        .triggerCount = ARRAY_COUNT(sTriggers_HERACROSS_MASTERY_122),
        .triggerFlags = 0 | QUEST_TRIGGER_ENTER_HALL_OF_FAME,
        .rewards = sRewards_HERACROSS_MASTERY_122,
        .rewardCount = ARRAY_COUNT(sRewards_HERACROSS_MASTERY_122),
        .requirements = NULL,
        .requirementCount = 0,
    },
    [QUEST_ID_HOUNDOUR_MASTERY] = 
    {
        .title = sTitle_HOUNDOUR_MASTERY_123,
        .desc = gQuestDescText_HOUNDOUR_MASTERY_123,
        .flags = 0 | QUEST_CONST_MON_MASTERY_DEFAULT | QUEST_CONST_ACTIVE_IN_RUN | QUEST_CONST_UNLOCKED_BY_DEFAULT,
        .triggers = sTriggers_HOUNDOUR_MASTERY_123,
        .triggerCount = ARRAY_COUNT(sTriggers_HOUNDOUR_MASTERY_123),
        .triggerFlags = 0 | QUEST_TRIGGER_ENTER_HALL_OF_FAME,
        .rewards = sRewards_HOUNDOUR_MASTERY_123,
        .rewardCount = ARRAY_COUNT(sRewards_HOUNDOUR_MASTERY_123),
        .requirements = NULL,
        .requirementCount = 0,
    },
    [QUEST_ID_LARVITAR_MASTERY] = 
    {
        .title = sTitle_LARVITAR_MASTERY_124,
        .desc = gQuestDescText_LARVITAR_MASTERY_124,
        .flags = 0 | QUEST_CONST_MON_MASTERY_DEFAULT | QUEST_CONST_ACTIVE_IN_RUN | QUEST_CONST_UNLOCKED_BY_DEFAULT,
        .triggers = sTriggers_LARVITAR_MASTERY_124,
        .triggerCount = ARRAY_COUNT(sTriggers_LARVITAR_MASTERY_124),
        .triggerFlags = 0 | QUEST_TRIGGER_ENTER_HALL_OF_FAME,
        .rewards = sRewards_LARVITAR_MASTERY_124,
        .rewardCount = ARRAY_COUNT(sRewards_LARVITAR_MASTERY_124),
        .requirements = NULL,
        .requirementCount = 0,
    },
    [QUEST_ID_TREECKO_MASTERY] = 
    {
        .title = sTitle_TREECKO_MASTERY_125,
        .desc = gQuestDescText_TREECKO_MASTERY_125,
        .flags = 0 | QUEST_CONST_MON_MASTERY_DEFAULT | QUEST_CONST_ACTIVE_IN_RUN | QUEST_CONST_UNLOCKED_BY_DEFAULT,
        .triggers = sTriggers_TREECKO_MASTERY_125,
        .triggerCount = ARRAY_COUNT(sTriggers_TREECKO_MASTERY_125),
        .triggerFlags = 0 | QUEST_TRIGGER_ENTER_HALL_OF_FAME,
        .rewards = sRewards_TREECKO_MASTERY_125,
        .rewardCount = ARRAY_COUNT(sRewards_TREECKO_MASTERY_125),
        .requirements = NULL,
        .requirementCount = 0,
    },
    [QUEST_ID_TORCHIC_MASTERY] = 
    {
        .title = sTitle_TORCHIC_MASTERY_126,
        .desc = gQuestDescText_TORCHIC_MASTERY_126,
        .flags = 0 | QUEST_CONST_MON_MASTERY_DEFAULT | QUEST_CONST_ACTIVE_IN_RUN | QUEST_CONST_UNLOCKED_BY_DEFAULT,
        .triggers = sTriggers_TORCHIC_MASTERY_126,
        .triggerCount = ARRAY_COUNT(sTriggers_TORCHIC_MASTERY_126),
        .triggerFlags = 0 | QUEST_TRIGGER_ENTER_HALL_OF_FAME,
        .rewards = sRewards_TORCHIC_MASTERY_126,
        .rewardCount = ARRAY_COUNT(sRewards_TORCHIC_MASTERY_126),
        .requirements = NULL,
        .requirementCount = 0,
    },
    [QUEST_ID_MUDKIP_MASTERY] = 
    {
        .title = sTitle_MUDKIP_MASTERY_127,
        .desc = gQuestDescText_MUDKIP_MASTERY_127,
        .flags = 0 | QUEST_CONST_MON_MASTERY_DEFAULT | QUEST_CONST_ACTIVE_IN_RUN | QUEST_CONST_UNLOCKED_BY_DEFAULT,
        .triggers = sTriggers_MUDKIP_MASTERY_127,
        .triggerCount = ARRAY_COUNT(sTriggers_MUDKIP_MASTERY_127),
        .triggerFlags = 0 | QUEST_TRIGGER_ENTER_HALL_OF_FAME,
        .rewards = sRewards_MUDKIP_MASTERY_127,
        .rewardCount = ARRAY_COUNT(sRewards_MUDKIP_MASTERY_127),
        .requirements = NULL,
        .requirementCount = 0,
    },
    [QUEST_ID_RALTS_MASTERY] = 
    {
        .title = sTitle_RALTS_MASTERY_128,
        .desc = gQuestDescText_RALTS_MASTERY_128,
        .flags = 0 | QUEST_CONST_MON_MASTERY_DEFAULT | QUEST_CONST_ACTIVE_IN_RUN | QUEST_CONST_UNLOCKED_BY_DEFAULT,
        .triggers = sTriggers_RALTS_MASTERY_128,
        .triggerCount = ARRAY_COUNT(sTriggers_RALTS_MASTERY_128),
        .triggerFlags = 0 | QUEST_TRIGGER_ENTER_HALL_OF_FAME,
        .rewards = sRewards_RALTS_MASTERY_128,
        .rewardCount = ARRAY_COUNT(sRewards_RALTS_MASTERY_128),
        .requirements = NULL,
        .requirementCount = 0,
    },
    [QUEST_ID_SABLEYE_MASTERY] = 
    {
        .title = sTitle_SABLEYE_MASTERY_129,
        .desc = gQuestDescText_SABLEYE_MASTERY_129,
        .flags = 0 | QUEST_CONST_MON_MASTERY_DEFAULT | QUEST_CONST_ACTIVE_IN_RUN | QUEST_CONST_UNLOCKED_BY_DEFAULT,
        .triggers = sTriggers_SABLEYE_MASTERY_129,
        .triggerCount = ARRAY_COUNT(sTriggers_SABLEYE_MASTERY_129),
        .triggerFlags = 0 | QUEST_TRIGGER_ENTER_HALL_OF_FAME,
        .rewards = sRewards_SABLEYE_MASTERY_129,
        .rewardCount = ARRAY_COUNT(sRewards_SABLEYE_MASTERY_129),
        .requirements = NULL,
        .requirementCount = 0,
    },
    [QUEST_ID_MAWILE_MASTERY] = 
    {
        .title = sTitle_MAWILE_MASTERY_130,
        .desc = gQuestDescText_MAWILE_MASTERY_130,
        .flags = 0 | QUEST_CONST_MON_MASTERY_DEFAULT | QUEST_CONST_ACTIVE_IN_RUN | QUEST_CONST_UNLOCKED_BY_DEFAULT,
        .triggers = sTriggers_MAWILE_MASTERY_130,
        .triggerCount = ARRAY_COUNT(sTriggers_MAWILE_MASTERY_130),
        .triggerFlags = 0 | QUEST_TRIGGER_ENTER_HALL_OF_FAME,
        .rewards = sRewards_MAWILE_MASTERY_130,
        .rewardCount = ARRAY_COUNT(sRewards_MAWILE_MASTERY_130),
        .requirements = NULL,
        .requirementCount = 0,
    },
    [QUEST_ID_ARON_MASTERY] = 
    {
        .title = sTitle_ARON_MASTERY_131,
        .desc = gQuestDescText_ARON_MASTERY_131,
        .flags = 0 | QUEST_CONST_MON_MASTERY_DEFAULT | QUEST_CONST_ACTIVE_IN_RUN | QUEST_CONST_UNLOCKED_BY_DEFAULT,
        .triggers = sTriggers_ARON_MASTERY_131,
        .triggerCount = ARRAY_COUNT(sTriggers_ARON_MASTERY_131),
        .triggerFlags = 0 | QUEST_TRIGGER_ENTER_HALL_OF_FAME,
        .rewards = sRewards_ARON_MASTERY_131,
        .rewardCount = ARRAY_COUNT(sRewards_ARON_MASTERY_131),
        .requirements = NULL,
        .requirementCount = 0,
    },
    [QUEST_ID_MEDITITE_MASTERY] = 
    {
        .title = sTitle_MEDITITE_MASTERY_132,
        .desc = gQuestDescText_MEDITITE_MASTERY_132,
        .flags = 0 | QUEST_CONST_MON_MASTERY_DEFAULT | QUEST_CONST_ACTIVE_IN_RUN | QUEST_CONST_UNLOCKED_BY_DEFAULT,
        .triggers = sTriggers_MEDITITE_MASTERY_132,
        .triggerCount = ARRAY_COUNT(sTriggers_MEDITITE_MASTERY_132),
        .triggerFlags = 0 | QUEST_TRIGGER_ENTER_HALL_OF_FAME,
        .rewards = sRewards_MEDITITE_MASTERY_132,
        .rewardCount = ARRAY_COUNT(sRewards_MEDITITE_MASTERY_132),
        .requirements = NULL,
        .requirementCount = 0,
    },
    [QUEST_ID_ELECTRIKE_MASTERY] = 
    {
        .title = sTitle_ELECTRIKE_MASTERY_133,
        .desc = gQuestDescText_ELECTRIKE_MASTERY_133,
        .flags = 0 | QUEST_CONST_MON_MASTERY_DEFAULT | QUEST_CONST_ACTIVE_IN_RUN | QUEST_CONST_UNLOCKED_BY_DEFAULT,
        .triggers = sTriggers_ELECTRIKE_MASTERY_133,
        .triggerCount = ARRAY_COUNT(sTriggers_ELECTRIKE_MASTERY_133),
        .triggerFlags = 0 | QUEST_TRIGGER_ENTER_HALL_OF_FAME,
        .rewards = sRewards_ELECTRIKE_MASTERY_133,
        .rewardCount = ARRAY_COUNT(sRewards_ELECTRIKE_MASTERY_133),
        .requirements = NULL,
        .requirementCount = 0,
    },
    [QUEST_ID_CARVANHA_MASTERY] = 
    {
        .title = sTitle_CARVANHA_MASTERY_134,
        .desc = gQuestDescText_CARVANHA_MASTERY_134,
        .flags = 0 | QUEST_CONST_MON_MASTERY_DEFAULT | QUEST_CONST_ACTIVE_IN_RUN | QUEST_CONST_UNLOCKED_BY_DEFAULT,
        .triggers = sTriggers_CARVANHA_MASTERY_134,
        .triggerCount = ARRAY_COUNT(sTriggers_CARVANHA_MASTERY_134),
        .triggerFlags = 0 | QUEST_TRIGGER_ENTER_HALL_OF_FAME,
        .rewards = sRewards_CARVANHA_MASTERY_134,
        .rewardCount = ARRAY_COUNT(sRewards_CARVANHA_MASTERY_134),
        .requirements = NULL,
        .requirementCount = 0,
    },
    [QUEST_ID_NUMEL_MASTERY] = 
    {
        .title = sTitle_NUMEL_MASTERY_135,
        .desc = gQuestDescText_NUMEL_MASTERY_135,
        .flags = 0 | QUEST_CONST_MON_MASTERY_DEFAULT | QUEST_CONST_ACTIVE_IN_RUN | QUEST_CONST_UNLOCKED_BY_DEFAULT,
        .triggers = sTriggers_NUMEL_MASTERY_135,
        .triggerCount = ARRAY_COUNT(sTriggers_NUMEL_MASTERY_135),
        .triggerFlags = 0 | QUEST_TRIGGER_ENTER_HALL_OF_FAME,
        .rewards = sRewards_NUMEL_MASTERY_135,
        .rewardCount = ARRAY_COUNT(sRewards_NUMEL_MASTERY_135),
        .requirements = NULL,
        .requirementCount = 0,
    },
    [QUEST_ID_SWABLU_MASTERY] = 
    {
        .title = sTitle_SWABLU_MASTERY_136,
        .desc = gQuestDescText_SWABLU_MASTERY_136,
        .flags = 0 | QUEST_CONST_MON_MASTERY_DEFAULT | QUEST_CONST_ACTIVE_IN_RUN | QUEST_CONST_UNLOCKED_BY_DEFAULT,
        .triggers = sTriggers_SWABLU_MASTERY_136,
        .triggerCount = ARRAY_COUNT(sTriggers_SWABLU_MASTERY_136),
        .triggerFlags = 0 | QUEST_TRIGGER_ENTER_HALL_OF_FAME,
        .rewards = sRewards_SWABLU_MASTERY_136,
        .rewardCount = ARRAY_COUNT(sRewards_SWABLU_MASTERY_136),
        .requirements = NULL,
        .requirementCount = 0,
    },
    [QUEST_ID_SHUPPET_MASTERY] = 
    {
        .title = sTitle_SHUPPET_MASTERY_137,
        .desc = gQuestDescText_SHUPPET_MASTERY_137,
        .flags = 0 | QUEST_CONST_MON_MASTERY_DEFAULT | QUEST_CONST_ACTIVE_IN_RUN | QUEST_CONST_UNLOCKED_BY_DEFAULT,
        .triggers = sTriggers_SHUPPET_MASTERY_137,
        .triggerCount = ARRAY_COUNT(sTriggers_SHUPPET_MASTERY_137),
        .triggerFlags = 0 | QUEST_TRIGGER_ENTER_HALL_OF_FAME,
        .rewards = sRewards_SHUPPET_MASTERY_137,
        .rewardCount = ARRAY_COUNT(sRewards_SHUPPET_MASTERY_137),
        .requirements = NULL,
        .requirementCount = 0,
    },
    [QUEST_ID_ABSOL_MASTERY] = 
    {
        .title = sTitle_ABSOL_MASTERY_138,
        .desc = gQuestDescText_ABSOL_MASTERY_138,
        .flags = 0 | QUEST_CONST_MON_MASTERY_DEFAULT | QUEST_CONST_ACTIVE_IN_RUN | QUEST_CONST_UNLOCKED_BY_DEFAULT,
        .triggers = sTriggers_ABSOL_MASTERY_138,
        .triggerCount = ARRAY_COUNT(sTriggers_ABSOL_MASTERY_138),
        .triggerFlags = 0 | QUEST_TRIGGER_ENTER_HALL_OF_FAME,
        .rewards = sRewards_ABSOL_MASTERY_138,
        .rewardCount = ARRAY_COUNT(sRewards_ABSOL_MASTERY_138),
        .requirements = NULL,
        .requirementCount = 0,
    },
    [QUEST_ID_SNORUNT_MASTERY] = 
    {
        .title = sTitle_SNORUNT_MASTERY_139,
        .desc = gQuestDescText_SNORUNT_MASTERY_139,
        .flags = 0 | QUEST_CONST_MON_MASTERY_DEFAULT | QUEST_CONST_ACTIVE_IN_RUN | QUEST_CONST_UNLOCKED_BY_DEFAULT,
        .triggers = sTriggers_SNORUNT_MASTERY_139,
        .triggerCount = ARRAY_COUNT(sTriggers_SNORUNT_MASTERY_139),
        .triggerFlags = 0 | QUEST_TRIGGER_ENTER_HALL_OF_FAME,
        .rewards = sRewards_SNORUNT_MASTERY_139,
        .rewardCount = ARRAY_COUNT(sRewards_SNORUNT_MASTERY_139),
        .requirements = NULL,
        .requirementCount = 0,
    },
    [QUEST_ID_BAGON_MASTERY] = 
    {
        .title = sTitle_BAGON_MASTERY_140,
        .desc = gQuestDescText_BAGON_MASTERY_140,
        .flags = 0 | QUEST_CONST_MON_MASTERY_DEFAULT | QUEST_CONST_ACTIVE_IN_RUN | QUEST_CONST_UNLOCKED_BY_DEFAULT,
        .triggers = sTriggers_BAGON_MASTERY_140,
        .triggerCount = ARRAY_COUNT(sTriggers_BAGON_MASTERY_140),
        .triggerFlags = 0 | QUEST_TRIGGER_ENTER_HALL_OF_FAME,
        .rewards = sRewards_BAGON_MASTERY_140,
        .rewardCount = ARRAY_COUNT(sRewards_BAGON_MASTERY_140),
        .requirements = NULL,
        .requirementCount = 0,
    },
    [QUEST_ID_BELDUM_MASTERY] = 
    {
        .title = sTitle_BELDUM_MASTERY_141,
        .desc = gQuestDescText_BELDUM_MASTERY_141,
        .flags = 0 | QUEST_CONST_MON_MASTERY_DEFAULT | QUEST_CONST_ACTIVE_IN_RUN | QUEST_CONST_UNLOCKED_BY_DEFAULT,
        .triggers = sTriggers_BELDUM_MASTERY_141,
        .triggerCount = ARRAY_COUNT(sTriggers_BELDUM_MASTERY_141),
        .triggerFlags = 0 | QUEST_TRIGGER_ENTER_HALL_OF_FAME,
        .rewards = sRewards_BELDUM_MASTERY_141,
        .rewardCount = ARRAY_COUNT(sRewards_BELDUM_MASTERY_141),
        .requirements = NULL,
        .requirementCount = 0,
    },
    [QUEST_ID_LATI_MASTERY] = 
    {
        .title = sTitle_LATI_MASTERY_142,
        .desc = gQuestDescText_LATI_MASTERY_142,
        .flags = 0 | QUEST_CONST_MON_MASTERY_DEFAULT | QUEST_CONST_ACTIVE_IN_RUN | QUEST_CONST_UNLOCKED_BY_DEFAULT,
        .triggers = sTriggers_LATI_MASTERY_142,
        .triggerCount = ARRAY_COUNT(sTriggers_LATI_MASTERY_142),
        .triggerFlags = 0 | QUEST_TRIGGER_ENTER_HALL_OF_FAME,
        .rewards = sRewards_LATI_MASTERY_142,
        .rewardCount = ARRAY_COUNT(sRewards_LATI_MASTERY_142),
        .requirements = NULL,
        .requirementCount = 0,
    },
#if defined(ROGUE_EXPANSION)
    [QUEST_ID_LATIAS_MASTERY] = 
    {
        .title = sTitle_LATIAS_MASTERY_143,
        .desc = gQuestDescText_LATIAS_MASTERY_143,
        .flags = 0 | QUEST_CONST_MON_MASTERY_DEFAULT | QUEST_CONST_ACTIVE_IN_RUN | QUEST_CONST_UNLOCKED_BY_DEFAULT,
        .triggers = sTriggers_LATIAS_MASTERY_143,
        .triggerCount = ARRAY_COUNT(sTriggers_LATIAS_MASTERY_143),
        .triggerFlags = 0 | QUEST_TRIGGER_ENTER_HALL_OF_FAME,
        .rewards = sRewards_LATIAS_MASTERY_143,
        .rewardCount = ARRAY_COUNT(sRewards_LATIAS_MASTERY_143),
        .requirements = NULL,
        .requirementCount = 0,
    },
#endif
#if defined(ROGUE_EXPANSION)
    [QUEST_ID_LATIOS_MASTERY] = 
    {
        .title = sTitle_LATIOS_MASTERY_144,
        .desc = gQuestDescText_LATIOS_MASTERY_144,
        .flags = 0 | QUEST_CONST_MON_MASTERY_DEFAULT | QUEST_CONST_ACTIVE_IN_RUN | QUEST_CONST_UNLOCKED_BY_DEFAULT,
        .triggers = sTriggers_LATIOS_MASTERY_144,
        .triggerCount = ARRAY_COUNT(sTriggers_LATIOS_MASTERY_144),
        .triggerFlags = 0 | QUEST_TRIGGER_ENTER_HALL_OF_FAME,
        .rewards = sRewards_LATIOS_MASTERY_144,
        .rewardCount = ARRAY_COUNT(sRewards_LATIOS_MASTERY_144),
        .requirements = NULL,
        .requirementCount = 0,
    },
#endif
    [QUEST_ID_KYOGRE_MASTERY] = 
    {
        .title = sTitle_KYOGRE_MASTERY_145,
        .desc = gQuestDescText_KYOGRE_MASTERY_145,
        .flags = 0 | QUEST_CONST_MON_MASTERY_DEFAULT | QUEST_CONST_ACTIVE_IN_RUN | QUEST_CONST_UNLOCKED_BY_DEFAULT,
        .triggers = sTriggers_KYOGRE_MASTERY_145,
        .triggerCount = ARRAY_COUNT(sTriggers_KYOGRE_MASTERY_145),
        .triggerFlags = 0 | QUEST_TRIGGER_ENTER_HALL_OF_FAME,
        .rewards = sRewards_KYOGRE_MASTERY_145,
        .rewardCount = ARRAY_COUNT(sRewards_KYOGRE_MASTERY_145),
        .requirements = NULL,
        .requirementCount = 0,
    },
    [QUEST_ID_GROUDON_MASTERY] = 
    {
        .title = sTitle_GROUDON_MASTERY_146,
        .desc = gQuestDescText_GROUDON_MASTERY_146,
        .flags = 0 | QUEST_CONST_MON_MASTERY_DEFAULT | QUEST_CONST_ACTIVE_IN_RUN | QUEST_CONST_UNLOCKED_BY_DEFAULT,
        .triggers = sTriggers_GROUDON_MASTERY_146,
        .triggerCount = ARRAY_COUNT(sTriggers_GROUDON_MASTERY_146),
        .triggerFlags = 0 | QUEST_TRIGGER_ENTER_HALL_OF_FAME,
        .rewards = sRewards_GROUDON_MASTERY_146,
        .rewardCount = ARRAY_COUNT(sRewards_GROUDON_MASTERY_146),
        .requirements = NULL,
        .requirementCount = 0,
    },
    [QUEST_ID_DEOXYS_MASTERY] = 
    {
        .title = sTitle_DEOXYS_MASTERY_147,
        .desc = gQuestDescText_DEOXYS_MASTERY_147,
        .flags = 0 | QUEST_CONST_MON_MASTERY_DEFAULT | QUEST_CONST_ACTIVE_IN_RUN | QUEST_CONST_UNLOCKED_BY_DEFAULT,
        .triggers = sTriggers_DEOXYS_MASTERY_147,
        .triggerCount = ARRAY_COUNT(sTriggers_DEOXYS_MASTERY_147),
        .triggerFlags = 0 | QUEST_TRIGGER_ENTER_HALL_OF_FAME,
        .rewards = sRewards_DEOXYS_MASTERY_147,
        .rewardCount = ARRAY_COUNT(sRewards_DEOXYS_MASTERY_147),
        .requirements = NULL,
        .requirementCount = 0,
    },
#if defined(ROGUE_EXPANSION)
    [QUEST_ID_BUNEARY_MASTERY] = 
    {
        .title = sTitle_BUNEARY_MASTERY_148,
        .desc = gQuestDescText_BUNEARY_MASTERY_148,
        .flags = 0 | QUEST_CONST_MON_MASTERY_DEFAULT | QUEST_CONST_ACTIVE_IN_RUN | QUEST_CONST_UNLOCKED_BY_DEFAULT,
        .triggers = sTriggers_BUNEARY_MASTERY_148,
        .triggerCount = ARRAY_COUNT(sTriggers_BUNEARY_MASTERY_148),
        .triggerFlags = 0 | QUEST_TRIGGER_ENTER_HALL_OF_FAME,
        .rewards = sRewards_BUNEARY_MASTERY_148,
        .rewardCount = ARRAY_COUNT(sRewards_BUNEARY_MASTERY_148),
        .requirements = NULL,
        .requirementCount = 0,
    },
#endif
#if defined(ROGUE_EXPANSION)
    [QUEST_ID_GIBLE_MASTERY] = 
    {
        .title = sTitle_GIBLE_MASTERY_149,
        .desc = gQuestDescText_GIBLE_MASTERY_149,
        .flags = 0 | QUEST_CONST_MON_MASTERY_DEFAULT | QUEST_CONST_ACTIVE_IN_RUN | QUEST_CONST_UNLOCKED_BY_DEFAULT,
        .triggers = sTriggers_GIBLE_MASTERY_149,
        .triggerCount = ARRAY_COUNT(sTriggers_GIBLE_MASTERY_149),
        .triggerFlags = 0 | QUEST_TRIGGER_ENTER_HALL_OF_FAME,
        .rewards = sRewards_GIBLE_MASTERY_149,
        .rewardCount = ARRAY_COUNT(sRewards_GIBLE_MASTERY_149),
        .requirements = NULL,
        .requirementCount = 0,
    },
#endif
#if defined(ROGUE_EXPANSION)
    [QUEST_ID_RIOLU_MASTERY] = 
    {
        .title = sTitle_RIOLU_MASTERY_150,
        .desc = gQuestDescText_RIOLU_MASTERY_150,
        .flags = 0 | QUEST_CONST_MON_MASTERY_DEFAULT | QUEST_CONST_ACTIVE_IN_RUN | QUEST_CONST_UNLOCKED_BY_DEFAULT,
        .triggers = sTriggers_RIOLU_MASTERY_150,
        .triggerCount = ARRAY_COUNT(sTriggers_RIOLU_MASTERY_150),
        .triggerFlags = 0 | QUEST_TRIGGER_ENTER_HALL_OF_FAME,
        .rewards = sRewards_RIOLU_MASTERY_150,
        .rewardCount = ARRAY_COUNT(sRewards_RIOLU_MASTERY_150),
        .requirements = NULL,
        .requirementCount = 0,
    },
#endif
#if defined(ROGUE_EXPANSION)
    [QUEST_ID_SNOVER_MASTERY] = 
    {
        .title = sTitle_SNOVER_MASTERY_151,
        .desc = gQuestDescText_SNOVER_MASTERY_151,
        .flags = 0 | QUEST_CONST_MON_MASTERY_DEFAULT | QUEST_CONST_ACTIVE_IN_RUN | QUEST_CONST_UNLOCKED_BY_DEFAULT,
        .triggers = sTriggers_SNOVER_MASTERY_151,
        .triggerCount = ARRAY_COUNT(sTriggers_SNOVER_MASTERY_151),
        .triggerFlags = 0 | QUEST_TRIGGER_ENTER_HALL_OF_FAME,
        .rewards = sRewards_SNOVER_MASTERY_151,
        .rewardCount = ARRAY_COUNT(sRewards_SNOVER_MASTERY_151),
        .requirements = NULL,
        .requirementCount = 0,
    },
#endif
#if defined(ROGUE_EXPANSION)
    [QUEST_ID_ROTOM_MASTERY] = 
    {
        .title = sTitle_ROTOM_MASTERY_152,
        .desc = gQuestDescText_ROTOM_MASTERY_152,
        .flags = 0 | QUEST_CONST_MON_MASTERY_DEFAULT | QUEST_CONST_ACTIVE_IN_RUN | QUEST_CONST_UNLOCKED_BY_DEFAULT,
        .triggers = sTriggers_ROTOM_MASTERY_152,
        .triggerCount = ARRAY_COUNT(sTriggers_ROTOM_MASTERY_152),
        .triggerFlags = 0 | QUEST_TRIGGER_ENTER_HALL_OF_FAME,
        .rewards = sRewards_ROTOM_MASTERY_152,
        .rewardCount = ARRAY_COUNT(sRewards_ROTOM_MASTERY_152),
        .requirements = NULL,
        .requirementCount = 0,
    },
#endif
#if defined(ROGUE_EXPANSION)
    [QUEST_ID_DIALGA_MASTERY] = 
    {
        .title = sTitle_DIALGA_MASTERY_153,
        .desc = gQuestDescText_DIALGA_MASTERY_153,
        .flags = 0 | QUEST_CONST_MON_MASTERY_DEFAULT | QUEST_CONST_ACTIVE_IN_RUN | QUEST_CONST_UNLOCKED_BY_DEFAULT,
        .triggers = sTriggers_DIALGA_MASTERY_153,
        .triggerCount = ARRAY_COUNT(sTriggers_DIALGA_MASTERY_153),
        .triggerFlags = 0 | QUEST_TRIGGER_ENTER_HALL_OF_FAME,
        .rewards = sRewards_DIALGA_MASTERY_153,
        .rewardCount = ARRAY_COUNT(sRewards_DIALGA_MASTERY_153),
        .requirements = NULL,
        .requirementCount = 0,
    },
#endif
#if defined(ROGUE_EXPANSION)
    [QUEST_ID_PALKIA_MASTERY] = 
    {
        .title = sTitle_PALKIA_MASTERY_154,
        .desc = gQuestDescText_PALKIA_MASTERY_154,
        .flags = 0 | QUEST_CONST_MON_MASTERY_DEFAULT | QUEST_CONST_ACTIVE_IN_RUN | QUEST_CONST_UNLOCKED_BY_DEFAULT,
        .triggers = sTriggers_PALKIA_MASTERY_154,
        .triggerCount = ARRAY_COUNT(sTriggers_PALKIA_MASTERY_154),
        .triggerFlags = 0 | QUEST_TRIGGER_ENTER_HALL_OF_FAME,
        .rewards = sRewards_PALKIA_MASTERY_154,
        .rewardCount = ARRAY_COUNT(sRewards_PALKIA_MASTERY_154),
        .requirements = NULL,
        .requirementCount = 0,
    },
#endif
#if defined(ROGUE_EXPANSION)
    [QUEST_ID_GIRATINA_MASTERY] = 
    {
        .title = sTitle_GIRATINA_MASTERY_155,
        .desc = gQuestDescText_GIRATINA_MASTERY_155,
        .flags = 0 | QUEST_CONST_MON_MASTERY_DEFAULT | QUEST_CONST_ACTIVE_IN_RUN | QUEST_CONST_UNLOCKED_BY_DEFAULT,
        .triggers = sTriggers_GIRATINA_MASTERY_155,
        .triggerCount = ARRAY_COUNT(sTriggers_GIRATINA_MASTERY_155),
        .triggerFlags = 0 | QUEST_TRIGGER_ENTER_HALL_OF_FAME,
        .rewards = sRewards_GIRATINA_MASTERY_155,
        .rewardCount = ARRAY_COUNT(sRewards_GIRATINA_MASTERY_155),
        .requirements = NULL,
        .requirementCount = 0,
    },
#endif
#if defined(ROGUE_EXPANSION)
    [QUEST_ID_SHAYMIN_MASTERY] = 
    {
        .title = sTitle_SHAYMIN_MASTERY_156,
        .desc = gQuestDescText_SHAYMIN_MASTERY_156,
        .flags = 0 | QUEST_CONST_MON_MASTERY_DEFAULT | QUEST_CONST_ACTIVE_IN_RUN | QUEST_CONST_UNLOCKED_BY_DEFAULT,
        .triggers = sTriggers_SHAYMIN_MASTERY_156,
        .triggerCount = ARRAY_COUNT(sTriggers_SHAYMIN_MASTERY_156),
        .triggerFlags = 0 | QUEST_TRIGGER_ENTER_HALL_OF_FAME,
        .rewards = sRewards_SHAYMIN_MASTERY_156,
        .rewardCount = ARRAY_COUNT(sRewards_SHAYMIN_MASTERY_156),
        .requirements = NULL,
        .requirementCount = 0,
    },
#endif
#if defined(ROGUE_EXPANSION)
    [QUEST_ID_ARCEUS_MASTERY] = 
    {
        .title = sTitle_ARCEUS_MASTERY_157,
        .desc = gQuestDescText_ARCEUS_MASTERY_157,
        .flags = 0 | QUEST_CONST_MON_MASTERY_DEFAULT | QUEST_CONST_ACTIVE_IN_RUN | QUEST_CONST_UNLOCKED_BY_DEFAULT,
        .triggers = sTriggers_ARCEUS_MASTERY_157,
        .triggerCount = ARRAY_COUNT(sTriggers_ARCEUS_MASTERY_157),
        .triggerFlags = 0 | QUEST_TRIGGER_ENTER_HALL_OF_FAME,
        .rewards = sRewards_ARCEUS_MASTERY_157,
        .rewardCount = ARRAY_COUNT(sRewards_ARCEUS_MASTERY_157),
        .requirements = NULL,
        .requirementCount = 0,
    },
#endif
#if defined(ROGUE_EXPANSION)
    [QUEST_ID_AUDINO_MASTERY] = 
    {
        .title = sTitle_AUDINO_MASTERY_158,
        .desc = gQuestDescText_AUDINO_MASTERY_158,
        .flags = 0 | QUEST_CONST_MON_MASTERY_DEFAULT | QUEST_CONST_ACTIVE_IN_RUN | QUEST_CONST_UNLOCKED_BY_DEFAULT,
        .triggers = sTriggers_AUDINO_MASTERY_158,
        .triggerCount = ARRAY_COUNT(sTriggers_AUDINO_MASTERY_158),
        .triggerFlags = 0 | QUEST_TRIGGER_ENTER_HALL_OF_FAME,
        .rewards = sRewards_AUDINO_MASTERY_158,
        .rewardCount = ARRAY_COUNT(sRewards_AUDINO_MASTERY_158),
        .requirements = NULL,
        .requirementCount = 0,
    },
#endif
#if defined(ROGUE_EXPANSION)
    [QUEST_ID_TRUBBISH_MASTERY] = 
    {
        .title = sTitle_TRUBBISH_MASTERY_159,
        .desc = gQuestDescText_TRUBBISH_MASTERY_159,
        .flags = 0 | QUEST_CONST_MON_MASTERY_DEFAULT | QUEST_CONST_ACTIVE_IN_RUN | QUEST_CONST_UNLOCKED_BY_DEFAULT,
        .triggers = sTriggers_TRUBBISH_MASTERY_159,
        .triggerCount = ARRAY_COUNT(sTriggers_TRUBBISH_MASTERY_159),
        .triggerFlags = 0 | QUEST_TRIGGER_ENTER_HALL_OF_FAME,
        .rewards = sRewards_TRUBBISH_MASTERY_159,
        .rewardCount = ARRAY_COUNT(sRewards_TRUBBISH_MASTERY_159),
        .requirements = NULL,
        .requirementCount = 0,
    },
#endif
#if defined(ROGUE_EXPANSION)
    [QUEST_ID_GENIE_MASTERY] = 
    {
        .title = sTitle_GENIE_MASTERY_160,
        .desc = gQuestDescText_GENIE_MASTERY_160,
        .flags = 0 | QUEST_CONST_MON_MASTERY_DEFAULT | QUEST_CONST_ACTIVE_IN_RUN | QUEST_CONST_UNLOCKED_BY_DEFAULT,
        .triggers = sTriggers_GENIE_MASTERY_160,
        .triggerCount = ARRAY_COUNT(sTriggers_GENIE_MASTERY_160),
        .triggerFlags = 0 | QUEST_TRIGGER_ENTER_HALL_OF_FAME,
        .rewards = sRewards_GENIE_MASTERY_160,
        .rewardCount = ARRAY_COUNT(sRewards_GENIE_MASTERY_160),
        .requirements = NULL,
        .requirementCount = 0,
    },
#endif
#if defined(ROGUE_EXPANSION)
    [QUEST_ID_GENESECT_MASTERY] = 
    {
        .title = sTitle_GENESECT_MASTERY_161,
        .desc = gQuestDescText_GENESECT_MASTERY_161,
        .flags = 0 | QUEST_CONST_MON_MASTERY_DEFAULT | QUEST_CONST_ACTIVE_IN_RUN | QUEST_CONST_UNLOCKED_BY_DEFAULT,
        .triggers = sTriggers_GENESECT_MASTERY_161,
        .triggerCount = ARRAY_COUNT(sTriggers_GENESECT_MASTERY_161),
        .triggerFlags = 0 | QUEST_TRIGGER_ENTER_HALL_OF_FAME,
        .rewards = sRewards_GENESECT_MASTERY_161,
        .rewardCount = ARRAY_COUNT(sRewards_GENESECT_MASTERY_161),
        .requirements = NULL,
        .requirementCount = 0,
    },
#endif
#if defined(ROGUE_EXPANSION)
    [QUEST_ID_FROAKIE_MASTERY] = 
    {
        .title = sTitle_FROAKIE_MASTERY_162,
        .desc = gQuestDescText_FROAKIE_MASTERY_162,
        .flags = 0 | QUEST_CONST_MON_MASTERY_DEFAULT | QUEST_CONST_ACTIVE_IN_RUN | QUEST_CONST_UNLOCKED_BY_DEFAULT,
        .triggers = sTriggers_FROAKIE_MASTERY_162,
        .triggerCount = ARRAY_COUNT(sTriggers_FROAKIE_MASTERY_162),
        .triggerFlags = 0 | QUEST_TRIGGER_ENTER_HALL_OF_FAME,
        .rewards = sRewards_FROAKIE_MASTERY_162,
        .rewardCount = ARRAY_COUNT(sRewards_FROAKIE_MASTERY_162),
        .requirements = NULL,
        .requirementCount = 0,
    },
#endif
#if defined(ROGUE_EXPANSION)
    [QUEST_ID_ZYGARDE_MASTERY] = 
    {
        .title = sTitle_ZYGARDE_MASTERY_163,
        .desc = gQuestDescText_ZYGARDE_MASTERY_163,
        .flags = 0 | QUEST_CONST_MON_MASTERY_DEFAULT | QUEST_CONST_ACTIVE_IN_RUN | QUEST_CONST_UNLOCKED_BY_DEFAULT,
        .triggers = sTriggers_ZYGARDE_MASTERY_163,
        .triggerCount = ARRAY_COUNT(sTriggers_ZYGARDE_MASTERY_163),
        .triggerFlags = 0 | QUEST_TRIGGER_ENTER_HALL_OF_FAME,
        .rewards = sRewards_ZYGARDE_MASTERY_163,
        .rewardCount = ARRAY_COUNT(sRewards_ZYGARDE_MASTERY_163),
        .requirements = NULL,
        .requirementCount = 0,
    },
#endif
#if defined(ROGUE_EXPANSION)
    [QUEST_ID_DIANCIE_MASTERY] = 
    {
        .title = sTitle_DIANCIE_MASTERY_164,
        .desc = gQuestDescText_DIANCIE_MASTERY_164,
        .flags = 0 | QUEST_CONST_MON_MASTERY_DEFAULT | QUEST_CONST_ACTIVE_IN_RUN | QUEST_CONST_UNLOCKED_BY_DEFAULT,
        .triggers = sTriggers_DIANCIE_MASTERY_164,
        .triggerCount = ARRAY_COUNT(sTriggers_DIANCIE_MASTERY_164),
        .triggerFlags = 0 | QUEST_TRIGGER_ENTER_HALL_OF_FAME,
        .rewards = sRewards_DIANCIE_MASTERY_164,
        .rewardCount = ARRAY_COUNT(sRewards_DIANCIE_MASTERY_164),
        .requirements = NULL,
        .requirementCount = 0,
    },
#endif
#if defined(ROGUE_EXPANSION)
    [QUEST_ID_HOOPA_MASTERY] = 
    {
        .title = sTitle_HOOPA_MASTERY_165,
        .desc = gQuestDescText_HOOPA_MASTERY_165,
        .flags = 0 | QUEST_CONST_MON_MASTERY_DEFAULT | QUEST_CONST_ACTIVE_IN_RUN | QUEST_CONST_UNLOCKED_BY_DEFAULT,
        .triggers = sTriggers_HOOPA_MASTERY_165,
        .triggerCount = ARRAY_COUNT(sTriggers_HOOPA_MASTERY_165),
        .triggerFlags = 0 | QUEST_TRIGGER_ENTER_HALL_OF_FAME,
        .rewards = sRewards_HOOPA_MASTERY_165,
        .rewardCount = ARRAY_COUNT(sRewards_HOOPA_MASTERY_165),
        .requirements = NULL,
        .requirementCount = 0,
    },
#endif
#if defined(ROGUE_EXPANSION)
    [QUEST_ID_ROWLET_MASTERY] = 
    {
        .title = sTitle_ROWLET_MASTERY_166,
        .desc = gQuestDescText_ROWLET_MASTERY_166,
        .flags = 0 | QUEST_CONST_MON_MASTERY_DEFAULT | QUEST_CONST_ACTIVE_IN_RUN | QUEST_CONST_UNLOCKED_BY_DEFAULT,
        .triggers = sTriggers_ROWLET_MASTERY_166,
        .triggerCount = ARRAY_COUNT(sTriggers_ROWLET_MASTERY_166),
        .triggerFlags = 0 | QUEST_TRIGGER_ENTER_HALL_OF_FAME,
        .rewards = sRewards_ROWLET_MASTERY_166,
        .rewardCount = ARRAY_COUNT(sRewards_ROWLET_MASTERY_166),
        .requirements = NULL,
        .requirementCount = 0,
    },
#endif
#if defined(ROGUE_EXPANSION)
    [QUEST_ID_LITTEN_MASTERY] = 
    {
        .title = sTitle_LITTEN_MASTERY_167,
        .desc = gQuestDescText_LITTEN_MASTERY_167,
        .flags = 0 | QUEST_CONST_MON_MASTERY_DEFAULT | QUEST_CONST_ACTIVE_IN_RUN | QUEST_CONST_UNLOCKED_BY_DEFAULT,
        .triggers = sTriggers_LITTEN_MASTERY_167,
        .triggerCount = ARRAY_COUNT(sTriggers_LITTEN_MASTERY_167),
        .triggerFlags = 0 | QUEST_TRIGGER_ENTER_HALL_OF_FAME,
        .rewards = sRewards_LITTEN_MASTERY_167,
        .rewardCount = ARRAY_COUNT(sRewards_LITTEN_MASTERY_167),
        .requirements = NULL,
        .requirementCount = 0,
    },
#endif
#if defined(ROGUE_EXPANSION)
    [QUEST_ID_POPPLIO_MASTERY] = 
    {
        .title = sTitle_POPPLIO_MASTERY_168,
        .desc = gQuestDescText_POPPLIO_MASTERY_168,
        .flags = 0 | QUEST_CONST_MON_MASTERY_DEFAULT | QUEST_CONST_ACTIVE_IN_RUN | QUEST_CONST_UNLOCKED_BY_DEFAULT,
        .triggers = sTriggers_POPPLIO_MASTERY_168,
        .triggerCount = ARRAY_COUNT(sTriggers_POPPLIO_MASTERY_168),
        .triggerFlags = 0 | QUEST_TRIGGER_ENTER_HALL_OF_FAME,
        .rewards = sRewards_POPPLIO_MASTERY_168,
        .rewardCount = ARRAY_COUNT(sRewards_POPPLIO_MASTERY_168),
        .requirements = NULL,
        .requirementCount = 0,
    },
#endif
#if defined(ROGUE_EXPANSION)
    [QUEST_ID_ROCKRUFF_MASTERY] = 
    {
        .title = sTitle_ROCKRUFF_MASTERY_169,
        .desc = gQuestDescText_ROCKRUFF_MASTERY_169,
        .flags = 0 | QUEST_CONST_MON_MASTERY_DEFAULT | QUEST_CONST_ACTIVE_IN_RUN | QUEST_CONST_UNLOCKED_BY_DEFAULT,
        .triggers = sTriggers_ROCKRUFF_MASTERY_169,
        .triggerCount = ARRAY_COUNT(sTriggers_ROCKRUFF_MASTERY_169),
        .triggerFlags = 0 | QUEST_TRIGGER_ENTER_HALL_OF_FAME,
        .rewards = sRewards_ROCKRUFF_MASTERY_169,
        .rewardCount = ARRAY_COUNT(sRewards_ROCKRUFF_MASTERY_169),
        .requirements = NULL,
        .requirementCount = 0,
    },
#endif
#if defined(ROGUE_EXPANSION)
    [QUEST_ID_MIMIKYU_MASTERY] = 
    {
        .title = sTitle_MIMIKYU_MASTERY_170,
        .desc = gQuestDescText_MIMIKYU_MASTERY_170,
        .flags = 0 | QUEST_CONST_MON_MASTERY_DEFAULT | QUEST_CONST_ACTIVE_IN_RUN | QUEST_CONST_UNLOCKED_BY_DEFAULT,
        .triggers = sTriggers_MIMIKYU_MASTERY_170,
        .triggerCount = ARRAY_COUNT(sTriggers_MIMIKYU_MASTERY_170),
        .triggerFlags = 0 | QUEST_TRIGGER_ENTER_HALL_OF_FAME,
        .rewards = sRewards_MIMIKYU_MASTERY_170,
        .rewardCount = ARRAY_COUNT(sRewards_MIMIKYU_MASTERY_170),
        .requirements = NULL,
        .requirementCount = 0,
    },
#endif
#if defined(ROGUE_EXPANSION)
    [QUEST_ID_SILVALLY_MASTERY] = 
    {
        .title = sTitle_SILVALLY_MASTERY_171,
        .desc = gQuestDescText_SILVALLY_MASTERY_171,
        .flags = 0 | QUEST_CONST_MON_MASTERY_DEFAULT | QUEST_CONST_ACTIVE_IN_RUN | QUEST_CONST_UNLOCKED_BY_DEFAULT,
        .triggers = sTriggers_SILVALLY_MASTERY_171,
        .triggerCount = ARRAY_COUNT(sTriggers_SILVALLY_MASTERY_171),
        .triggerFlags = 0 | QUEST_TRIGGER_ENTER_HALL_OF_FAME,
        .rewards = sRewards_SILVALLY_MASTERY_171,
        .rewardCount = ARRAY_COUNT(sRewards_SILVALLY_MASTERY_171),
        .requirements = NULL,
        .requirementCount = 0,
    },
#endif
#if defined(ROGUE_EXPANSION)
    [QUEST_ID_JANGMO_O_MASTERY] = 
    {
        .title = sTitle_JANGMO_O_MASTERY_172,
        .desc = gQuestDescText_JANGMO_O_MASTERY_172,
        .flags = 0 | QUEST_CONST_MON_MASTERY_DEFAULT | QUEST_CONST_ACTIVE_IN_RUN | QUEST_CONST_UNLOCKED_BY_DEFAULT,
        .triggers = sTriggers_JANGMO_O_MASTERY_172,
        .triggerCount = ARRAY_COUNT(sTriggers_JANGMO_O_MASTERY_172),
        .triggerFlags = 0 | QUEST_TRIGGER_ENTER_HALL_OF_FAME,
        .rewards = sRewards_JANGMO_O_MASTERY_172,
        .rewardCount = ARRAY_COUNT(sRewards_JANGMO_O_MASTERY_172),
        .requirements = NULL,
        .requirementCount = 0,
    },
#endif
#if defined(ROGUE_EXPANSION)
    [QUEST_ID_TAPU_MASTERY] = 
    {
        .title = sTitle_TAPU_MASTERY_173,
        .desc = gQuestDescText_TAPU_MASTERY_173,
        .flags = 0 | QUEST_CONST_MON_MASTERY_DEFAULT | QUEST_CONST_ACTIVE_IN_RUN | QUEST_CONST_UNLOCKED_BY_DEFAULT,
        .triggers = sTriggers_TAPU_MASTERY_173,
        .triggerCount = ARRAY_COUNT(sTriggers_TAPU_MASTERY_173),
        .triggerFlags = 0 | QUEST_TRIGGER_ENTER_HALL_OF_FAME,
        .rewards = sRewards_TAPU_MASTERY_173,
        .rewardCount = ARRAY_COUNT(sRewards_TAPU_MASTERY_173),
        .requirements = NULL,
        .requirementCount = 0,
    },
#endif
#if defined(ROGUE_EXPANSION)
    [QUEST_ID_COSMOG_MASTERY] = 
    {
        .title = sTitle_COSMOG_MASTERY_174,
        .desc = gQuestDescText_COSMOG_MASTERY_174,
        .flags = 0 | QUEST_CONST_MON_MASTERY_DEFAULT | QUEST_CONST_ACTIVE_IN_RUN | QUEST_CONST_UNLOCKED_BY_DEFAULT,
        .triggers = sTriggers_COSMOG_MASTERY_174,
        .triggerCount = ARRAY_COUNT(sTriggers_COSMOG_MASTERY_174),
        .triggerFlags = 0 | QUEST_TRIGGER_ENTER_HALL_OF_FAME,
        .rewards = sRewards_COSMOG_MASTERY_174,
        .rewardCount = ARRAY_COUNT(sRewards_COSMOG_MASTERY_174),
        .requirements = NULL,
        .requirementCount = 0,
    },
#endif
#if defined(ROGUE_EXPANSION)
    [QUEST_ID_NECROZMA_MASTERY] = 
    {
        .title = sTitle_NECROZMA_MASTERY_175,
        .desc = gQuestDescText_NECROZMA_MASTERY_175,
        .flags = 0 | QUEST_CONST_MON_MASTERY_DEFAULT | QUEST_CONST_ACTIVE_IN_RUN | QUEST_CONST_UNLOCKED_BY_DEFAULT,
        .triggers = sTriggers_NECROZMA_MASTERY_175,
        .triggerCount = ARRAY_COUNT(sTriggers_NECROZMA_MASTERY_175),
        .triggerFlags = 0 | QUEST_TRIGGER_ENTER_HALL_OF_FAME,
        .rewards = sRewards_NECROZMA_MASTERY_175,
        .rewardCount = ARRAY_COUNT(sRewards_NECROZMA_MASTERY_175),
        .requirements = NULL,
        .requirementCount = 0,
    },
#endif
#if defined(ROGUE_EXPANSION)
    [QUEST_ID_MAGEARNA_MASTERY] = 
    {
        .title = sTitle_MAGEARNA_MASTERY_176,
        .desc = gQuestDescText_MAGEARNA_MASTERY_176,
        .flags = 0 | QUEST_CONST_MON_MASTERY_DEFAULT | QUEST_CONST_ACTIVE_IN_RUN | QUEST_CONST_UNLOCKED_BY_DEFAULT,
        .triggers = sTriggers_MAGEARNA_MASTERY_176,
        .triggerCount = ARRAY_COUNT(sTriggers_MAGEARNA_MASTERY_176),
        .triggerFlags = 0 | QUEST_TRIGGER_ENTER_HALL_OF_FAME,
        .rewards = sRewards_MAGEARNA_MASTERY_176,
        .rewardCount = ARRAY_COUNT(sRewards_MAGEARNA_MASTERY_176),
        .requirements = NULL,
        .requirementCount = 0,
    },
#endif
#if defined(ROGUE_EXPANSION)
    [QUEST_ID_MARSHADOW_MASTERY] = 
    {
        .title = sTitle_MARSHADOW_MASTERY_177,
        .desc = gQuestDescText_MARSHADOW_MASTERY_177,
        .flags = 0 | QUEST_CONST_MON_MASTERY_DEFAULT | QUEST_CONST_ACTIVE_IN_RUN | QUEST_CONST_UNLOCKED_BY_DEFAULT,
        .triggers = sTriggers_MARSHADOW_MASTERY_177,
        .triggerCount = ARRAY_COUNT(sTriggers_MARSHADOW_MASTERY_177),
        .triggerFlags = 0 | QUEST_TRIGGER_ENTER_HALL_OF_FAME,
        .rewards = sRewards_MARSHADOW_MASTERY_177,
        .rewardCount = ARRAY_COUNT(sRewards_MARSHADOW_MASTERY_177),
        .requirements = NULL,
        .requirementCount = 0,
    },
#endif
#if defined(ROGUE_EXPANSION)
    [QUEST_ID_MELTAN_MASTERY] = 
    {
        .title = sTitle_MELTAN_MASTERY_178,
        .desc = gQuestDescText_MELTAN_MASTERY_178,
        .flags = 0 | QUEST_CONST_MON_MASTERY_DEFAULT | QUEST_CONST_ACTIVE_IN_RUN | QUEST_CONST_UNLOCKED_BY_DEFAULT,
        .triggers = sTriggers_MELTAN_MASTERY_178,
        .triggerCount = ARRAY_COUNT(sTriggers_MELTAN_MASTERY_178),
        .triggerFlags = 0 | QUEST_TRIGGER_ENTER_HALL_OF_FAME,
        .rewards = sRewards_MELTAN_MASTERY_178,
        .rewardCount = ARRAY_COUNT(sRewards_MELTAN_MASTERY_178),
        .requirements = NULL,
        .requirementCount = 0,
    },
#endif
#if defined(ROGUE_EXPANSION)
    [QUEST_ID_GROOKEY_MASTERY] = 
    {
        .title = sTitle_GROOKEY_MASTERY_179,
        .desc = gQuestDescText_GROOKEY_MASTERY_179,
        .flags = 0 | QUEST_CONST_MON_MASTERY_DEFAULT | QUEST_CONST_ACTIVE_IN_RUN | QUEST_CONST_UNLOCKED_BY_DEFAULT,
        .triggers = sTriggers_GROOKEY_MASTERY_179,
        .triggerCount = ARRAY_COUNT(sTriggers_GROOKEY_MASTERY_179),
        .triggerFlags = 0 | QUEST_TRIGGER_ENTER_HALL_OF_FAME,
        .rewards = sRewards_GROOKEY_MASTERY_179,
        .rewardCount = ARRAY_COUNT(sRewards_GROOKEY_MASTERY_179),
        .requirements = NULL,
        .requirementCount = 0,
    },
#endif
#if defined(ROGUE_EXPANSION)
    [QUEST_ID_SCORBUNNY_MASTERY] = 
    {
        .title = sTitle_SCORBUNNY_MASTERY_180,
        .desc = gQuestDescText_SCORBUNNY_MASTERY_180,
        .flags = 0 | QUEST_CONST_MON_MASTERY_DEFAULT | QUEST_CONST_ACTIVE_IN_RUN | QUEST_CONST_UNLOCKED_BY_DEFAULT,
        .triggers = sTriggers_SCORBUNNY_MASTERY_180,
        .triggerCount = ARRAY_COUNT(sTriggers_SCORBUNNY_MASTERY_180),
        .triggerFlags = 0 | QUEST_TRIGGER_ENTER_HALL_OF_FAME,
        .rewards = sRewards_SCORBUNNY_MASTERY_180,
        .rewardCount = ARRAY_COUNT(sRewards_SCORBUNNY_MASTERY_180),
        .requirements = NULL,
        .requirementCount = 0,
    },
#endif
#if defined(ROGUE_EXPANSION)
    [QUEST_ID_SOBBLE_MASTERY] = 
    {
        .title = sTitle_SOBBLE_MASTERY_181,
        .desc = gQuestDescText_SOBBLE_MASTERY_181,
        .flags = 0 | QUEST_CONST_MON_MASTERY_DEFAULT | QUEST_CONST_ACTIVE_IN_RUN | QUEST_CONST_UNLOCKED_BY_DEFAULT,
        .triggers = sTriggers_SOBBLE_MASTERY_181,
        .triggerCount = ARRAY_COUNT(sTriggers_SOBBLE_MASTERY_181),
        .triggerFlags = 0 | QUEST_TRIGGER_ENTER_HALL_OF_FAME,
        .rewards = sRewards_SOBBLE_MASTERY_181,
        .rewardCount = ARRAY_COUNT(sRewards_SOBBLE_MASTERY_181),
        .requirements = NULL,
        .requirementCount = 0,
    },
#endif
#if defined(ROGUE_EXPANSION)
    [QUEST_ID_ROOKIDEE_MASTERY] = 
    {
        .title = sTitle_ROOKIDEE_MASTERY_182,
        .desc = gQuestDescText_ROOKIDEE_MASTERY_182,
        .flags = 0 | QUEST_CONST_MON_MASTERY_DEFAULT | QUEST_CONST_ACTIVE_IN_RUN | QUEST_CONST_UNLOCKED_BY_DEFAULT,
        .triggers = sTriggers_ROOKIDEE_MASTERY_182,
        .triggerCount = ARRAY_COUNT(sTriggers_ROOKIDEE_MASTERY_182),
        .triggerFlags = 0 | QUEST_TRIGGER_ENTER_HALL_OF_FAME,
        .rewards = sRewards_ROOKIDEE_MASTERY_182,
        .rewardCount = ARRAY_COUNT(sRewards_ROOKIDEE_MASTERY_182),
        .requirements = NULL,
        .requirementCount = 0,
    },
#endif
#if defined(ROGUE_EXPANSION)
    [QUEST_ID_BLIPBUG_MASTERY] = 
    {
        .title = sTitle_BLIPBUG_MASTERY_183,
        .desc = gQuestDescText_BLIPBUG_MASTERY_183,
        .flags = 0 | QUEST_CONST_MON_MASTERY_DEFAULT | QUEST_CONST_ACTIVE_IN_RUN | QUEST_CONST_UNLOCKED_BY_DEFAULT,
        .triggers = sTriggers_BLIPBUG_MASTERY_183,
        .triggerCount = ARRAY_COUNT(sTriggers_BLIPBUG_MASTERY_183),
        .triggerFlags = 0 | QUEST_TRIGGER_ENTER_HALL_OF_FAME,
        .rewards = sRewards_BLIPBUG_MASTERY_183,
        .rewardCount = ARRAY_COUNT(sRewards_BLIPBUG_MASTERY_183),
        .requirements = NULL,
        .requirementCount = 0,
    },
#endif
#if defined(ROGUE_EXPANSION)
    [QUEST_ID_CHEWTLE_MASTERY] = 
    {
        .title = sTitle_CHEWTLE_MASTERY_184,
        .desc = gQuestDescText_CHEWTLE_MASTERY_184,
        .flags = 0 | QUEST_CONST_MON_MASTERY_DEFAULT | QUEST_CONST_ACTIVE_IN_RUN | QUEST_CONST_UNLOCKED_BY_DEFAULT,
        .triggers = sTriggers_CHEWTLE_MASTERY_184,
        .triggerCount = ARRAY_COUNT(sTriggers_CHEWTLE_MASTERY_184),
        .triggerFlags = 0 | QUEST_TRIGGER_ENTER_HALL_OF_FAME,
        .rewards = sRewards_CHEWTLE_MASTERY_184,
        .rewardCount = ARRAY_COUNT(sRewards_CHEWTLE_MASTERY_184),
        .requirements = NULL,
        .requirementCount = 0,
    },
#endif
#if defined(ROGUE_EXPANSION)
    [QUEST_ID_ROLYCOLY_MASTERY] = 
    {
        .title = sTitle_ROLYCOLY_MASTERY_185,
        .desc = gQuestDescText_ROLYCOLY_MASTERY_185,
        .flags = 0 | QUEST_CONST_MON_MASTERY_DEFAULT | QUEST_CONST_ACTIVE_IN_RUN | QUEST_CONST_UNLOCKED_BY_DEFAULT,
        .triggers = sTriggers_ROLYCOLY_MASTERY_185,
        .triggerCount = ARRAY_COUNT(sTriggers_ROLYCOLY_MASTERY_185),
        .triggerFlags = 0 | QUEST_TRIGGER_ENTER_HALL_OF_FAME,
        .rewards = sRewards_ROLYCOLY_MASTERY_185,
        .rewardCount = ARRAY_COUNT(sRewards_ROLYCOLY_MASTERY_185),
        .requirements = NULL,
        .requirementCount = 0,
    },
#endif
#if defined(ROGUE_EXPANSION)
    [QUEST_ID_APPLIN_MASTERY] = 
    {
        .title = sTitle_APPLIN_MASTERY_186,
        .desc = gQuestDescText_APPLIN_MASTERY_186,
        .flags = 0 | QUEST_CONST_MON_MASTERY_DEFAULT | QUEST_CONST_ACTIVE_IN_RUN | QUEST_CONST_UNLOCKED_BY_DEFAULT,
        .triggers = sTriggers_APPLIN_MASTERY_186,
        .triggerCount = ARRAY_COUNT(sTriggers_APPLIN_MASTERY_186),
        .triggerFlags = 0 | QUEST_TRIGGER_ENTER_HALL_OF_FAME,
        .rewards = sRewards_APPLIN_MASTERY_186,
        .rewardCount = ARRAY_COUNT(sRewards_APPLIN_MASTERY_186),
        .requirements = NULL,
        .requirementCount = 0,
    },
#endif
#if defined(ROGUE_EXPANSION)
    [QUEST_ID_SILICOBRA_MASTERY] = 
    {
        .title = sTitle_SILICOBRA_MASTERY_187,
        .desc = gQuestDescText_SILICOBRA_MASTERY_187,
        .flags = 0 | QUEST_CONST_MON_MASTERY_DEFAULT | QUEST_CONST_ACTIVE_IN_RUN | QUEST_CONST_UNLOCKED_BY_DEFAULT,
        .triggers = sTriggers_SILICOBRA_MASTERY_187,
        .triggerCount = ARRAY_COUNT(sTriggers_SILICOBRA_MASTERY_187),
        .triggerFlags = 0 | QUEST_TRIGGER_ENTER_HALL_OF_FAME,
        .rewards = sRewards_SILICOBRA_MASTERY_187,
        .rewardCount = ARRAY_COUNT(sRewards_SILICOBRA_MASTERY_187),
        .requirements = NULL,
        .requirementCount = 0,
    },
#endif
#if defined(ROGUE_EXPANSION)
    [QUEST_ID_TOXEL_MASTERY] = 
    {
        .title = sTitle_TOXEL_MASTERY_188,
        .desc = gQuestDescText_TOXEL_MASTERY_188,
        .flags = 0 | QUEST_CONST_MON_MASTERY_DEFAULT | QUEST_CONST_ACTIVE_IN_RUN | QUEST_CONST_UNLOCKED_BY_DEFAULT,
        .triggers = sTriggers_TOXEL_MASTERY_188,
        .triggerCount = ARRAY_COUNT(sTriggers_TOXEL_MASTERY_188),
        .triggerFlags = 0 | QUEST_TRIGGER_ENTER_HALL_OF_FAME,
        .rewards = sRewards_TOXEL_MASTERY_188,
        .rewardCount = ARRAY_COUNT(sRewards_TOXEL_MASTERY_188),
        .requirements = NULL,
        .requirementCount = 0,
    },
#endif
#if defined(ROGUE_EXPANSION)
    [QUEST_ID_SIZZLIPEDE_MASTERY] = 
    {
        .title = sTitle_SIZZLIPEDE_MASTERY_189,
        .desc = gQuestDescText_SIZZLIPEDE_MASTERY_189,
        .flags = 0 | QUEST_CONST_MON_MASTERY_DEFAULT | QUEST_CONST_ACTIVE_IN_RUN | QUEST_CONST_UNLOCKED_BY_DEFAULT,
        .triggers = sTriggers_SIZZLIPEDE_MASTERY_189,
        .triggerCount = ARRAY_COUNT(sTriggers_SIZZLIPEDE_MASTERY_189),
        .triggerFlags = 0 | QUEST_TRIGGER_ENTER_HALL_OF_FAME,
        .rewards = sRewards_SIZZLIPEDE_MASTERY_189,
        .rewardCount = ARRAY_COUNT(sRewards_SIZZLIPEDE_MASTERY_189),
        .requirements = NULL,
        .requirementCount = 0,
    },
#endif
#if defined(ROGUE_EXPANSION)
    [QUEST_ID_HATENNA_MASTERY] = 
    {
        .title = sTitle_HATENNA_MASTERY_190,
        .desc = gQuestDescText_HATENNA_MASTERY_190,
        .flags = 0 | QUEST_CONST_MON_MASTERY_DEFAULT | QUEST_CONST_ACTIVE_IN_RUN | QUEST_CONST_UNLOCKED_BY_DEFAULT,
        .triggers = sTriggers_HATENNA_MASTERY_190,
        .triggerCount = ARRAY_COUNT(sTriggers_HATENNA_MASTERY_190),
        .triggerFlags = 0 | QUEST_TRIGGER_ENTER_HALL_OF_FAME,
        .rewards = sRewards_HATENNA_MASTERY_190,
        .rewardCount = ARRAY_COUNT(sRewards_HATENNA_MASTERY_190),
        .requirements = NULL,
        .requirementCount = 0,
    },
#endif
#if defined(ROGUE_EXPANSION)
    [QUEST_ID_IMPIDIMP_MASTERY] = 
    {
        .title = sTitle_IMPIDIMP_MASTERY_191,
        .desc = gQuestDescText_IMPIDIMP_MASTERY_191,
        .flags = 0 | QUEST_CONST_MON_MASTERY_DEFAULT | QUEST_CONST_ACTIVE_IN_RUN | QUEST_CONST_UNLOCKED_BY_DEFAULT,
        .triggers = sTriggers_IMPIDIMP_MASTERY_191,
        .triggerCount = ARRAY_COUNT(sTriggers_IMPIDIMP_MASTERY_191),
        .triggerFlags = 0 | QUEST_TRIGGER_ENTER_HALL_OF_FAME,
        .rewards = sRewards_IMPIDIMP_MASTERY_191,
        .rewardCount = ARRAY_COUNT(sRewards_IMPIDIMP_MASTERY_191),
        .requirements = NULL,
        .requirementCount = 0,
    },
#endif
#if defined(ROGUE_EXPANSION)
    [QUEST_ID_MILCERY_MASTERY] = 
    {
        .title = sTitle_MILCERY_MASTERY_192,
        .desc = gQuestDescText_MILCERY_MASTERY_192,
        .flags = 0 | QUEST_CONST_MON_MASTERY_DEFAULT | QUEST_CONST_ACTIVE_IN_RUN | QUEST_CONST_UNLOCKED_BY_DEFAULT,
        .triggers = sTriggers_MILCERY_MASTERY_192,
        .triggerCount = ARRAY_COUNT(sTriggers_MILCERY_MASTERY_192),
        .triggerFlags = 0 | QUEST_TRIGGER_ENTER_HALL_OF_FAME,
        .rewards = sRewards_MILCERY_MASTERY_192,
        .rewardCount = ARRAY_COUNT(sRewards_MILCERY_MASTERY_192),
        .requirements = NULL,
        .requirementCount = 0,
    },
#endif
#if defined(ROGUE_EXPANSION)
    [QUEST_ID_CUFANT_MASTERY] = 
    {
        .title = sTitle_CUFANT_MASTERY_193,
        .desc = gQuestDescText_CUFANT_MASTERY_193,
        .flags = 0 | QUEST_CONST_MON_MASTERY_DEFAULT | QUEST_CONST_ACTIVE_IN_RUN | QUEST_CONST_UNLOCKED_BY_DEFAULT,
        .triggers = sTriggers_CUFANT_MASTERY_193,
        .triggerCount = ARRAY_COUNT(sTriggers_CUFANT_MASTERY_193),
        .triggerFlags = 0 | QUEST_TRIGGER_ENTER_HALL_OF_FAME,
        .rewards = sRewards_CUFANT_MASTERY_193,
        .rewardCount = ARRAY_COUNT(sRewards_CUFANT_MASTERY_193),
        .requirements = NULL,
        .requirementCount = 0,
    },
#endif
#if defined(ROGUE_EXPANSION)
    [QUEST_ID_DURALUDON_MASTERY] = 
    {
        .title = sTitle_DURALUDON_MASTERY_194,
        .desc = gQuestDescText_DURALUDON_MASTERY_194,
        .flags = 0 | QUEST_CONST_MON_MASTERY_DEFAULT | QUEST_CONST_ACTIVE_IN_RUN | QUEST_CONST_UNLOCKED_BY_DEFAULT,
        .triggers = sTriggers_DURALUDON_MASTERY_194,
        .triggerCount = ARRAY_COUNT(sTriggers_DURALUDON_MASTERY_194),
        .triggerFlags = 0 | QUEST_TRIGGER_ENTER_HALL_OF_FAME,
        .rewards = sRewards_DURALUDON_MASTERY_194,
        .rewardCount = ARRAY_COUNT(sRewards_DURALUDON_MASTERY_194),
        .requirements = NULL,
        .requirementCount = 0,
    },
#endif
#if defined(ROGUE_EXPANSION)
    [QUEST_ID_ZACIAN_MASTERY] = 
    {
        .title = sTitle_ZACIAN_MASTERY_195,
        .desc = gQuestDescText_ZACIAN_MASTERY_195,
        .flags = 0 | QUEST_CONST_MON_MASTERY_DEFAULT | QUEST_CONST_ACTIVE_IN_RUN | QUEST_CONST_UNLOCKED_BY_DEFAULT,
        .triggers = sTriggers_ZACIAN_MASTERY_195,
        .triggerCount = ARRAY_COUNT(sTriggers_ZACIAN_MASTERY_195),
        .triggerFlags = 0 | QUEST_TRIGGER_ENTER_HALL_OF_FAME,
        .rewards = sRewards_ZACIAN_MASTERY_195,
        .rewardCount = ARRAY_COUNT(sRewards_ZACIAN_MASTERY_195),
        .requirements = NULL,
        .requirementCount = 0,
    },
#endif
#if defined(ROGUE_EXPANSION)
    [QUEST_ID_ZAMAZENTA_MASTERY] = 
    {
        .title = sTitle_ZAMAZENTA_MASTERY_196,
        .desc = gQuestDescText_ZAMAZENTA_MASTERY_196,
        .flags = 0 | QUEST_CONST_MON_MASTERY_DEFAULT | QUEST_CONST_ACTIVE_IN_RUN | QUEST_CONST_UNLOCKED_BY_DEFAULT,
        .triggers = sTriggers_ZAMAZENTA_MASTERY_196,
        .triggerCount = ARRAY_COUNT(sTriggers_ZAMAZENTA_MASTERY_196),
        .triggerFlags = 0 | QUEST_TRIGGER_ENTER_HALL_OF_FAME,
        .rewards = sRewards_ZAMAZENTA_MASTERY_196,
        .rewardCount = ARRAY_COUNT(sRewards_ZAMAZENTA_MASTERY_196),
        .requirements = NULL,
        .requirementCount = 0,
    },
#endif
#if defined(ROGUE_EXPANSION)
    [QUEST_ID_KUBFU_MASTERY] = 
    {
        .title = sTitle_KUBFU_MASTERY_197,
        .desc = gQuestDescText_KUBFU_MASTERY_197,
        .flags = 0 | QUEST_CONST_MON_MASTERY_DEFAULT | QUEST_CONST_ACTIVE_IN_RUN | QUEST_CONST_UNLOCKED_BY_DEFAULT,
        .triggers = sTriggers_KUBFU_MASTERY_197,
        .triggerCount = ARRAY_COUNT(sTriggers_KUBFU_MASTERY_197),
        .triggerFlags = 0 | QUEST_TRIGGER_ENTER_HALL_OF_FAME,
        .rewards = sRewards_KUBFU_MASTERY_197,
        .rewardCount = ARRAY_COUNT(sRewards_KUBFU_MASTERY_197),
        .requirements = NULL,
        .requirementCount = 0,
    },
#endif
#if defined(ROGUE_EXPANSION)
    [QUEST_ID_OGERPON_MASTERY] = 
    {
        .title = sTitle_OGERPON_MASTERY_198,
        .desc = gQuestDescText_OGERPON_MASTERY_198,
        .flags = 0 | QUEST_CONST_MON_MASTERY_DEFAULT | QUEST_CONST_ACTIVE_IN_RUN | QUEST_CONST_UNLOCKED_BY_DEFAULT,
        .triggers = sTriggers_OGERPON_MASTERY_198,
        .triggerCount = ARRAY_COUNT(sTriggers_OGERPON_MASTERY_198),
        .triggerFlags = 0 | QUEST_TRIGGER_ENTER_HALL_OF_FAME,
        .rewards = sRewards_OGERPON_MASTERY_198,
        .rewardCount = ARRAY_COUNT(sRewards_OGERPON_MASTERY_198),
        .requirements = NULL,
        .requirementCount = 0,
    },
#endif
#if defined(ROGUE_EXPANSION)
    [QUEST_ID_TERAPAGOS_MASTERY] = 
    {
        .title = sTitle_TERAPAGOS_MASTERY_199,
        .desc = gQuestDescText_TERAPAGOS_MASTERY_199,
        .flags = 0 | QUEST_CONST_MON_MASTERY_DEFAULT | QUEST_CONST_ACTIVE_IN_RUN | QUEST_CONST_UNLOCKED_BY_DEFAULT,
        .triggers = sTriggers_TERAPAGOS_MASTERY_199,
        .triggerCount = ARRAY_COUNT(sTriggers_TERAPAGOS_MASTERY_199),
        .triggerFlags = 0 | QUEST_TRIGGER_ENTER_HALL_OF_FAME,
        .rewards = sRewards_TERAPAGOS_MASTERY_199,
        .rewardCount = ARRAY_COUNT(sRewards_TERAPAGOS_MASTERY_199),
        .requirements = NULL,
        .requirementCount = 0,
    },
#endif
};

static u16 const sQuestDisplayOrder[] =
{
    QUEST_ID_ONE_LAST_QUEST,
#if !defined(ROGUE_EXPANSION)
    QUEST_ID_THE_FINAL_RUN,
#endif
    QUEST_ID_TO_ADVENTUREEMARK,
    QUEST_ID_GYM_BADGE_1,
    QUEST_ID_GYM_BADGE_2,
    QUEST_ID_GYM_BADGE_3,
    QUEST_ID_GYM_BADGE_4,
    QUEST_ID_GYM_BADGE_5,
    QUEST_ID_GYM_BADGE_6,
    QUEST_ID_GYM_BADGE_7,
    QUEST_ID_GYM_BADGE_8,
    QUEST_ID_ELITE_MASTER,
    QUEST_ID_CHAMPION,
    QUEST_ID_WELCOME_HOME,
    QUEST_ID_POST_GAMEQMARK,
#if defined(ROGUE_EXPANSION)
    QUEST_ID_THE_FINAL_RUN,
#endif
    QUEST_ID_COLLECTOR,
    QUEST_ID_COLLECTOR_PLUS,
    QUEST_ID_COLLECTOR_S,
    QUEST_ID_COLLECTOR_X,
    QUEST_ID_CARE_TACTICS,
    QUEST_ID_SMART_TACTICS,
    QUEST_ID_MR_RANDOMAN,
    QUEST_ID_SHOPPING_SPREE,
    QUEST_ID_BIG_SAVER,
    QUEST_ID_TRUE_LEGEND,
    QUEST_ID_SHINY_A_DAY,
    QUEST_ID_HIDDEN_GROTTO,
    QUEST_ID_POKE_BALL_GOEMARK,
    QUEST_ID_ENTICING_POKEBLOCK,
    QUEST_ID_ELO_CLIMB,
    QUEST_ID_ALL_SKILL,
    QUEST_ID_FATEFUL_ENCOUNTER,
    QUEST_ID_BLASTING_OFF,
    QUEST_ID_MANKEYS_PAW,
    QUEST_ID_BLESSINGS_FAVOUR,
    QUEST_ID_NOT_TODAYEMARK,
    QUEST_ID_DOUBLE_TROUBLE,
#if !defined(ROGUE_EXPANSION)
    QUEST_ID_TASTE_THE_RAINBOW,
#endif
#if defined(ROGUE_EXPANSION)
    QUEST_ID_TASTE_THE_RAINBOW,
#endif
    QUEST_ID_LONG_HAUL,
#if defined(ROGUE_EXPANSION)
    QUEST_ID_BATTLE_GIMMICK,
#endif
#if defined(ROGUE_EXPANSION)
    QUEST_ID_MEGA_EVOLUTION,
#endif
#if defined(ROGUE_EXPANSION)
    QUEST_ID_Z_MOVES,
#endif
#if defined(ROGUE_EXPANSION)
    QUEST_ID_DYNAMAX,
#endif
#if defined(ROGUE_EXPANSION)
    QUEST_ID_TERASTALLIZATION,
#endif
#if defined(ROGUE_EXPANSION)
    QUEST_ID_GIMMICK_OVERFLOW,
#endif
    QUEST_ID_TRUE_TACTICS,
    QUEST_ID_CHAOS_NOVICE,
    QUEST_ID_CHAOS_MASTER,
    QUEST_ID_ROGUELOCKE,
    QUEST_ID_CANT_PICKEMARKQMARK,
    QUEST_ID_DIVERSITY,
    QUEST_ID_APOTHEOSIS,
    QUEST_ID_AESTHETICS,
    QUEST_ID_I_AM_SPEED,
    QUEST_ID_CURSED_BODY,
    QUEST_ID_LIMITED_CAPTURE,
    QUEST_ID_BST_CROWN,
    QUEST_ID_PRO_BUILDING,
    QUEST_ID_INSANE_MODE,
    QUEST_ID_IRON_MONO,
    QUEST_ID_IRON_KAIZO,
    QUEST_ID_ROCKET_TRIUMPH,
    QUEST_ID_AQUA_TRIUMPH,
    QUEST_ID_MAGMA_TRIUMPH,
#if defined(ROGUE_EXPANSION)
    QUEST_ID_GALACTIC_TRIUMPH,
#endif
    QUEST_ID_REGIONAL_STYLE,
    QUEST_ID_KANTO_STYLE,
    QUEST_ID_JOHTO_STYLE,
    QUEST_ID_HOENN_STYLE,
#if defined(ROGUE_EXPANSION)
    QUEST_ID_SINNOH_STYLE,
#endif
#if defined(ROGUE_EXPANSION)
    QUEST_ID_UNOVA_STYLE,
#endif
#if defined(ROGUE_EXPANSION)
    QUEST_ID_KALOS_STYLE,
#endif
#if defined(ROGUE_EXPANSION)
    QUEST_ID_ALOLA_STYLE,
#endif
#if defined(ROGUE_EXPANSION)
    QUEST_ID_GALAR_STYLE,
#endif
#if defined(ROGUE_EXPANSION)
    QUEST_ID_PALDEA_STYLE,
#endif
    QUEST_ID_ORRE_STYLE,
    QUEST_ID_BUG_MASTER,
    QUEST_ID_DARK_MASTER,
    QUEST_ID_DRAGON_MASTER,
    QUEST_ID_ELECTRIC_MASTER,
#if defined(ROGUE_EXPANSION)
    QUEST_ID_FAIRY_MASTER,
#endif
    QUEST_ID_FIGHTING_MASTER,
    QUEST_ID_FIRE_MASTER,
    QUEST_ID_FLYING_MASTER,
    QUEST_ID_GHOST_MASTER,
    QUEST_ID_GRASS_MASTER,
    QUEST_ID_GROUND_MASTER,
    QUEST_ID_ICE_MASTER,
    QUEST_ID_NORMAL_MASTER,
    QUEST_ID_POISON_MASTER,
    QUEST_ID_PSYCHIC_MASTER,
    QUEST_ID_ROCK_MASTER,
    QUEST_ID_STEEL_MASTER,
    QUEST_ID_TYPE_MASTER,
    QUEST_ID_WATER_MASTER,
    QUEST_ID_BULBASAUR_MASTERY,
    QUEST_ID_CHARMANDER_MASTERY,
    QUEST_ID_SQUIRTLE_MASTERY,
    QUEST_ID_CATERPIE_MASTERY,
    QUEST_ID_WEEDLE_MASTERY,
    QUEST_ID_PIDGEY_MASTERY,
    QUEST_ID_PICHU_MASTERY,
    QUEST_ID_MEOWTH_MASTERY,
    QUEST_ID_ABRA_MASTERY,
    QUEST_ID_MACHOP_MASTERY,
    QUEST_ID_SLOWPOKE_MASTERY,
    QUEST_ID_GASTLY_MASTERY,
    QUEST_ID_ONIX_MASTERY,
    QUEST_ID_KRABBY_MASTERY,
    QUEST_ID_KANGASKHAN_MASTERY,
    QUEST_ID_PINSIR_MASTERY,
    QUEST_ID_SCYTHER_MASTERY,
    QUEST_ID_MAGIKARP_MASTERY,
    QUEST_ID_LAPRAS_MASTERY,
    QUEST_ID_EEVEE_MASTERY,
    QUEST_ID_AERODACTYL_MASTERY,
    QUEST_ID_SNORLAX_MASTERY,
    QUEST_ID_MEWTWO_MASTERY,
    QUEST_ID_MEW_MASTERY,
    QUEST_ID_MAREEP_MASTERY,
    QUEST_ID_HERACROSS_MASTERY,
    QUEST_ID_HOUNDOUR_MASTERY,
    QUEST_ID_LARVITAR_MASTERY,
    QUEST_ID_TREECKO_MASTERY,
    QUEST_ID_TORCHIC_MASTERY,
    QUEST_ID_MUDKIP_MASTERY,
    QUEST_ID_RALTS_MASTERY,
    QUEST_ID_SABLEYE_MASTERY,
    QUEST_ID_MAWILE_MASTERY,
    QUEST_ID_ARON_MASTERY,
    QUEST_ID_MEDITITE_MASTERY,
    QUEST_ID_ELECTRIKE_MASTERY,
    QUEST_ID_CARVANHA_MASTERY,
    QUEST_ID_NUMEL_MASTERY,
    QUEST_ID_SWABLU_MASTERY,
    QUEST_ID_SHUPPET_MASTERY,
    QUEST_ID_ABSOL_MASTERY,
    QUEST_ID_SNORUNT_MASTERY,
    QUEST_ID_BAGON_MASTERY,
    QUEST_ID_BELDUM_MASTERY,
    QUEST_ID_LATI_MASTERY,
#if defined(ROGUE_EXPANSION)
    QUEST_ID_LATIAS_MASTERY,
#endif
#if defined(ROGUE_EXPANSION)
    QUEST_ID_LATIOS_MASTERY,
#endif
    QUEST_ID_KYOGRE_MASTERY,
    QUEST_ID_GROUDON_MASTERY,
    QUEST_ID_DEOXYS_MASTERY,
#if defined(ROGUE_EXPANSION)
    QUEST_ID_BUNEARY_MASTERY,
#endif
#if defined(ROGUE_EXPANSION)
    QUEST_ID_GIBLE_MASTERY,
#endif
#if defined(ROGUE_EXPANSION)
    QUEST_ID_RIOLU_MASTERY,
#endif
#if defined(ROGUE_EXPANSION)
    QUEST_ID_SNOVER_MASTERY,
#endif
#if defined(ROGUE_EXPANSION)
    QUEST_ID_ROTOM_MASTERY,
#endif
#if defined(ROGUE_EXPANSION)
    QUEST_ID_DIALGA_MASTERY,
#endif
#if defined(ROGUE_EXPANSION)
    QUEST_ID_PALKIA_MASTERY,
#endif
#if defined(ROGUE_EXPANSION)
    QUEST_ID_GIRATINA_MASTERY,
#endif
#if defined(ROGUE_EXPANSION)
    QUEST_ID_SHAYMIN_MASTERY,
#endif
#if defined(ROGUE_EXPANSION)
    QUEST_ID_ARCEUS_MASTERY,
#endif
#if defined(ROGUE_EXPANSION)
    QUEST_ID_AUDINO_MASTERY,
#endif
#if defined(ROGUE_EXPANSION)
    QUEST_ID_TRUBBISH_MASTERY,
#endif
#if defined(ROGUE_EXPANSION)
    QUEST_ID_GENIE_MASTERY,
#endif
#if defined(ROGUE_EXPANSION)
    QUEST_ID_GENESECT_MASTERY,
#endif
#if defined(ROGUE_EXPANSION)
    QUEST_ID_FROAKIE_MASTERY,
#endif
#if defined(ROGUE_EXPANSION)
    QUEST_ID_ZYGARDE_MASTERY,
#endif
#if defined(ROGUE_EXPANSION)
    QUEST_ID_DIANCIE_MASTERY,
#endif
#if defined(ROGUE_EXPANSION)
    QUEST_ID_HOOPA_MASTERY,
#endif
#if defined(ROGUE_EXPANSION)
    QUEST_ID_ROWLET_MASTERY,
#endif
#if defined(ROGUE_EXPANSION)
    QUEST_ID_LITTEN_MASTERY,
#endif
#if defined(ROGUE_EXPANSION)
    QUEST_ID_POPPLIO_MASTERY,
#endif
#if defined(ROGUE_EXPANSION)
    QUEST_ID_ROCKRUFF_MASTERY,
#endif
#if defined(ROGUE_EXPANSION)
    QUEST_ID_MIMIKYU_MASTERY,
#endif
#if defined(ROGUE_EXPANSION)
    QUEST_ID_SILVALLY_MASTERY,
#endif
#if defined(ROGUE_EXPANSION)
    QUEST_ID_JANGMO_O_MASTERY,
#endif
#if defined(ROGUE_EXPANSION)
    QUEST_ID_TAPU_MASTERY,
#endif
#if defined(ROGUE_EXPANSION)
    QUEST_ID_COSMOG_MASTERY,
#endif
#if defined(ROGUE_EXPANSION)
    QUEST_ID_NECROZMA_MASTERY,
#endif
#if defined(ROGUE_EXPANSION)
    QUEST_ID_MAGEARNA_MASTERY,
#endif
#if defined(ROGUE_EXPANSION)
    QUEST_ID_MARSHADOW_MASTERY,
#endif
#if defined(ROGUE_EXPANSION)
    QUEST_ID_MELTAN_MASTERY,
#endif
#if defined(ROGUE_EXPANSION)
    QUEST_ID_GROOKEY_MASTERY,
#endif
#if defined(ROGUE_EXPANSION)
    QUEST_ID_SCORBUNNY_MASTERY,
#endif
#if defined(ROGUE_EXPANSION)
    QUEST_ID_SOBBLE_MASTERY,
#endif
#if defined(ROGUE_EXPANSION)
    QUEST_ID_ROOKIDEE_MASTERY,
#endif
#if defined(ROGUE_EXPANSION)
    QUEST_ID_BLIPBUG_MASTERY,
#endif
#if defined(ROGUE_EXPANSION)
    QUEST_ID_CHEWTLE_MASTERY,
#endif
#if defined(ROGUE_EXPANSION)
    QUEST_ID_ROLYCOLY_MASTERY,
#endif
#if defined(ROGUE_EXPANSION)
    QUEST_ID_APPLIN_MASTERY,
#endif
#if defined(ROGUE_EXPANSION)
    QUEST_ID_SILICOBRA_MASTERY,
#endif
#if defined(ROGUE_EXPANSION)
    QUEST_ID_TOXEL_MASTERY,
#endif
#if defined(ROGUE_EXPANSION)
    QUEST_ID_SIZZLIPEDE_MASTERY,
#endif
#if defined(ROGUE_EXPANSION)
    QUEST_ID_HATENNA_MASTERY,
#endif
#if defined(ROGUE_EXPANSION)
    QUEST_ID_IMPIDIMP_MASTERY,
#endif
#if defined(ROGUE_EXPANSION)
    QUEST_ID_MILCERY_MASTERY,
#endif
#if defined(ROGUE_EXPANSION)
    QUEST_ID_CUFANT_MASTERY,
#endif
#if defined(ROGUE_EXPANSION)
    QUEST_ID_DURALUDON_MASTERY,
#endif
#if defined(ROGUE_EXPANSION)
    QUEST_ID_ZACIAN_MASTERY,
#endif
#if defined(ROGUE_EXPANSION)
    QUEST_ID_ZAMAZENTA_MASTERY,
#endif
#if defined(ROGUE_EXPANSION)
    QUEST_ID_KUBFU_MASTERY,
#endif
#if defined(ROGUE_EXPANSION)
    QUEST_ID_OGERPON_MASTERY,
#endif
#if defined(ROGUE_EXPANSION)
    QUEST_ID_TERAPAGOS_MASTERY,
#endif
};

static u16 const sQuestAlphabeticalOrder[] =
{
    QUEST_ID_ABRA_MASTERY,
    QUEST_ID_ABSOL_MASTERY,
    QUEST_ID_AERODACTYL_MASTERY,
    QUEST_ID_AESTHETICS,
    QUEST_ID_ALL_SKILL,
#if defined(ROGUE_EXPANSION)
    QUEST_ID_ALOLA_STYLE,
#endif
    QUEST_ID_APOTHEOSIS,
#if defined(ROGUE_EXPANSION)
    QUEST_ID_APPLIN_MASTERY,
#endif
    QUEST_ID_AQUA_TRIUMPH,
#if defined(ROGUE_EXPANSION)
    QUEST_ID_ARCEUS_MASTERY,
#endif
    QUEST_ID_ARON_MASTERY,
#if defined(ROGUE_EXPANSION)
    QUEST_ID_AUDINO_MASTERY,
#endif
    QUEST_ID_BAGON_MASTERY,
#if defined(ROGUE_EXPANSION)
    QUEST_ID_BATTLE_GIMMICK,
#endif
    QUEST_ID_BELDUM_MASTERY,
    QUEST_ID_BIG_SAVER,
    QUEST_ID_BLASTING_OFF,
    QUEST_ID_BLESSINGS_FAVOUR,
#if defined(ROGUE_EXPANSION)
    QUEST_ID_BLIPBUG_MASTERY,
#endif
    QUEST_ID_BST_CROWN,
    QUEST_ID_BUG_MASTER,
    QUEST_ID_BULBASAUR_MASTERY,
#if defined(ROGUE_EXPANSION)
    QUEST_ID_BUNEARY_MASTERY,
#endif
    QUEST_ID_CANT_PICKEMARKQMARK,
    QUEST_ID_CARE_TACTICS,
    QUEST_ID_CARVANHA_MASTERY,
    QUEST_ID_CATERPIE_MASTERY,
    QUEST_ID_CHAMPION,
    QUEST_ID_CHAOS_MASTER,
    QUEST_ID_CHAOS_NOVICE,
    QUEST_ID_CHARMANDER_MASTERY,
#if defined(ROGUE_EXPANSION)
    QUEST_ID_CHEWTLE_MASTERY,
#endif
    QUEST_ID_COLLECTOR,
    QUEST_ID_COLLECTOR_PLUS,
    QUEST_ID_COLLECTOR_S,
    QUEST_ID_COLLECTOR_X,
#if defined(ROGUE_EXPANSION)
    QUEST_ID_COSMOG_MASTERY,
#endif
#if defined(ROGUE_EXPANSION)
    QUEST_ID_CUFANT_MASTERY,
#endif
    QUEST_ID_CURSED_BODY,
    QUEST_ID_DARK_MASTER,
    QUEST_ID_DEOXYS_MASTERY,
#if defined(ROGUE_EXPANSION)
    QUEST_ID_DIALGA_MASTERY,
#endif
#if defined(ROGUE_EXPANSION)
    QUEST_ID_DIANCIE_MASTERY,
#endif
    QUEST_ID_DIVERSITY,
    QUEST_ID_DOUBLE_TROUBLE,
    QUEST_ID_DRAGON_MASTER,
#if defined(ROGUE_EXPANSION)
    QUEST_ID_DURALUDON_MASTERY,
#endif
#if defined(ROGUE_EXPANSION)
    QUEST_ID_DYNAMAX,
#endif
    QUEST_ID_EEVEE_MASTERY,
    QUEST_ID_ELECTRIC_MASTER,
    QUEST_ID_ELECTRIKE_MASTERY,
    QUEST_ID_ELITE_MASTER,
    QUEST_ID_ELO_CLIMB,
    QUEST_ID_ENTICING_POKEBLOCK,
#if defined(ROGUE_EXPANSION)
    QUEST_ID_FAIRY_MASTER,
#endif
    QUEST_ID_FATEFUL_ENCOUNTER,
    QUEST_ID_FIGHTING_MASTER,
    QUEST_ID_FIRE_MASTER,
    QUEST_ID_FLYING_MASTER,
#if defined(ROGUE_EXPANSION)
    QUEST_ID_FROAKIE_MASTERY,
#endif
#if defined(ROGUE_EXPANSION)
    QUEST_ID_GALACTIC_TRIUMPH,
#endif
#if defined(ROGUE_EXPANSION)
    QUEST_ID_GALAR_STYLE,
#endif
    QUEST_ID_GASTLY_MASTERY,
#if defined(ROGUE_EXPANSION)
    QUEST_ID_GENESECT_MASTERY,
#endif
#if defined(ROGUE_EXPANSION)
    QUEST_ID_GENIE_MASTERY,
#endif
    QUEST_ID_GHOST_MASTER,
#if defined(ROGUE_EXPANSION)
    QUEST_ID_GIBLE_MASTERY,
#endif
#if defined(ROGUE_EXPANSION)
    QUEST_ID_GIMMICK_OVERFLOW,
#endif
#if defined(ROGUE_EXPANSION)
    QUEST_ID_GIRATINA_MASTERY,
#endif
    QUEST_ID_GRASS_MASTER,
#if defined(ROGUE_EXPANSION)
    QUEST_ID_GROOKEY_MASTERY,
#endif
    QUEST_ID_GROUDON_MASTERY,
    QUEST_ID_GROUND_MASTER,
    QUEST_ID_GYM_BADGE_1,
    QUEST_ID_GYM_BADGE_2,
    QUEST_ID_GYM_BADGE_3,
    QUEST_ID_GYM_BADGE_4,
    QUEST_ID_GYM_BADGE_5,
    QUEST_ID_GYM_BADGE_6,
    QUEST_ID_GYM_BADGE_7,
    QUEST_ID_GYM_BADGE_8,
#if defined(ROGUE_EXPANSION)
    QUEST_ID_HATENNA_MASTERY,
#endif
    QUEST_ID_HERACROSS_MASTERY,
    QUEST_ID_HIDDEN_GROTTO,
    QUEST_ID_HOENN_STYLE,
#if defined(ROGUE_EXPANSION)
    QUEST_ID_HOOPA_MASTERY,
#endif
    QUEST_ID_HOUNDOUR_MASTERY,
    QUEST_ID_ICE_MASTER,
#if defined(ROGUE_EXPANSION)
    QUEST_ID_IMPIDIMP_MASTERY,
#endif
    QUEST_ID_INSANE_MODE,
    QUEST_ID_IRON_KAIZO,
    QUEST_ID_IRON_MONO,
    QUEST_ID_I_AM_SPEED,
#if defined(ROGUE_EXPANSION)
    QUEST_ID_JANGMO_O_MASTERY,
#endif
    QUEST_ID_JOHTO_STYLE,
#if defined(ROGUE_EXPANSION)
    QUEST_ID_KALOS_STYLE,
#endif
    QUEST_ID_KANGASKHAN_MASTERY,
    QUEST_ID_KANTO_STYLE,
    QUEST_ID_KRABBY_MASTERY,
#if defined(ROGUE_EXPANSION)
    QUEST_ID_KUBFU_MASTERY,
#endif
    QUEST_ID_KYOGRE_MASTERY,
    QUEST_ID_LAPRAS_MASTERY,
    QUEST_ID_LARVITAR_MASTERY,
#if defined(ROGUE_EXPANSION)
    QUEST_ID_LATIAS_MASTERY,
#endif
#if defined(ROGUE_EXPANSION)
    QUEST_ID_LATIOS_MASTERY,
#endif
    QUEST_ID_LATI_MASTERY,
    QUEST_ID_LIMITED_CAPTURE,
#if defined(ROGUE_EXPANSION)
    QUEST_ID_LITTEN_MASTERY,
#endif
    QUEST_ID_LONG_HAUL,
    QUEST_ID_MACHOP_MASTERY,
#if defined(ROGUE_EXPANSION)
    QUEST_ID_MAGEARNA_MASTERY,
#endif
    QUEST_ID_MAGIKARP_MASTERY,
    QUEST_ID_MAGMA_TRIUMPH,
    QUEST_ID_MANKEYS_PAW,
    QUEST_ID_MAREEP_MASTERY,
#if defined(ROGUE_EXPANSION)
    QUEST_ID_MARSHADOW_MASTERY,
#endif
    QUEST_ID_MAWILE_MASTERY,
    QUEST_ID_MEDITITE_MASTERY,
#if defined(ROGUE_EXPANSION)
    QUEST_ID_MEGA_EVOLUTION,
#endif
#if defined(ROGUE_EXPANSION)
    QUEST_ID_MELTAN_MASTERY,
#endif
    QUEST_ID_MEOWTH_MASTERY,
    QUEST_ID_MEWTWO_MASTERY,
    QUEST_ID_MEW_MASTERY,
#if defined(ROGUE_EXPANSION)
    QUEST_ID_MILCERY_MASTERY,
#endif
#if defined(ROGUE_EXPANSION)
    QUEST_ID_MIMIKYU_MASTERY,
#endif
    QUEST_ID_MR_RANDOMAN,
    QUEST_ID_MUDKIP_MASTERY,
#if defined(ROGUE_EXPANSION)
    QUEST_ID_NECROZMA_MASTERY,
#endif
    QUEST_ID_NORMAL_MASTER,
    QUEST_ID_NOT_TODAYEMARK,
    QUEST_ID_NUMEL_MASTERY,
#if defined(ROGUE_EXPANSION)
    QUEST_ID_OGERPON_MASTERY,
#endif
    QUEST_ID_ONE_LAST_QUEST,
    QUEST_ID_ONIX_MASTERY,
    QUEST_ID_ORRE_STYLE,
#if defined(ROGUE_EXPANSION)
    QUEST_ID_PALDEA_STYLE,
#endif
#if defined(ROGUE_EXPANSION)
    QUEST_ID_PALKIA_MASTERY,
#endif
    QUEST_ID_PICHU_MASTERY,
    QUEST_ID_PIDGEY_MASTERY,
    QUEST_ID_PINSIR_MASTERY,
    QUEST_ID_POISON_MASTER,
    QUEST_ID_POKE_BALL_GOEMARK,
#if defined(ROGUE_EXPANSION)
    QUEST_ID_POPPLIO_MASTERY,
#endif
    QUEST_ID_POST_GAMEQMARK,
    QUEST_ID_PRO_BUILDING,
    QUEST_ID_PSYCHIC_MASTER,
    QUEST_ID_RALTS_MASTERY,
    QUEST_ID_REGIONAL_STYLE,
#if defined(ROGUE_EXPANSION)
    QUEST_ID_RIOLU_MASTERY,
#endif
    QUEST_ID_ROCKET_TRIUMPH,
#if defined(ROGUE_EXPANSION)
    QUEST_ID_ROCKRUFF_MASTERY,
#endif
    QUEST_ID_ROCK_MASTER,
    QUEST_ID_ROGUELOCKE,
#if defined(ROGUE_EXPANSION)
    QUEST_ID_ROLYCOLY_MASTERY,
#endif
#if defined(ROGUE_EXPANSION)
    QUEST_ID_ROOKIDEE_MASTERY,
#endif
#if defined(ROGUE_EXPANSION)
    QUEST_ID_ROTOM_MASTERY,
#endif
#if defined(ROGUE_EXPANSION)
    QUEST_ID_ROWLET_MASTERY,
#endif
    QUEST_ID_SABLEYE_MASTERY,
#if defined(ROGUE_EXPANSION)
    QUEST_ID_SCORBUNNY_MASTERY,
#endif
    QUEST_ID_SCYTHER_MASTERY,
#if defined(ROGUE_EXPANSION)
    QUEST_ID_SHAYMIN_MASTERY,
#endif
    QUEST_ID_SHINY_A_DAY,
    QUEST_ID_SHOPPING_SPREE,
    QUEST_ID_SHUPPET_MASTERY,
#if defined(ROGUE_EXPANSION)
    QUEST_ID_SILICOBRA_MASTERY,
#endif
#if defined(ROGUE_EXPANSION)
    QUEST_ID_SILVALLY_MASTERY,
#endif
#if defined(ROGUE_EXPANSION)
    QUEST_ID_SINNOH_STYLE,
#endif
#if defined(ROGUE_EXPANSION)
    QUEST_ID_SIZZLIPEDE_MASTERY,
#endif
    QUEST_ID_SLOWPOKE_MASTERY,
    QUEST_ID_SMART_TACTICS,
    QUEST_ID_SNORLAX_MASTERY,
    QUEST_ID_SNORUNT_MASTERY,
#if defined(ROGUE_EXPANSION)
    QUEST_ID_SNOVER_MASTERY,
#endif
#if defined(ROGUE_EXPANSION)
    QUEST_ID_SOBBLE_MASTERY,
#endif
    QUEST_ID_SQUIRTLE_MASTERY,
    QUEST_ID_STEEL_MASTER,
    QUEST_ID_SWABLU_MASTERY,
#if defined(ROGUE_EXPANSION)
    QUEST_ID_TAPU_MASTERY,
#endif
#if !defined(ROGUE_EXPANSION)
    QUEST_ID_TASTE_THE_RAINBOW,
#endif
#if defined(ROGUE_EXPANSION)
    QUEST_ID_TASTE_THE_RAINBOW,
#endif
#if defined(ROGUE_EXPANSION)
    QUEST_ID_TERAPAGOS_MASTERY,
#endif
#if defined(ROGUE_EXPANSION)
    QUEST_ID_TERASTALLIZATION,
#endif
#if !defined(ROGUE_EXPANSION)
    QUEST_ID_THE_FINAL_RUN,
#endif
#if defined(ROGUE_EXPANSION)
    QUEST_ID_THE_FINAL_RUN,
#endif
    QUEST_ID_TORCHIC_MASTERY,
#if defined(ROGUE_EXPANSION)
    QUEST_ID_TOXEL_MASTERY,
#endif
    QUEST_ID_TO_ADVENTUREEMARK,
    QUEST_ID_TREECKO_MASTERY,
#if defined(ROGUE_EXPANSION)
    QUEST_ID_TRUBBISH_MASTERY,
#endif
    QUEST_ID_TRUE_LEGEND,
    QUEST_ID_TRUE_TACTICS,
    QUEST_ID_TYPE_MASTER,
#if defined(ROGUE_EXPANSION)
    QUEST_ID_UNOVA_STYLE,
#endif
    QUEST_ID_WATER_MASTER,
    QUEST_ID_WEEDLE_MASTERY,
    QUEST_ID_WELCOME_HOME,
#if defined(ROGUE_EXPANSION)
    QUEST_ID_ZACIAN_MASTERY,
#endif
#if defined(ROGUE_EXPANSION)
    QUEST_ID_ZAMAZENTA_MASTERY,
#endif
#if defined(ROGUE_EXPANSION)
    QUEST_ID_ZYGARDE_MASTERY,
#endif
#if defined(ROGUE_EXPANSION)
    QUEST_ID_Z_MOVES,
#endif
};

